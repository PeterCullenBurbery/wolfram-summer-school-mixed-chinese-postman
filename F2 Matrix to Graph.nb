(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    315318,       5810]
NotebookOptionsPosition[    308726,       5692]
NotebookOutlinePosition[    309126,       5708]
CellTagsIndexPosition[    309083,       5705]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["\<\
MCPP[graph_?GraphQ] := Block[{optimum}, 
optimum = LinearOptimization[

];

]\
\>", "Program",
 CellChangeTimes->{{3.866635523541109*^9, 
  3.8666356533563704`*^9}},ExpressionUUID->"5f0afc1c-31bd-48e6-9dc7-\
cab5546c5a1e"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<PeterBurbery`MixedGraphs`\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.86663567504548*^9, 3.866635685604006*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"9a3cfa9e-edfa-42fe-8eb7-6f4a3e659eb6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"example", "=", 
  RowBox[{"Graph", "[", 
   RowBox[{
    RowBox[{"RandomMixedGraph", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"15", ",", "35"}], "}"}], ",", "0.5"}], "]"}], ",", 
    RowBox[{"ImageSize", "->", "Large"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.866635664970498*^9, 3.866635672211649*^9}, {
  3.8666357051173944`*^9, 3.866635722936822*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"9928a39f-9eb5-44ec-ab61-75fecd0d481c"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 
      15}, CompressedData["
1:eJxTTMoPymNmYGBgAmJ+KCYEGHHQ+NTiE8ennxRzSAWMROgn13xs+ogJL2oD
Su2iNHxHAf0AenrGxsaWBqmRRynJw8QCaubFwa6XGvqpZdZIzccAn+QB+Q==

      "], {GraphLayout -> {"Dimension" -> 2}, ImageSize -> Large}]]}, 
    TagBox[
     GraphicsGroupBox[
      GraphicsComplexBox[{{0.3693152077349119, 1.2841316876756415`}, {
       1.3122513386416301`, 0.7530466351367133}, {1.043372249399952, 
       1.8742241857163928`}, {0.8024037929860818, 2.4261201926369322`}, {
       2.157459273272506, 0.}, {2.1960225164262734`, 1.7554773544233337`}, {
       1.921093361604867, 2.637044641605266}, {1.664911798725028, 
       0.7262113624599614}, {1.7267341142834989`, 1.7593069802674532`}, {
       2.2850350169513325`, 0.930916046830871}, {0.7589633376445348, 
       0.46989616646589916`}, {2.939078155313374, 1.645675325075382}, {
       0.0154534753686153, 0.33480690071802477`}, {1.2173115720318566`, 
       1.3658336114911718`}, {0., 2.2640750971760975`}}, {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
         {Arrowheads[0.], ArrowBox[{1, 14}, 0.029801033366662927`]}, 
         {Arrowheads[0.], ArrowBox[{1, 15}, 0.029801033366662927`]}, 
         ArrowBox[{1, 13}, 0.029801033366662927`], 
         {Arrowheads[0.], ArrowBox[{1, 9}, 0.029801033366662927`]}, 
         {Arrowheads[0.], ArrowBox[{1, 11}, 0.029801033366662927`]}, 
         {Arrowheads[0.], ArrowBox[{2, 3}, 0.029801033366662927`]}, 
         {Arrowheads[0.], ArrowBox[{2, 6}, 0.029801033366662927`]}, 
         {Arrowheads[0.], ArrowBox[{2, 8}, 0.029801033366662927`]}, 
         {Arrowheads[0.], ArrowBox[{2, 10}, 0.029801033366662927`]}, 
         {Arrowheads[0.], ArrowBox[{2, 13}, 0.029801033366662927`]}, 
         ArrowBox[{2, 5}, 0.029801033366662927`], 
         ArrowBox[{2, 14}, 0.029801033366662927`], 
         {Arrowheads[0.], ArrowBox[{2, 11}, 0.029801033366662927`]}, 
         {Arrowheads[0.], ArrowBox[{3, 4}, 0.029801033366662927`]}, 
         {Arrowheads[0.], ArrowBox[{3, 7}, 0.029801033366662927`]}, 
         {Arrowheads[0.], ArrowBox[{3, 15}, 0.029801033366662927`]}, 
         ArrowBox[{3, 8}, 0.029801033366662927`], 
         ArrowBox[{3, 14}, 0.029801033366662927`], 
         {Arrowheads[0.], ArrowBox[{4, 9}, 0.029801033366662927`]}, 
         ArrowBox[{4, 15}, 0.029801033366662927`], 
         {Arrowheads[0.], ArrowBox[{4, 14}, 0.029801033366662927`]}, 
         {Arrowheads[0.], ArrowBox[{5, 10}, 0.029801033366662927`]}, 
         ArrowBox[{5, 8}, 0.029801033366662927`], 
         {Arrowheads[0.], ArrowBox[{6, 9}, 0.029801033366662927`]}, 
         ArrowBox[{6, 7}, 0.029801033366662927`], 
         ArrowBox[{6, 14}, 0.029801033366662927`], 
         {Arrowheads[0.], ArrowBox[{6, 12}, 0.029801033366662927`]}, 
         {Arrowheads[0.], ArrowBox[{7, 9}, 0.029801033366662927`]}, 
         {Arrowheads[0.], ArrowBox[{8, 9}, 0.029801033366662927`]}, 
         ArrowBox[{8, 11}, 0.029801033366662927`], 
         {Arrowheads[0.], ArrowBox[{9, 10}, 0.029801033366662927`]}, 
         ArrowBox[{9, 12}, 0.029801033366662927`], 
         {Arrowheads[0.], ArrowBox[{10, 14}, 0.029801033366662927`]}, 
         ArrowBox[{10, 12}, 0.029801033366662927`], 
         {Arrowheads[0.], ArrowBox[{11, 14}, 0.029801033366662927`]}}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.029801033366662927], DiskBox[2, 0.029801033366662927], 
         DiskBox[3, 0.029801033366662927], DiskBox[4, 0.029801033366662927], 
         DiskBox[5, 0.029801033366662927], DiskBox[6, 0.029801033366662927], 
         DiskBox[7, 0.029801033366662927], DiskBox[8, 0.029801033366662927], 
         DiskBox[9, 0.029801033366662927], DiskBox[10, 0.029801033366662927], 
         DiskBox[11, 0.029801033366662927], DiskBox[12, 0.029801033366662927],
          DiskBox[13, 0.029801033366662927], 
         DiskBox[14, 0.029801033366662927], 
         DiskBox[15, 0.029801033366662927]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->Large]], "Output",
 CellChangeTimes->{{3.8666356726053534`*^9, 3.866635723247342*^9}},
 CellLabel->"Out[28]=",ExpressionUUID->"7e5b4920-9d7b-4aca-a87a-a2fdac5ae43f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EulerianGraphQ", "[", "example", "]"}]], "Input",
 CellChangeTimes->{{3.866635697079544*^9, 3.8666357371559696`*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"ba8b733d-c319-4dfd-8286-048fedd2c95b"],

Cell[BoxData[
 TemplateBox[{
  "EulerianGraphQ", "ngen", 
   "\"The generalized \\!\\(\\*PaneBox[\\\"\\\\\\\"EulerianGraphQ[Graph[<15>, \
<35>]]\\\\\\\"\\\", Rule[BaselinePosition, Baseline]]\\) is not \
implemented.\"", 2, 29, 2, 19443610903929340366, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.866635737421966*^9},
 CellLabel->
  "During evaluation of \
In[29]:=",ExpressionUUID->"2fc1eabb-8f08-4564-bb95-e19f6b5ba251"],

Cell[BoxData[
 RowBox[{"EulerianGraphQ", "[", 
  GraphicsBox[
   NamespaceBox["NetworkGraphics",
    DynamicModuleBox[{Typeset`graph = HoldComplete[
      Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 
       15}, CompressedData["
1:eJxTTMoPymNmYGBgAmJ+KCYEGHHQ+NTiE8ennxRzSAWMROgn13xs+ogJL2oD
Su2iNHxHAf0AenrGxsaWBqmRRynJw8QCaubFwa6XGvqpZdZIzccAn+QB+Q==

       "], {GraphLayout -> {"Dimension" -> 2}, ImageSize -> Large}]]}, 
     TagBox[
      GraphicsGroupBox[
       GraphicsComplexBox[{{0.3693152077349119, 1.2841316876756415`}, {
        1.3122513386416301`, 0.7530466351367133}, {1.043372249399952, 
        1.8742241857163928`}, {0.8024037929860818, 2.4261201926369322`}, {
        2.157459273272506, 0.}, {2.1960225164262734`, 1.7554773544233337`}, {
        1.921093361604867, 2.637044641605266}, {1.664911798725028, 
        0.7262113624599614}, {1.7267341142834989`, 1.7593069802674532`}, {
        2.2850350169513325`, 0.930916046830871}, {0.7589633376445348, 
        0.46989616646589916`}, {2.939078155313374, 1.645675325075382}, {
        0.0154534753686153, 0.33480690071802477`}, {1.2173115720318566`, 
        1.3658336114911718`}, {0., 2.2640750971760975`}}, {
         {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
          {Arrowheads[0.], ArrowBox[{1, 14}, 0.029801033366662927`]}, 
          {Arrowheads[0.], ArrowBox[{1, 15}, 0.029801033366662927`]}, 
          ArrowBox[{1, 13}, 0.029801033366662927`], 
          {Arrowheads[0.], ArrowBox[{1, 9}, 0.029801033366662927`]}, 
          {Arrowheads[0.], ArrowBox[{1, 11}, 0.029801033366662927`]}, 
          {Arrowheads[0.], ArrowBox[{2, 3}, 0.029801033366662927`]}, 
          {Arrowheads[0.], ArrowBox[{2, 6}, 0.029801033366662927`]}, 
          {Arrowheads[0.], ArrowBox[{2, 8}, 0.029801033366662927`]}, 
          {Arrowheads[0.], ArrowBox[{2, 10}, 0.029801033366662927`]}, 
          {Arrowheads[0.], ArrowBox[{2, 13}, 0.029801033366662927`]}, 
          ArrowBox[{2, 5}, 0.029801033366662927`], 
          ArrowBox[{2, 14}, 0.029801033366662927`], 
          {Arrowheads[0.], ArrowBox[{2, 11}, 0.029801033366662927`]}, 
          {Arrowheads[0.], ArrowBox[{3, 4}, 0.029801033366662927`]}, 
          {Arrowheads[0.], ArrowBox[{3, 7}, 0.029801033366662927`]}, 
          {Arrowheads[0.], ArrowBox[{3, 15}, 0.029801033366662927`]}, 
          ArrowBox[{3, 8}, 0.029801033366662927`], 
          ArrowBox[{3, 14}, 0.029801033366662927`], 
          {Arrowheads[0.], ArrowBox[{4, 9}, 0.029801033366662927`]}, 
          ArrowBox[{4, 15}, 0.029801033366662927`], 
          {Arrowheads[0.], ArrowBox[{4, 14}, 0.029801033366662927`]}, 
          {Arrowheads[0.], ArrowBox[{5, 10}, 0.029801033366662927`]}, 
          ArrowBox[{5, 8}, 0.029801033366662927`], 
          {Arrowheads[0.], ArrowBox[{6, 9}, 0.029801033366662927`]}, 
          ArrowBox[{6, 7}, 0.029801033366662927`], 
          ArrowBox[{6, 14}, 0.029801033366662927`], 
          {Arrowheads[0.], ArrowBox[{6, 12}, 0.029801033366662927`]}, 
          {Arrowheads[0.], ArrowBox[{7, 9}, 0.029801033366662927`]}, 
          {Arrowheads[0.], ArrowBox[{8, 9}, 0.029801033366662927`]}, 
          ArrowBox[{8, 11}, 0.029801033366662927`], 
          {Arrowheads[0.], ArrowBox[{9, 10}, 0.029801033366662927`]}, 
          ArrowBox[{9, 12}, 0.029801033366662927`], 
          {Arrowheads[0.], ArrowBox[{10, 14}, 0.029801033366662927`]}, 
          ArrowBox[{10, 12}, 0.029801033366662927`], 
          {Arrowheads[0.], ArrowBox[{11, 14}, 0.029801033366662927`]}}, 
         {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
          DiskBox[1, 0.029801033366662927], DiskBox[2, 0.029801033366662927], 
          DiskBox[3, 0.029801033366662927], DiskBox[4, 0.029801033366662927], 
          DiskBox[5, 0.029801033366662927], DiskBox[6, 0.029801033366662927], 
          DiskBox[7, 0.029801033366662927], DiskBox[8, 0.029801033366662927], 
          DiskBox[9, 0.029801033366662927], DiskBox[10, 0.029801033366662927],
           DiskBox[11, 0.029801033366662927], 
          DiskBox[12, 0.029801033366662927], 
          DiskBox[13, 0.029801033366662927], 
          DiskBox[14, 0.029801033366662927], 
          DiskBox[15, 0.029801033366662927]}}]],
      MouseAppearanceTag["NetworkGraphics"]],
     AllowKernelInitialization->False]],
   DefaultBaseStyle->{
    "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
   FormatType->TraditionalForm,
   FrameTicks->None,
   ImageSize->Large], "]"}]], "Output",
 CellChangeTimes->{3.866635737498971*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"264e354b-95a7-434a-8cb0-999453f58ac7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"IncidenceMatrix", "[", "example", "]"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.8666358814040194`*^9, 3.86663589068*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"665935e9-a7a7-4e22-805c-406df369bd66"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "1", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "1", "0", "0", "0", "0", "1", "1", "1", "0", "0", "0", "0", "0", 
      "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0", 
      "0"},
     {"0", "0", "0", "1", "0", "0", "0", "0", "0", "0", 
      RowBox[{"-", "1"}], "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", 
      "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", 
      "0", "0", "1", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "1", "0", "0", "0", 
      RowBox[{"-", "1"}], "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "1", "0", "0", "0"},
     {"0", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", 
      RowBox[{"-", "1"}], "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "1", "0", "1", "1", "1", "1", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", 
      RowBox[{"-", "1"}], "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", 
      "0", "1", "0", "0", "0", "1", "1", "0"},
     {"0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0", 
      "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "1"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", 
      "0", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0"},
     {"1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "1", "0", "0", "1", "0", "1", "0", "0", "1", "0", 
      "0", "0", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "1", "1"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "0", "0", "1", "0", 
      "0", "0", "0", "0", "0", "0", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[
   SparseArray[
    Automatic, {15, 35}, 0, {
     1, {{0, 5, 13, 19, 23, 26, 31, 34, 39, 46, 51, 55, 58, 60, 67, 70}, {{
       1}, {2}, {3}, {18}, {19}, {4}, {5}, {6}, {20}, {21}, {22}, {23}, {
       24}, {7}, {8}, {20}, {25}, {26}, {27}, {9}, {10}, {25}, {28}, {4}, {
       11}, {29}, {12}, {13}, {14}, {21}, {30}, {12}, {26}, {31}, {7}, {11}, {
       15}, {22}, {32}, {2}, {16}, {28}, {30}, {31}, {32}, {33}, {17}, {23}, {
       29}, {33}, {34}, {3}, {6}, {15}, {35}, {14}, {16}, {17}, {1}, {24}, {
       5}, {8}, {10}, {13}, {18}, {34}, {35}, {9}, {19}, {27}}}, {-1, -1, -1, 
      1, 1, -1, -1, -1, 1, 1, 1, 1, 1, -1, -1, 1, 1, 1, 1, -1, -1, 1, 1, 
      1, -1, 1, -1, -1, -1, 1, 1, 1, 1, 1, 1, 1, -1, 1, 1, 1, -1, 1, 1, 1, 1, 
      1, -1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1}}]]]]], "Output",
 CellChangeTimes->{{3.866635885409232*^9, 3.866635891136857*^9}},
 CellLabel->
  "Out[31]//MatrixForm=",ExpressionUUID->"8ef49ca5-d3b7-4dd2-b0ab-\
c9540dbc5803"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IncidenceGraph", "[", 
  RowBox[{"IncidenceMatrix", "[", "example", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.866635899274462*^9, 3.8666359036592464`*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"250d032e-d3b4-4fa1-a817-899cbac71274"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 
      15}, {{{1, 13}, {1, 9}, {1, 11}, {2, 5}, {2, 14}, {2, 11}, {3, 8}, {3, 
       14}, {4, 15}, {4, 14}, {5, 8}, {6, 7}, {6, 14}, {6, 12}, {8, 11}, {9, 
       12}, {10, 12}}, {{1, 14}, {1, 15}, {2, 3}, {2, 6}, {2, 8}, {2, 10}, {2,
        13}, {3, 4}, {3, 7}, {3, 15}, {4, 9}, {5, 10}, {6, 9}, {7, 9}, {8, 
       9}, {9, 10}, {10, 14}, {11, 14}}}]]}, 
    TagBox[
     GraphicsGroupBox[
      GraphicsComplexBox[{{0.36576379142275484`, 1.2893855516648927`}, {
       1.3066037685929102`, 0.7550314310352997}, {1.041127630075383, 
       1.8771740491657405`}, {0.8018701488836456, 2.429117145111719}, {
       2.149314778745909, 0.}, {2.193670638431944, 1.7543778090975888`}, {
       1.9209872574659543`, 2.638176757502868}, {1.6595885420007044`, 
       0.726968842212472}, {1.7252877025634, 1.7609369207372467`}, {
       2.280278526779681, 0.9314853412113479}, {0.7520039353039328, 
       0.4734780722106603}, {2.9376289810913936`, 1.644140559392914}, {
       0.009295241845292734, 0.3414807195325742}, {1.2145584790295483`, 
       1.36898252664473}, {0., 2.2695533856719114`}}, {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
         {Arrowheads[0.], ArrowBox[{1, 14}, 0.029790563771256523`]}, 
         {Arrowheads[0.], ArrowBox[{1, 15}, 0.029790563771256523`]}, 
         ArrowBox[{1, 9}, 0.029790563771256523`], 
         ArrowBox[{1, 11}, 0.029790563771256523`], 
         ArrowBox[{1, 13}, 0.029790563771256523`], 
         {Arrowheads[0.], ArrowBox[{2, 3}, 0.029790563771256523`]}, 
         {Arrowheads[0.], ArrowBox[{2, 6}, 0.029790563771256523`]}, 
         {Arrowheads[0.], ArrowBox[{2, 8}, 0.029790563771256523`]}, 
         {Arrowheads[0.], ArrowBox[{2, 10}, 0.029790563771256523`]}, 
         {Arrowheads[0.], ArrowBox[{2, 13}, 0.029790563771256523`]}, 
         ArrowBox[{2, 5}, 0.029790563771256523`], 
         ArrowBox[{2, 11}, 0.029790563771256523`], 
         ArrowBox[{2, 14}, 0.029790563771256523`], 
         {Arrowheads[0.], ArrowBox[{3, 4}, 0.029790563771256523`]}, 
         {Arrowheads[0.], ArrowBox[{3, 7}, 0.029790563771256523`]}, 
         {Arrowheads[0.], ArrowBox[{3, 15}, 0.029790563771256523`]}, 
         ArrowBox[{3, 8}, 0.029790563771256523`], 
         ArrowBox[{3, 14}, 0.029790563771256523`], 
         {Arrowheads[0.], ArrowBox[{4, 9}, 0.029790563771256523`]}, 
         ArrowBox[{4, 14}, 0.029790563771256523`], 
         ArrowBox[{4, 15}, 0.029790563771256523`], 
         {Arrowheads[0.], ArrowBox[{5, 10}, 0.029790563771256523`]}, 
         ArrowBox[{5, 8}, 0.029790563771256523`], 
         {Arrowheads[0.], ArrowBox[{6, 9}, 0.029790563771256523`]}, 
         ArrowBox[{6, 7}, 0.029790563771256523`], 
         ArrowBox[{6, 12}, 0.029790563771256523`], 
         ArrowBox[{6, 14}, 0.029790563771256523`], 
         {Arrowheads[0.], ArrowBox[{7, 9}, 0.029790563771256523`]}, 
         {Arrowheads[0.], ArrowBox[{8, 9}, 0.029790563771256523`]}, 
         ArrowBox[{8, 11}, 0.029790563771256523`], 
         {Arrowheads[0.], ArrowBox[{9, 10}, 0.029790563771256523`]}, 
         ArrowBox[{9, 12}, 0.029790563771256523`], 
         {Arrowheads[0.], ArrowBox[{10, 14}, 0.029790563771256523`]}, 
         ArrowBox[{10, 12}, 0.029790563771256523`], 
         {Arrowheads[0.], ArrowBox[{11, 14}, 0.029790563771256523`]}}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.029790563771256523], DiskBox[2, 0.029790563771256523], 
         DiskBox[3, 0.029790563771256523], DiskBox[4, 0.029790563771256523], 
         DiskBox[5, 0.029790563771256523], DiskBox[6, 0.029790563771256523], 
         DiskBox[7, 0.029790563771256523], DiskBox[8, 0.029790563771256523], 
         DiskBox[9, 0.029790563771256523], DiskBox[10, 0.029790563771256523], 
         DiskBox[11, 0.029790563771256523], DiskBox[12, 0.029790563771256523],
          DiskBox[13, 0.029790563771256523], 
         DiskBox[14, 0.029790563771256523], 
         DiskBox[15, 0.029790563771256523]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.866635904102112*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"f5af8100-17cf-4566-ad87-1311db1872b3"]
}, Open  ]],

Cell["\<\
We make a mixed graph that is not Eulerian into an Eulerian graph:\
\>", "Text",
 CellChangeTimes->{{3.866636103989608*^9, 
  3.8666361229994187`*^9}},ExpressionUUID->"3d545a5d-b5d0-4504-99ab-\
f3a3e81f83be"],

Cell["We add extra edges and we have an Eulerian graph.", "Text",
 CellChangeTimes->{{3.8666361565642548`*^9, 
  3.8666361700761185`*^9}},ExpressionUUID->"e0f037c4-4b12-45b1-ac13-\
22e213f1f6fb"],

Cell["We solve the Eulerian graph MCPP.", "Text",
 CellChangeTimes->{{3.866636172377756*^9, 
  3.866636190559783*^9}},ExpressionUUID->"97241d36-3ba1-4cc5-8aba-\
6c2c46a89e78"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsnQeUFUXz9smCklYBQZGsgCTJGVSS5CSSc1AkSBJQMioiShBERXKWqKKA
kpNIVDJIUpLkJJKF+X7/qUN/887ce9lddpd1bz0H9szt6enprqquerqneyZj
i7dqtYkTK1asrgn5U6t5j5e6dGn+Tu3k/KjTsWvb1zu2blWxY7fWr7fuUqRF
XBKf508d/v/fca3X6jv/Va9Vp0r1Wq9UqVbulcovlatQ6qUyxUqWthSKGIFG
jRp17NjR/Ny3b1+ePHnCVMLGjRuTJEly5coV+Xn37t3y5cuvXr06Imv5v2jQ
oEGnTp0ir3yFQjB16tS5c+c+7FpYp06d6tGjx4ULFx52RaIL8FpTpkyJkKJa
tWr11Vdf+TyFE8PV4NAi5EaKaA54HexO6Z8ieLBixYoUKVKMHj168+bNS5cu
rVOnzo4dO8JUwq1bt0qXLl2pUqWff/6ZQgYMGNC/f/9Iqi2u+N9//y1ZsmTN
mjXVLSsUwQno34svvtjaxokTJ8JRwsqVK+XyrFmz+qN/ls3/d+3a9QA1Vfxn
oPRPEYS4cOHCzJkzx4wZ8/3338PlwlfImjVrKGH8+PHHjx+P2Oo5QfXG3MN3
330XeTdSKBTRFsuXLzd+4Pz58+EoYffu3aaEPXv2RHgNFf85KP1TKBQKhUKh
CCoo/VMoFAqFQqEIKij9U8QA3LXxsGuhUCgUCsV/A0r/FFGMa9euHT58OHAe
uNzu3bsDZDh27NjYsWOXLFkirG/06NGDBg1SBqhQKBQKRWig9E8RxejQoUPj
xo0D55k2bdpzzz3n8xQcD6aXIkWKJEmSxIoVq2nTpsL66tWr99NPP0V8dRUK
hUKhiHFQ+qeISixfvjx27NgjRowIkOf48eMhISH169f3eXbkyJEDBw68ffv2
9evXCxYsCAP87bffSP/zzz+zZMlCYqTUW6FQKBSKGASlf4oow/nz57t3754w
YcIA9O/u3btt27YtVqyYP/rnfLvyhAkToH9Lly6Vn/Xq1Rs7dmzE1lmhUCgU
ipgHpX+KqAG8rlu3bhcvXgxM/7744ostW7aULl3aH/1zAvqXIEGCkydPys/Z
s2cXKFAgwmqsUCgUCkUMhdI/RdRg4sSJ33zzDQcB6N+OHTv69OnDQSjpX/Pm
zZs2bWp+Hjt2LFGiRDDMiKmxQqFQKBQxFEr/FFGA/fv3N2vWTI790b9r165V
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
RJSQGP/o0/Tq1asOHTqI841ERERkRYx/9GnauHGjqiYhERERWQXjHxEREZGu
MP4RERER6QrjHxEREZGuMP4RERER6QrjHxEREZGuMP4RERER6QrjHxEREZGu
MP4RERER6QrjHxEREZGuMP4RERER6QrjHxEREZGuMP4RERER6QrjHxEREZGu
MP4RERER6QrjHxEREZGuMP4RERER6QrjHxEREZGuMP4RERER6QrjHxEREZGu
MP4RERER6QrjHxEREZGuMP4RERER6QrjHxEREZGuMP4RERER6QrjHxEREZGu
MP4RERER6QrjHxEREZGuMP4RERER6QrjHxEREZGuMP4RERER6QrjHxEREZGu
MP4RERER6QrjHxEREZGuMP4RERER6QrjHxEREZGuMP4RERER6QrjHxEREZGu
MP4RERER6QrjHxEREZGuMP4RERER6QrjHxEREZGuMP4RERER6QrjHxEREZGu
MP4RERER6QrjHxEREZGuMP4RERER6QrjHxEREZGuMP4RERER6QrjHxEREZGu
MP4RERER6QrjHxEREZGuMP4RERER6QrjHxEREZGuMP4RERER6QrjHxEREZGu
MP4RERER6QrjHxEREZGuMP4RERER6QrjHxEREZGuMP4RERER6QrjHxEREZGu
MP4RERER6QrjHxEREZGuMP4RERER6QrjHxEREZGuMP4RERER6QrjHxEREZGu
MP4RERER6QrjHxEREZGuMP4RERER6QrjHxEREZGuMP4RERER6QrjHxEREZGu
MP4RERER6QrjHxEREZGuMP4RERER6QrjHxEREZGuMP4RERER6QrjHxEREZGu
MP4RERER6QrjHxEREZGuMP4RERER6QrjHxEREZGuMP4RERER6QrjHxEREZGu
MP4RERER6QrjHxEREZGuMP4RERER6QrjHxEREZGuMP4RERER6QrjHxEREZGu
MP4RERER6QrjHxEREZGuMP4RERER6QrjHxEREZGuMP4RERER6QrjHxEREZGu
MP4RERER6YrZ+NeQ8Y+IiIgomYkh/tWtV53xj4iIiCgZMR3/XJsi/tWt37B2
3frVa9WpUr1mxcpVy1e0L1OuQqky5X4tXfbXUmXQlGDDhg0bNmzYsGHzaTci
tiG/IcUhyyHRIdch3ZmIf86udRv8L/7VqF2nao1a9lWrIyii+7IVKpYt/1sZ
NmzYsGHDhg0bNkmnQX5DikOWQ6JDrkO6U8U/Z9emDZxdHRs4Ozg2qOngWK2W
AyIiukRWRC9s2LBhw4YNGzZskmKDLIdEh1yHdKeOf42bNXBpXM/JpU49p/+d
AHSoi26QEtFx5Wo12LBhw4YNGzZs2CTFBlkOiQ65DulOFf9cmjR3Mt79UbeB
s0O9BkiANR0ca9SuU70WGodqbNiwYcOGDRs2bJJaU/1/TR0kOuQ6pDtV/BPV
//53AtCYAOvUc3Jw/F8IRFOrbr1addiwYcOGDRs2bNgktaZuPRHnkOuQ7rTx
z6VJc5EA6zdsVM/JxbGBc90GDevWb1jn/zdObNiwYcOGDRs2bJJO878IhyyH
RIdch3SnjX8yATo1aoIQ2MDZtT6aho3YsGHDhg0bNmzYJOHG2RW5DunOZPyT
IdC5cTNn16YNRdOoCRs2bNiwYcOGDZsk2RjjHHId0p2Z+MeGDRs2bNiwYcOG
DRs2bNiwYcOGDRs2bNiwYcOGDRs2bNiwYcOGDRs2bNiwYcOGDRs2bNiwYcPm
E2z44Bc2bNiwYcOGDZvk1kT/4Bc+9pkNGzZs2LBhwyYZNTE/9pkvfWPDhg0b
NmzYsElWjdmXvrk0ae7UqEl9Y/ZzqPe/4FfTwdFAREREREkfch3SnSr+OTdu
9r9Tf04uSIb4tYZD3Wq1HBK7pERERERkBch1SHfq+OfatIGzq2MDZwfHBsiH
6KZK9ZqJXVIiIiIisgLkOqQ7bcW/+s6udRs0/N+pv9p1qtaoZV+1emKXlIiI
iIisALkO6c5E/GvYqG79/8W/6rXqICJWrFw1sUtKRERERFaAXId0p45/xvs+
6tRvWKtuveq1HCpXq/GbfZXELikRERERWQFyHdJdtPGvTr1qjH9EREREyYjZ
+OfE+EdERESUzDD+EREREekK4x8RERGRrjD+EREREekK4x8RERGRrjD+ERER
EekK4x8RERGRrjD+EREREekK4x8RERGRrjD+EREREekK4x8RERGRrjD+ERER
EekK4x8RERGRrjD+EREREekK4x8RERGRrjD+EREREekK4x8RERGRrjD+ERER
EekK4x8RERGRrjD+EREREekK4x8RERGRrjD+EREREekK4x8RERGRrjD+ERER
EekK4x8RERGRrjD+EREREekK4x8RERGRrjD+EREREekK4x8RERGRrjD+ERER
EekK4x8RERGRrjD+EREREekK4x8RERGRrjD+EREREekK4x8RERGRrjD+ERER
EekK4x8RERGRrjD+EREREekK4x8RERGRrjD+EREREekK4x8RERGRrjD+ERER
EekK4x8RERGRrjD+EREREekK4x8RERGRrjD+EREREekK4x8RERGRrjD+ERER
EekK4x8RERGRrjD+EREREekK4x8RERGRrjD+EREREekK45+1fLBMghUjYQYV
3aRF12OCzYfoJPwSsQVrTYWZfpPuzCEiohjpKv6NGjVqy5Yt0f164sSJwYMH
u7u7jx8//t69e7EduI+PT4po9OvX79GjR/hw48aN+E1BzA4dOoQRnT9/Pv6D
wt4fg5o5c6bJX8PCwlq3bm1nZyemMXfu3H5+fvLX8uXLT548WdvXhQsX0PHB
gwfjX7y4GTBggHLR/PDDD9WrV1+5cmVilSduWrVqpZyKIkWK1KlTZ9euXbEd
zu+//16mTBmTP5lZ9EREiW7t2rXuGn379lV2ExQUNG3atMQq4SdOP/FvxowZ
2KONGDHC5K+rVq1KkyZNqVKl2rVrlzNnzmzZsl27di1Www8MDJz1UYkSJbBH
ll+PHz+eYPHv9OnTmIrYFt4kM/Hv4cOHefPmReTDXD158uT27dsbN26MjufP
ny86iC7+Xb9+HcVDIeNfvLgR8W/MmDFi0UyZMqVkyZJoE7cE+ODBA/R7+/Zt
q5fTPMS/zz77TK5g48aNK1iwYMqUKY8ePRqr4TD+EVESha13qf8rQ4YMhQsX
Vnbj6enZsGHDxCrhJ04n8e/y5cvffPMNAp7J+Pf69etcuXJ169ZNfA0LC0PH
7du3j/PoXFxcateurWyTYPHPiszEv9atW2fNmvXmzZvKlk2aNMmcOfPbt28N
0ce/RCfiH2KbbIOl/91339WoUSMOQ0vE+Pfll18q24SHh3/xxRcdOnSI1XAY
/4goecB2GDvuw4cP43NERAR2QAh+2I4x/kVHD/EvKiqqWLFi3t7e2bJlMxn/
7ty5g5Vk8+bNsk29evUaNGgQ5zFGF/8CAgIaN25csmTJsmXLjh8/Xtat+u+/
//7888+SRoidJi89v3r1yt3d/eDBg82aNUNnVapUOXr06K5duypWrIivjo6O
d+/eRWfXrl1DZxjgu3fvevTosWzZMtG7+Lpu3Tp8fv78+dixY8Xo6tSpc/Lk
STmWEydOoORob29vv23bNpMZ4OHDhylTphw2bJiq/alTpzp16nT9+nWDMf5N
mjRpyJAhYiyIJc+ePUN7TBqKd/XqVXxG+QcPHoy/mBZ0U7NmzZ07d8qhHTly
pH79+qL3UaNGofyiPSZQzAFo27bt48ePRXss5WnTpmHGoj2y3L59+0wuGm38
A8w95H+DMc6heGLgbm5ut27dEh0gIk6YMAEThfbVqlVbv349Wp47dw4xGENr
0aKFmLF9+/bFEuncubNYxGvXrr1w4QIKg69Vq1bF0hdDQ5nl4kb6WrhwoWj/
8uVLjP3KlStNmzYVP40ZM8ZkBTxt/IOff/75t99+wwd/f38MHwsCi9LX19dg
3Bhi6YsxNmrUCEdDohfEv9KlS69Zs6ZSpUr4ycHBQRZSuegvXbqEMYreMRys
P6L9kiVLFixYgAWN42781KdPnxcvXmChiC7nzZvH2oNElACwqXF2dvbw8BBf
sY3tZIRDe8a/6Ogh/mGHVa5cubdv30YX/1SQAQoUKODl5RXnMUYX/zBYFGDP
nj2IFviK3bTBeN4mb968v/7666xZs7C7RzeFCxdG2FMNE/tc9IKjG+xVN23a
9MMPP3z99ddFixZF8ECbL774Qqzkyrp/OPz56quvgoKC8BlBK3/+/CjG+/fv
kWyzZ8+OPIP9O/b7dnZ2Ig8gqyBUYFeOkqCcol6fNv5hjDFWL0RSypMnD3Ia
Ytjff/+dKlWqnj17Gv5v3b9FixZlypQJE7ty5codO3YUL148Y8aMYsL379+P
Xtq0aYOSYEFgKrp27WowZmDMK1FCpI6CBQsiuYkxImFiaBgXfkKm/fzzzxEg
tQXTxj98zpEjR/PmzRFdMD9/+umnqVOnTpkyBQX7/vvv0RLd/PPPP2nSpPHx
8cHAMSJ8xuTjYBPLC0PDSI8fP47OMMkZMmQYOXIklixiedq0aTEQBCTERYwC
pRVjRBTE4kP5MTRsoDClBw4cQHskZAwNi2n48OEYICYfX7dv366dCm38w1LG
OiDqvWC5p06dGqNDZ8j/SM6Ihfny5RNLHGsa1hxkeIMx/mEpY5aKn1BafBWh
Vy56fEVLrM8oLSYNaw6Cush1CJn4CbMOS7lLly7oBXMAIRCLD9OIr4iyZlYS
IiKrWL16NZIejqBV7bEvYPyLTrKPf7t370YqEJcpY4x/06dPL1myJPbg1atX
DwsLi/NIo4t/8oxZVFQUCiPqm/n6+mbNmvXp06fiJwQkxIY5c+aohiniH3bB
4uv48eNTpkwpUofBeDUWecPwf+Mfkl61atUwLWfPnsVuWtwagFCEDtCZHGyh
QoXQOz7j3wThJzIyUvyEeGYy/qFsaC9Px5mE+IfIjQKIr0gICDMGTfwTZ0RF
N4hA+CrOLFWuXNnJyUkODUkJ8wQL8erVq+hG3uOwbdu2Xr16Idgj/CDwiFNw
YvZi7A4ODtqCifiH6RX1hNu1a4dE/dlnn6FISE2YS/LUKz7gq7iEjcBct25d
0R7zB1lUzEDVxV+EH3n4idiGn5D9xFdExMyZM+MD8mSFChXE+UOD8awstlrL
ly83fIx/gwYNEj+9fv0aOW3JkiXaqUCuw/TK2s4tWrTIkiVL+vTpxWlVlBnD
QWQVHWPgWFVkEouIiEDHAwcONBjjH7oU4dNgrPaA1fKvv/4yKOIfAirWEHke
D0FdHrkg/iFkyqWM2dikSRPx+dy5c8rVjIjIRrDBx6E6jmG1PzH+mZG8419o
aGj27NkXL14svsYY/xBFpkyZgvCGHZnsKw6ii3/YJ8o2BQoUEPEPCQ3RIkAh
d+7cSDWqYYr4Jy/bIf4pz/+YjH8QEhKC1IEJF2fPYMiQITly5FCODv8dZcqU
wU4cKXTkyJFymNHV/RPxT9Txiw7iHwKP/Nq9e3eT8S9fvnwyPGDSRPx78uQJ
wh6WlCzh2rVrReS4f/9+xowZS5UqtWrVKixcmUmmTZuG8INpl720bds2b968
2oKJ+Fe8eHFRVRjlxJwRl78bN26MqKzsGIumXr16+IBuxNm/EydOKC9oauMf
iio+i/gnq0fK+CfnLWYgyok8j4lVxr9Tp07Jzn788cfo4h8SnazwjLTs6ekp
TvMaPp79k5fFu3TpUrRoUWXvzZo1E1X+EP+wCJQ/tWzZEgM0KOIfZmPHjh2V
KwxGLW6mQ/xTVpHFfw3+fcRnxj8iShgLFy7EQbT2kpmB8c+s5B3/WrRogbVi
5kfp0qXDmoAP2lPEKkhfiBniwl8cWHLrh4x/OGzRPivGWvEPMQP7aLSRV0Kx
v9aOTsQ/fJg9e7YcZnTxT1z8PXbsmKp9ZGTkH3/8sWfPHoPm1o/o4t9PP/0k
u5Hx78qVK9oSyjNO+/btc3R0RLxBG6QaEbf69u2r7d5M/FPV/RMwWFWFz/r1
64v4h0Tap0+fnDlzot8MGTJ07tw5PDzcEKf4h7mKIwuUXFznxUgxQGX8kynO
YDb+aev+SZjzn3/+ufzarl27cuXKKTvo0KGDjH+qWz/c3d1V8Q9hTztvGf+I
6FMgTv0pT1woMf6ZkbzjX61atUwGCdWF3VOnTmGvJy+/woYNG9BZSEhI3MYb
q/iHXXOXLl1iHGbc4h++pkqV6rfffpMBwMvLS3UuSLD87N/Dhw8RpJHoVO13
7dqF7jHrDPGLf6GhoWnSpFHeiaOFA72dO3e6ubkh5yBpjBkz5ttvvzV/QlIw
H/9UZ/9k/JOuXbs2YcKE7NmzI+ga4hT/Tp8+ncJYXVCenfvhhx9sHf9US1wZ
/2I8+4eJHTt2rMkRMf4RUeLat28fNjWXLl0y+SvjnxnJO/6pqC7+njlzRgQ8
pBGsP+K0lSDO/olacNeMYjWiWMW/3r17YxcsT1wjXGXIkEHesSvFIf4hTiBa
DBkyBOVHx6NHj0bLjRs3pkyZUg4HGQ/hsHPnzoaPdf/kxc3o6v4BuscAlXMM
fVWrVi1LliziDt/4xD98LlKkCJKJLMn69evTpk17//59ZKqSJUsiH4r2mK4U
xqqAx44dU4YN9IhpadSokbbkZuKftu4fplFMhYODgzICOTk5iaqAcYh/vr6+
WLXkpInFbdP4F2PdP3nr94sXL3AI4O3tbVDEP8xGrFqywGIxiXO/jH9ElLg6
duwojlhNYvwzQ8/xL3v27D4+PgZjHfsSJUrg11mzZu3evbt///5p0qSRNefr
G8VqRLGKf+JpRdjDIuRs3ry5dOnSCEXR3flrefwTl32LFSsmrnRjv5wuXTpk
gPfv3yPv5c2bd/bs2ThuatGiBdqLwZ44cQL9Iuogw2D4dkYm4x+CceXKlVGA
Hj16iAvrZcqUQb8rVqwQHcQz/q1ZsyZVqlQImUiY8+fPR14SdReRppAxUELM
KMwuzOQcOXKIc7mIZPg8adKkw4cPd+rUyfI7fyWEHyyI4sWLYyoQkjHrcubM
KQberFkz5KJx48YdPXp05MiRKMPEiRMNH+Ofn5/ff//9Z4jN2T9MWkBAwIYN
G3755RckW09Pz8ePH9so/mGJFyxYEIcYixcv3rp1K5b+V199JSIr4h9WexQb
az7mOaI1vopJlvEP4RCrgbOzM/rF1GHNUd75y/hHRIkIG0lxt5pJjH9m6Cr+
9ezZU/nSN3yVVxjFA99E5S4cSsi3VxiMwUnu1Cw0ffp0EQ8kpBpkEuVFZ29v
b3nT66VLl5BeEAPSp09v5rl/GII88bVr1y55NwfMmzdPnNy7du0aOkMaCQkJ
wQf5fg1kgH79+okbiiMiInDEhDyDiVU99w+7+EqVKqF94cKFsa9HWt6/f7/J
aUQCRJTCvELHGBSSmPJkINKOqKonLF++XMxSTBpKJc6miuf+yW4wafhJ5t5V
q1aVK1cOA8+VK5fyuX8oYdWqVVOnTo00hZkmz/lHRUVhI4AEiF6qVKkS3XP/
1q1bh7GIU5RaFy9eRHTPaIQPcuBYcOhLrB6//vorQqZoj2iNLISWSMv4ijkc
GBgofkLQRS/i+SoG403Kchs1bdo0TBQmAROCcnp5eSHrIi5iaOjl/v37sjwD
Bw7U1rE0GBe3cumriOf+KdsghSLnYzEhyGGJy0IuXLgQ8RKxFgkQPyFXy0lG
SeSiP3DgAH4SC9rDw0M+92/p0qXy1maDMQ3KdQBroFzQRES2gC05NjvRbe0N
xqdG8KVv0dFV/CMiIiIixj8iIiIiXWH8IyIiItIVxj8iIiIiXWH8IyIiItIV
xj8iIiIiXUnG8S8qKiqAiIiIKCDgyZMniR1MPiHJOP5BlixZTL70jYiIiHTF
/LtE9SZ5xz8iIiIiUmH8IyIiItIVxj8iIiIiXWH8IyIiItIVxj8iIiIiXWH8
IyIiItIVxj8iIiIiXWH8IyIiItIVxj8iIiIiXWH8IyIiItIVxj8iIiIiXWH8
IyIiItIVxj8iIiIiXWH8IyIiItIVxj8iIiIiXWH8IyIiItIVxj8iIiIiXWH8
IyIiItIVxj8iIiIiXWH8IyIiItIVxj8iIiIiXWH8IyIiItIVxj8iIiIiXWH8
IyIiItIVxj8iIiIiXWH8IyIiItIVxj8iIiIiXWH8IyIiItIVxj8iIiIiXWH8
IyIiItIVxj8iIiIiXWH8I6IPHz7MjJ9Vq1Yl9kToTkhISDyX2oEDBxJ7Iogo
cTD+EdH79++//PLLFEYODg6dYlLqo+zZs4u+ihUrltgToTuBgYFi5qdMmbJ1
69bmF5mbm5tcanJZ//HHH4k9EUSUOBj/iAj27dtnZ2eHSIC/+/fvt7zHy5cv
V6lShfEvUUycOFEEuQIFCty5c8fyHrG4c+fOzfhHpFuMf5SQPhgldimsLNlM
EVKfSIBffvkl4oHlPV65cuWXX36xXcGUktzctvU6P2nSpLglwIULFzL+EekW
458O3bx58/Lly1YfLIaJIZvp4OXLlz4+Pu/fv79165bYJ4aFhZns8uLFi/gV
oeLdu3fK9qLlsmXLZs6ceezYsWfPnsn2p0+fDggIED9t2rQpJCRE9hUVFRVg
NHfuXPzq7+//9OlT7Uhfv3597dq1DwpoI3p88uSJmekaOXLk/fv3zXRgdeHh
4Q4ODhs3brT6kOOcAEuWLGn1wmitXr365MmTCTAiKwoODh4/fvwnmABPnDjB
+EekW4x/ehMREVGpUqXbt2/LNshjf/31l/m+Fi9erAoDBw4caNSoEQY1btw4
sWvDfsfe3l6Zu5TQzZ9//nnv3j18Xr9+fa9evVKmTIm91Zs3b1RdYq+UKlWq
nDlzTp8+XXQvet+yZUuZMmXatm27YMECxLxBgwblz5+/cePGSHdr167FAFOn
Tp07d25kP/RYtGjRHj16iIHja+vWrbFz/O2337Zt2+br64vxTpw4UbVHfvHi
xaxZs4oVK4YuMSGdOnUaMWIE/v7000+DBw8W3WCACHvly5d3dna+cOGCaPno
0SOUCsUwPw+tCBn4iy++wJy3xcDjlgDd3d1tURilgwcPjh071tZjsQWsrvPn
z7fpKGQCxD+FhQkQ//iMf0S6xfinK9jgOzk57dy5U9ly2LBhX3/9dXS9ICN5
e3tjtzJjxgzZMjAwMF26dBUrVkRMwk9eXl6i/a5duxo0aICxaIfj5+c3atQo
ZZtff/0V/W7dulXVJRJXtmzZWrRooSwD0l3atGmRAJVdImoWLlwYIxVfK1So
4OrqKj6HhoZmz569VatWIuMhm2XKlMnHx0f8euzYsTRp0pjMEpMnT0apZOyE
s2fPivj38OFDTK+Hh4enp+dnn32GmYYsLbqZOXPm+PHjTc/BJOjWrVt58uSJ
wzlA23n69CmONWyXsbHEr127ZqOBv3371tHRMTg42Ew37969CwgIePXqVZzH
snv3bhwUxCoBEpFuMf7pCnYQ1apVU7Y5fvw4dvRlypSJrhd3d/fFixdjn7J3
717ZEilr+vTp4vPBgwft7OzkSb/q1avLPCa9fPmyQIEC4eHhqiHnzp3b2dlZ
2RLd1K9fv0qVKsr4t3TpUhRgxYoV2uL5+/svW7ZMfK5Zs6aMf9CxY0f0denS
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
kXi17bHKqeLfggULVN1getOlS6c67kP8Uz0CceXKldaaaiKyHOOffiChmbwM
pIp/AQEBixcvVnagjX8DBw6sWLHizZs3IyMjR40alTVrVuUttDlz5lRdOMM+
eseOHco2Fy9ebNWqlfiMKPj5558jz8h7e1XxD3uQn4xUd5QYjDcaixqMhjjF
Py1R1dBk/JPZT3W9WE4RRhHj8M37BOMfsh/Ga6M7f0X8Ey+LMXNv6eTJk+vX
r69qibWif//+WPpVqlRBjwjeWARxLokl8S8wMBAhB6sZ5gm+ah9ZaR6WbJ8+
faL71YrxD9kPx1ZWefYL4p88rRerap/+/v44kipRooS4phDbeUVEtsb4px+I
NKlSpdLWwVPFP/E0Zvm4PGzz165dizbTp0+X23+kvnz58snLpsrD+dOnT//y
yy+qKz7du3dHYpRfX758OWbMmCJFity/f18ME7FKZDN8xW69du3aX3/9NQos
x/j48WPExQIFCmCfIm4nRBskovTp0x8+fBhfz507h/RVrFixkJAQ1X4KXzdt
2pQ6derGjRs/ffo0ur2YeMtby5YtMUXLly9XdYbsV7x48RT/18iRI2UHM2fO
xFREP/tjhvSbO3fuzp07iyB0/vx58WwZ8VU8JAezDp8xFd9884143woMGDAg
Y8aMop4Y5ny1atWQZKxyjwZyTp48eeITq8xDns+UKZOjo+O2bdu6dOki1zqs
A+vXr5cHEcjAOXLkUN46ihyFGYXIFxYWhmMHDw8PBB5R2xPDFLcDC5gPx48f
N3mbj5L5+Hf27Flvb28clRiMN31nyZJl6NCh8vweRoFkKCoPiK+HDh2SX6Wy
ZcsqC6Zirfgnsh/WgRgn2RI4ysAGAeEN65i8Ro/ZrjwYxPRiLZX/8vh/xLwS
dTWHDx/+7bffot+lS5eKLnft2qV85SI2RybPLhKRrTH+6UrTpk3luTJp3759
ylp/a9asGTFihPy6f//+WR+JGzQEJMDFixejpeq8kJeXl6+vr2oUR48eLV++
vNxBoAxymOI62t69e8Uzyp48eTJLQTxvWcJeeNCgQUhxv/32W6dOnZAhg4KC
DMa3eCj7unv3rrIv7LaUv0ZXnT44OFjZmeoUKIo3S0N51dLZ2dnkQ0ssN3ny
ZDHYI0eOIP9MmjRJfEUK2r17t/iMeYuMOnHiRPEVu9o9e/aIz3///bfB+IhF
8VVbIy62EGiR/eJT/cwSWMQIclia8gZVxH4EaawJ9vb2cg4jO2G2yL769+8v
syKWVLdu3WRwwk8ILbJLrNs//vhjjGefzMe/69evY7Ciyh/WfIRPBBtZA3Dz
5s04lpH/HfiP+Pnnn1UVGpEGCxcubObhJ1aJf/gXa9euHbKf9nnmcSPuQMfS
Wb16tWhz586dRo0aKa/FY23EsZWcGzgAHDZsmPhnxzGap6cn/k/F140bN+II
Tj5IEyt28+bNccBllaISUaww/ukK4lPRokVt9whWHMtjz6t9lrLBeGX21KlT
NhpvokPgrFy5cnJ6sllss58lF9Yt9McffyDPI8ciOciWGzZsQLCxpHckPW9v
b2UbLBqT66TSjBkzYnzztRlYveXZtrdv39aoUUM1RoRzMw/9M3y8EyQ+YTu2
2Q/dK09fW65Xr144HpFf8V8vb9QyD0deWBbKSpgTJkxYuHBhHMpARPHE+Kc3
Xl5e2hOAVoFU2aRJE+0b3wQc6WPflFwf/o8dosk7U5IiLKM4nPerVKmSVcb+
6tWrfPnyIftpL562bt36xo0bMQ4Bq5my6mlISIijo6NVyhad8PDw6tWry6+B
gYHdu3dXdvD48ePGjRvb9OhAZD8Uw/JnxVy4cAFJO7Yjwuphb2+vrN2xYsUK
7Ql/k5DMlVcWDMaX71j9UUJEZAnGP73B1rthw4a2eB8odgHmn/Hl5+e3fv16
q4830Z06dcqSp1InCVg9PDw8Ypv9sDoVL17cKgXAeBH/3r17hxyoSoAIct26
dVM9zlHl4cOHtWrVOnnypLidxGA8jWnyUdJWtGjRIuX7/pCpDh8+LFd1zFJk
HtvVnzQYLxxXN4rVcwJXr14dh/iH6Ro6dOi///4rE2DTpk1NPiNRy9nZ+cqV
K/JeElVsJqKExPinQ9gfWatqUGwpq4gnG8oqkUkaVgx3d3dkv1g9vgaJy9HR
UftStjhzdXUtV65c3759nzx5ovoJCfD06dNm+t2yZQvSo7LenZubm62rL2Km
KdNdkSJFunTpIs/1YewmXxttLch+5cuXj1X2w4K+cOFCoUKF4hD/evXqVbFi
RXkaVnsy0IysWbMOHDhQ3uCPrcHw4cNjWwAisgrGPyIyfMx+KVKkcHFxcbdM
q1atSpYsKW6CtmL8syJkMFufX3rz5k3VqlVtOgozRPZLly5d69atLVxqzs7O
hQsXFkstDvFP5ciRI717945bv506dVI+npGIEhLjHxEh+3Xs2DFFPHyC8Q8T
tX//fvl0RBuNIiAgwNYXl6Mjsl98llo84x8m39fXN27v7BCHG/EZOxHFB+Mf
Ee3bt69T/AwbNiyxJ0LN39+/X79+5l/2EU+HDx/u2bNnYt3xPW/evHguNdXT
jWJr0qRJfn5+ceu3WbNm4qlNRJQoGP+IiIiIdIXxj4iIiEhXGP+ISAoLC7O8
41u3biW/+7g/cbFaQMHBwbF60qaZ1y4TUTLD+EdEAtKCvFECMcPBwcFkGHj4
8CF+QvB79OjR2LFjYwwMQUFBAwYM6Nev36xZsyZOnDh48GDrF10fdu3aJZ8u
fvfu3ejeUufv7y/uxg0NDcUMt3Dg4pGPzPNEOsH4R0SGj3t/ZRszJ5rkT8uX
L1e+/ys63bt3lzkkse6TTerCw8OHDBmibBPdAkKEk2+g8/Pzky9TNu/EiRMp
UqSw6SMKiejTwfhHRLB3795Zs2bFoUcXFxdxyggBcs6cOW5ubvLGUnnXbYkS
JS5fvmzN4urPyJEjz58/H9u+3r175+rqKj4/f/7cx8dHLiDlC39F+G/ZsiXj
H5FOMP4RJWMIZjNnzly4cOHSpUvxOcCUkydPosuOHTvKl328ePHC3d1969at
2gHevn27VatWynfvtm3b9t69e+KNz35+ftqrh/j1u+++O3HixMGDB/39/W02
rckZUlydOnXk12fPnnXo0MHkzDx69Gjjxo2VbVq0aPHo0aOIiAh7e/sDBw6Y
HP64ceOw9LHQbfqYRCL6dDD+ESVjXl5eu3btQgCrV68egtmsaKDLkiVLyr4u
Xrzo5uZmMv7t37+/dOnS169fl218fX1XrFixceNGfDBZhgULFrRp0wYhs3fv
3o8fP7b2JOoCAnmlSpXk1wsXLiDj7d27V9UZUuKePXty5sypbDlkyJANGzb0
6dMnuqvAWNwIfjgQcHZ25qV5Ip1g/CNKrpD68uXLt3bt2vHjx9+5c8d8x9j1
y88fPnxAGjR5T0dkZCRyiPKnefPmTZ06df78+Q0bNlQ+UlhWVGvevPm///5r
MGaY+E+UPmHWIZDLr69fvy5XrpzJLg8fPty1a1dlGywdLKPff//d5DOfsSj7
9+9/0ggh0MfHx6YTQkSfCMY/ouRq+fLlyiTw7t27maZoz/5t27YNMUDeWaAM
ezt27OjTp49yLJMnTxZn/5AxtGV4+fLlN9988+rVK/k1IiLCepOoF6qzf4jT
Y8eONbmABg0ahGWh7Hf06NEbNmzo27evyeqXM2bMEFf/AWsCX8RGpBOMf0TJ
FXb6ZcuWvXXrlgh4CAkno4FfW7ZsKev+OTs7jx8/Xl78zZYt2+rVq8Xnnj17
Hjt2TDmWtm3bire+1qtXD8FDGUXwefPmzfnz53///j0+I/v16tUrPDzc9pOe
3CC6V65cWX6tU6fOlClTdu7cic9RUVFYQCLyYSbXqlUrMjJS2W/z5s3v3Llz
//59e3t7ZQJEx8HBwSNGjBCLDH9xLIBFz0f/EekB4x9RcoXQNXbsWE9PT0vu
ut2yZYus94Xst2bNGvnT4sWLO3bsKD6XKlVKeXMHooKLi4sIDEgdo0aNcnNz
Q1ApZXTu3DlVJUPe+hFnAwYMkHf+jh49Wp7iw+KYO3dut27dDKYeBvj27Vt5
5++DBw/cjcTSwYITC0XE/rCwMPH14sWLCTdVRJRIGP+IyGAMckhuJs/8TJgw
4cSJEwbjbb89evRQ/mThc/8o/v777z8vLy9te8S/MWPGnDlzBp+XLVu2cuVK
5a/z588/fPhwAhWRiJIOxj8iEpRv/VASp4MuXbrk7e198+ZN2T4yMnLGjBkJ
Vz7d27Bhw9mzZ1Ut3759GxQUZDA+t9nDw+Ply5fyp4iIiNmzZydoEYkoiWD8
IyLJzIW/y5cvi3OA0u3bt1lPLIGZWUB79+5V3d8tK3MSEakw/hERERHpCuMf
ERERka4w/hERERHpCuMfERERka4w/hERERHpCuMfERERka4w/hERESWkGzdu
yBdhK92/f1/19B4iG2H806Hnz58/fPjQ6oPFMDFkqw+WiCiZ8fLymjx5srZ9
jx49lixZYtNR79u379KlS/Lrhw8fLl68aOEDPLGRDw4OFp/Xr19//fp1qxTp
w0dm2pDVMf7pzfv37xs2bBgYGCjb4F9s8eLF5vs6efKkyefNYjgXLlwQn0+d
OlWrVq2IiAgrllaf4rzRu3HjxqFDh6xbGCKyOn9//6pVq6pavn79Onfu3E+e
PLHdeM+fPz9y5EhlG8S5FClSKN/xbUaXLl2KFy8uv7Zu3doqG3yUqn79+iVK
lKhZs+aYMWMmTZrUrFkzlMqms4IY/3QFuUJ71Llq1aqvvvrKTF9r1661s7PT
vt5r3bp16dKlmzZtmmwzb9683r17J+NDtoQ5IK1UqVLfvn0fPXoUq76OHj2a
K1eubt262ahURGQtSHrffvvt/fv3lS337NlTuXJl2430+fPn9vb2kZGRqvaX
Ll2Kw9k/OH36dPv27a2ySQwKCkLe27Rpk2yDzWD8B0tmMP7pytmzZ4sWLaps
c/PmTRxvlilTJrpevI3wj7llyxZl+wFGqn9YKFasmHj7fLI0bNiwunXr2nos
9+7dQ0rPkydPu3btrl69asnWderUqThqxuL4559/bF08Ioq/rl27Tpo0Sdmm
e/fuEyZMsN0YsYkYNWqUdYdZvXp1M1ccsO0KDAxct27dzI+0L60Wli5dmiFD
BuUbqwMCAqxbVFJh/NOVpk2bLl++XH7F/6aHh0eLFi3MxL+wsLCTJ08iV6je
94r2OPRD+2PHjinbjx49um3btlYprbgqrRpv4kqY+CdERERMmTLlhx9+qFGj
xq5du8yHQCyOV69eYXH4+fklTPGIKD78/f0dHR3l19evX+fKlSs0NNRGo3v/
/j2O9K1e6xuH/40bN9a2x/YKm68cOXJUqFChkwI2ZSaHg4FgQ2fdspF5jH/6
8fTp06+//lp55h8Hgzg0+/33383EP4Ox4p82/hmMZ/618e/u3bt2dnZv3ryx
pEg41ps8efKIESN69OihOipEmEE0xfA9PT1xzBjnM4qYQAcHB3HqMjw8vGfP
nqoj7lixJP5ho+fk5CQ245hpLi4uyorWsfXu3buNGzeWL1++aNGiiO7Ko2MV
xj+iJAR5L0+ePPK02KhRo6pUqaLqBlvF4cOHu7u7z58/X/XTBwsou9+8eXOR
IkVUAwkODnZzc8PYYywtdhwjR47U1i15/PjxV199paqkh1F37969fv36FqZZ
bLuyZcsm6hGh3yFDhmDmWNIjxQfjn34gRZQrV05+PXfunLgQYN34Bzlz5jx8
+LAlRerYseP48ePxYe/eva1atVL+hO0JshaGj8A2a9asq1evWjJArb59+7Zu
3bpw4cLYqvzxxx/9+vVr2bJl3AZlsCD+Iaaim0KFCvn4+GDT2qFDh+rVq2PD
G+cxStgRNGvWLF++fL6+viZDIOMfUdLSvHlzHNmJ02Lff/+96srs9u3ba9So
gX92HD9++eWXqn4HDx5cyqz169cru8d2qXPnzso2YWFhyH6IoN7e3jEWFVvR
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
qLyLuVy5cv3794/bpRAiorjZt2+f5WfSli5dmjt37ps3b2p/Wr9+/fXr161a
NEpQjH+kQzieXbFihfLFxBUrVjR/TST+qlSpojyG3bBhAzeeRESUKBj/iHBs
6+npadNRhISE8MEFRET0iWD8I507ffq0h4eH+edTxdPFixcxCuWjFImIiBIR
4x/p3JMnT2z9pJpnz57dvXvXpqMgIiKyHOMfERERka4w/hERERHpCuMfERER
ka4w/hERERHpCuMfERERka4w/hFRsvfBGhJ7IoiIrIbxj4iSvTp16qSIHz66
h4iSE8Y/ovh48+bN1atXE7sUFIOVK1emSZMGKe6nn346d+6c+Y6vXbt20mj3
7t3//PNP3rx5Gf+IKJlh/CMy49KlS127dt2wYUN01/4ePHhQp06dBC6VjQQE
BLi7u+/fvz+xC2ITMgFmz549xgSoFBISYmdnx/hHVnTjxo1Xr15p29+/f//O
nTsJXx7SIcY/HXr+/PnDhw+tPlgME0O2+mATzOvXr+fNm6dsg8jn4OBw5swZ
b2/vQYMGmUyA5uPf1q1bb9++rRzgxYsXxXCioqKmTp2qHObBgwePHz9uhSmx
AJbU4sWLlW3ev39vb2+PuIsEOHPmzDhUdVu6dOmzZ8/kV+XEPn782M/PTznM
TZs2BQUFxWMK4iLOCdDJySkO8Q/TO3/+fCzo2PaYuNauXRscHJzYpUjmvLy8
Jk+erG3fo0ePJUuWKNvcvHnz5cuX8RmXrLmqrcIqv7Jqqw4x/ukN9vINGzYM
DAyUbfCPr0oCWidPnsSuXNkGff3777+dOnUaN26cSH2nTp2qVatWRESELYpt
a5icXr16qd7+9uTJk3r16hmMV3grV678999/a3s0E/+OHDmi2sKfPn0a2cPf
31983b1795QpU5QddOnSxdZvoDMYJxYZLzIyUtkSexk3Nzd8ePHiReHChRct
WhSrYW7YsGHFihXKNps3b8bEXrlyRXxduHAhVhhlB23btn369GlcJiAeVq1a
JRJgtmzZzp49a2Ff3bp1i0P8Q/bbtWtXbPv6FGBNsNahHKLLpEmTsL4he797
984qw0wGsBGoWrWqqiWOQHPnzo3NjmyDY4dMmTL5+PjEZ1znz59v2bJlyZIl
W7VqpcqW48ePd3FxwXHfmjVr4jMKSooY/3QF+33tUSd2iF999ZWZvtauXWtn
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
YSgBMP7pTURERO3atW3xxKdly5Z16NAh6dbt+fPPP6173nL37t2TJ08208GR
I0dGjx6tbOPp6RndDTVWhGWE7bx1z3YuX758xYoVZjpYvXr1kiVLlG3at29v
8qEWNvXgwQNHR0dXV9dYXfOtUaNGbOMfTJ06NcZDraNHj/bq1UtZ1bNatWrK
u4BtQZkwEcuxQcBOX3nDF1aPeNb6oySH933oDeOfDt2/f98W8e/27dtJeuvx
+vVrq5+63Lp1a3RvdoiKilJV7Dl48KAllwutAjt3k4+TjQ/k/+hec/z48WPV
Q282bdpk+fuqrAVr/s8//xzb7CduF4pD/DMYr+uZPwPctWvXFi1ayHtkQkND
VS9mtTrxMGH5FYcbefLkGT9+vDzts3bt2uDgYJuWgYgSHeMfEemByH4VKlQ4
evRogGXmz5//119/ZcyYMUWKFHGLfzE6cuSI8h6ZBQsWTJw40RYjkm7cuKFM
mEh9OBDgJT8ivWH8I6JkT2S/GF+cYYaN4p9Ku3btbH3ld9q0abauW0hEnz7G
PyJK3uKf/RIm/k2cODEOr3KIldWrV3t7e9t0FESUJDD+ERF9ClRv27GF4OBg
697yQ0RJFOMfERERka4w/hGRrlh+f/qlS5eWL1/++vVr6w6WiCjRMf4RUZJ2
7tw5+QyZ8+fPR/fWg717916+fNlgfMuhhQ8+6t27t3gAsjIBIuZt3LhRtlm3
bt39+/cNxqf8mX/GCxHRp4Pxj4iSrtDQUOUrjE+ePLllyxaTXSKnIRwajM88
9Pb2tuRkHYIfOlu5cmWbNm1k90uWLDl27JjsZvbs2SL+3bx5c8KECfGZFiKi
BMP4R0RJV//+/cPCwmLbFzLbnj17xGfkuosXL878KCAgQHY2dOjQuXPnGoxv
/UB6NBjfat2jR4/oBtuvX7/onvJNRPRJYfwjoiTq2bNnyvfqRkVFbdu2zeQb
PcLDw5VPV378+HH79u0NxnfAOTs7e3t749eTRsoX/+Fz1qxZT58+fenSJfFe
tgULFihfXRcSEnL48GH5Fb37+PhYdRKJiGyC8Y+IkqjNmzcrr/z6+fllzpxZ
+9jkmzdvtmnTBjFP2bJs2bIIir///ntgYKB2yB8+fFixYsWUKVOQDNGlrOnX
okWLO3fuiM8In61bt3ZxcZF9YdTVqlWzyqQREdkU4x8RJVGrVq2aM2eO/Hrr
1i1VxpNmzZo1Y8YMZRtHR8fQ0NCKFSvO/L8wEIPxPg5fX1/RZYcOHXbu3Ck+
N2vW7PHjx3Ig48aNW7RokXKwJUuWtMaUERHZFuMfESVRiH+TJk2SX8eOHfvv
v/+a7LJRo0Y3b95UthHxr169eif/rydPnrx48SJ37tzyNbjNmzc/dOiQ+Ozq
6oq+xOcPHz7UqVMnIiJCOVjGPyJKEhj/iCiJ2rNnz8CBA8VnhLEK/4+9sw6b
onr/MIKSgqh0l5QS0iXSrYAIgnR3gzQIqHRISEmJpIIgLdJIizTSndJdX/d3
X/tcnmt+M7svy/vuwgv7fP7Ya/bMzJmTz3OfmTNn8uY9fvy4LPxy4MCBb775
RuYBQmgFCxa0nVugQAGX+2UNJzFeunQJ/JPtP//8s1ChQubhb/369WX1GLR1
69aGDRsuW7bMEODVq1fLlSvn92yqVCqV36X4p1KpXlBZX/04c+ZM7NixzRNe
sC1JkiRr165le926dWCe9cSjR482btyYDbiuadOmjRo1sr35O8CtoUOH9uzZ
0zqZcM6cOePHj5ftIUOGZM2a1Tp1cOnSpQQGMMMqlUrlJyn+qVSqF1ft27c/
cuSIx10DBw6U5aBbt269detW665BgwaZm3gu9xu+v//++zi3rAu/OHXnzp1q
1ap5WzOwbdu2tmfBKpVKFT6l+KdSqV5c3bhx45tvvnHy2J49e5YvX+5yPxRu
2LChddetW7e+/vrrUF+RaFeuXOkMP3To0MSJE0MdrUqlUj1LKf6pVKoXWtu3
b5dF+TyqZs2a8rEPoxUrVnhcG9B3zZo1y/kh4CVLloQlTpVKpXqWUvxTqVQq
lUqlCiop/qlUKpVKpVIFlRT/VCqVSqVSqYJKin8qlUqlUqlUQSXFP5VKpVKp
VKqgkuKfSqVSqVQqVVBJ8U+lUqlUKpUqqKT4p1K9NLp9+/bzToJKpXqyjh49
eu/ePWf4hQsXTp069ezTowpCKf4FoW7duvXPP//4PVriJGa/R6vyRZT8gAED
EiZM6NyFQ+natevJkyeffapUKpVHdezYccSIEc7wVq1a/fjjj+bvv//+O2XK
lLt375qQ//3vf9bvFYas48ePG1M/ZsyYO3fuhCHJnkWcti8qql4UKf4Fm7Ae
5cuXt36nHgszbdq0kM9yfliBEKCiS5cue/fulZAdO3YUL178Jf7mqbcvvT5R
Bw8e3Lx5s38TYxPVWrt27ShRojh3TZw4MUKECDNnzgxoAlQqle9auXJloUKF
bIEPHjxImjTptWvXTAgouHjxYusxhESKFOns2bO+XCVz5sxNmzaVbYaBjRo1
CrUR86ZevXo5M6J6IaT4F1Si7ztHnXPmzHn99ddDOGvu3LnRo0dn8GhC5s2b
V6BAgRo1ahAeLVq0GzduSDik0aFDB79bmHCiHDly9OjRw2qcfdGaNWvix4/f
qVOnAKXKaMOGDR7xj+qA1QN9dZVK5bsgvUSJEoFk1sBVq1YVLFjQ/D1w4ABD
dduJob77h7777rvx48eHNskexMA2YsSI7733nh/jVD0zKf4FlXbt2mXrqseO
HWO8mTNnTm+ndHUrQoQI1kHo0qVLhfF+++03dh05csTsypQp086dOwOQ9uev
kydPtmnTJlmyZA0aNKDcfKHcIUOG9OvXjyIaPXp0oJPnDf9UKlU4VPPmzb/9
9ltrSMuWLYcNGybbmJcKFSqsXbvWj1e8detW+vTpQ5j5c/v27W3btk2bNm3s
f7p48aK3g0lh7ty5GzVqlDp1aqDUj+lUPRsp/gWVqlSpYn0ISP9t3bp1tWrV
QsC/S5cubd++HYDxOMED/CtWrJgVhAYMGFC7dm2/pjp86fr165jo5MmTlylT
ZvXq1SFDIKV3+fJlSm/OnDmBTljY8e/48eNDhw71V3pUKlUIWrlyJTbE/H3w
4EHixInPnz8vf+mMoJrfL9qpUydDmFYBfoxt48SJU7JkyUYWMc71FtXIkSPr
1KkzefJk7Nv9+/f9nlRVoKX4FzyCW+LFi2ed/Tto0KA///yzfv36IeCfyz3N
zyP+nTx5MkOGDIsWLbIi0OnTp6NHj/7w4UP/Jj7s+uWXX7Bse/bscbnveX7+
+efLly8PdWxkcN68eTly5Hj//fd/+umnEKzfU+HfjRs34OcmTZqYO6g3b96c
NGnSuXPn/vjjj4YNGzZu3PjgwYPmeAbds2fP7tq1K4a6RYsWHvGPIf+UKVPk
LGqKeiTlBHbp0oUIx40bJ4ctXrw4WrRoH3zwAUP+n3/+WQLB16+++or4hwwZ
Ymp53bp1UGK3bt2EfkWEr1+/noNJ4aZNm+TIu3fvfvvtt4cPH/7111+51qFD
h3wpBJUqGATvJUuWzNxn++abbz788EOzV7qn7ZSNGzdixPh9YuQXLlzAsH//
/fe2cMx19uzZbYGwHx2fK/q+dMCpU6cw/tgrIFbx7wWV4l/wCBecO3du83f3
7t0YHDZCjX+VKlWKGzcuu+ATa3jChAlhFf8l3A+CwTp27Ih1hfoAqurVq9eq
VWvw4MFhjxl+phxSpUpFbB5toO/4B462a9cOHiOdGTNmlMAGDRpweocOHYYP
Hz537txcuXIBnLIL9pPRN9vnz5/PnDmzE/8eP35ctGhRYhCe3Lx5M4xXsGBB
OI3YOnfuzC5wjl0gH84IL0ACli5d6nKzX4ECBeTpT6lSpWT64o8//ghnutzw
//rrrydNmpRjuMrMmTMJJ0n4BcLlcsWKFSN+0LFatWpc9LfffgtVGatUL6eq
Vq2aJ08euc+WOnVqMcii4sWL297I27Bhg1gD28sgTmENatSokSVLlmbNmjl3
EYMN81q3bt23b9+nSnnZsmXlQRJ+hAj/+uuvpzpdFR6k+Bc86t+/v7EGt27d
wtHfuXPn33//rVevXo4cOcw9HKdCePhLDO++++5bb7316NEjE4hBGzlyZCCy
EGoBZg8fPiQj8ePHh3nME5YwytwDzJo1q7d7gL7jX+PGjeXm5OrVq83LONQU
p5t3N5YsWQK/yTacho8wp0+fPt3j3b+zZ88a/ENUN+gr29R42rRpzWzwbNmy
4YbMiUDymDFjuPS2bdsIJ48EpkiRwsxj/PTTT+vWrSt5jBcv3pEjR7a5Bf/L
60Vkh0tPmDDhiXlXqYJQs2fPphO53MM0RnzW1RXSpUvnnPh34MCB2LFjW9eB
8SiMBoCXJk0a5/v+XIguaVv5AZPCKf96kTP++fPncwosilkg/UQY3sb7Kl+k
+Bc8qlOnjsG/L7/8MoJD3l4KCwH/UI8ePdhrfdobDvHPKHny5NZXmEVOK/fE
1zpkBiAsVLp06ZCXvXrauX9cetGiRTb8M+/64REM/gHwrVq1Mid6m/tH1djw
z6wFgYA6b/gXPXr0Ll26jPtP8kQ4Z86cNB45oEyZMqNGjWIDL5M4ceJxFgnH
Cv55XN5WpVIBcoyV6CD0FHPDXwT+7d+/33Z8t27d6tev70vMDPoiRoyI8bGF
e8Q/py8w4nhbDMSZIUOGo0ePyt8zZ85woRkzZviSKlW4kuJf8Khnz57mpYzj
x48b2xLqh7+ifv36ZcmSxcpL4N/EiRP9k2i/6sKFCylTpnTiX7t27RiGm78M
nAEhb9NgTp482bZtW/P+7xMv6jv+UYbLly/v2rVr8+bNfcE/jHBA8Y+z1qxZ
Y4tt/fr15H3KlCnDhw9v2bKl1DvV7fHtP8U/lSpkVa1a9bfffhs0aJD1ya/L
090/OnKiRIl8XEF00qRJhQsXdoZ7xD8Ger6v2I/1kEGfUeTIkT0uYa0K51L8
Cx7NnDkzV65cznAb/l26dMk26gwB/zAdhQoVmjVrljUQEgiHa7+Q1D59+nz7
7beylBbm7mk/hEE5fPLJJ6lSperbt6/vq//5iH+PHj0qXrx4+/btXZ4e/nq7
+we8GfAGzPyLf3HixAFxTfyycefOnaFDh5IM64oQCxYssD0AkoMF/574rEql
ClpNnjy5Vq1aBQoUsK2rnz9//h9++MEasnTp0rRp09KzzJtZLvdSgX///bcz
2nLlyvXv398ZfuPGDbqk7fMfn3/+OTbNl5WsINV8+fLZjgT/+vXrJ9vz58/3
19QaVaCl+Bc8Onz4cKRIkZzf/bHhH2YH+3DixAkTgq+3zjeGmrJnzz5mzJht
27ZhuGwr2p0+fTpp0qTORwbPVzNmzGBwDZ8cOXKEoe6UKVNAILP+lfPJr0dL
+NFHH40dO/bBgwdPdWmKy5d1/2CkWLFiybLSJBWQAwK3bNly8+ZNTl+2bJkc
tmTJEnYJUM2bN49dLVq0gDCPHj362Wefvfrqq87XmYnQzM0mX3Xr1jXLTcjc
P7MQBD6oZMmSxr/Ieo+tWrWionE9Q4YMIbB06dJffPGFbWoQjQoqTpIkCQXL
wcOHD5eXf2VaOFz6VCWmUgWPGEa9+eabKVKksIU73/ytWLEiJmjgwIHmzd/7
9+9HjRqVoaJ1NQCXeyz59ttve/x28KJFi3LkyGELvH37drJkyZ745i+mjHT+
/vvv1kAsQKJEiT799FM2cDGvvPJK4sSJn3ZtfNVzkeJf8IjumTdv3gULFtjC
p06d+vXXX5u/DAOxM8YOwH6yrkjr1q3NqJPjJcR88c1owIABHTp0CFgmQinM
psk49JInTx5GzfJ38ODB1pUQdu7cCQXZTFyotWPHji+//JKygjblFd0QBFvG
iRMHGgf5PvzwQ0bZ+/fv79OnD6dTBQDVrl27OnfuzF/48OrVq5zy/fffp0uX
Dpvcs2fPSZMmQeO2t2vBQiqUU7p163bgwIE5c+bIa4bjxo373//+N3ToULbb
tGkjL/9S13iB9OnTm6dOXDdDhgziGoT0uLR1alDWrFllFhC+BjKMGzcuyV65
cqXL/UUADpbE+7JUhUoVnCpatGi7du1sgfv27aMnWseh9G4GbrZ3bGfNmgVu
2WzLr7/+ynDM47U6derE6MwZjsGnq9LTMf4NLTLzW7AeGAqOsX7ok8G+eAe0
cOFCl3sxwJgxY+qI74WQ4l9QCarxOCHEX7pz507KlCl9/B5lONGGDRs+/vhj
8/fEiRPYWI8Pr729GRfCK3Ivn6hiTP2SJUu2b98ONIKpRYoUed6JUqleYAFv
HnnJx69+VK5c2WavOnbsyHjQeSQjvid+9YN+bX2HK4SvfngTg2sZnKrCuRT/
gkogCqgTuOXXsDnh86WPENS9e/dFixaZvxjAAgUKeDyyd+/eIbwiV7JkyWeV
5OepjBkzmhunLvdLH4p/KlVY5O2Rq8dv/loFzo0aNcr2tIXAd955x+OEwClT
pgR0Faa7d+/iAvQ1kBdFin/Bpps3b5YoUSKEAWCoNWPGjHr16r1YH3988OAB
pcFY1bwG8scffzRv3vz5pio8SxZ+kVud/DZt2tT24o9KpfKXxo8fH8Iiz48e
PdqwYYM15OLFi7t27fL42U0sf40aNfyeQquuXLkiKz6pXggp/gWhLly4EAj8
g6BeuAeg69evz5w588iRI826he3btzffLFM5tX379lKlSlWoUEEmfz6Dbxmr
VMGsKVOm+P7ufLNmzQoXLux8vw+NGTPGY7gqaKX4pwpmMVieNWuWdc3qAgUK
qJFUqVQq1cstxT+Vyuj48eNt2rR53qlQqVQqlSqwUvxTqUQ7d+5s3br1i/Xa
skqlUqlUoZDin0olunbtmrKfSqVSqYJBin8qlUqlUqlUQSXFP5VKpVKpVKqg
kuKfSqVSqVQqVVBJ8U+lUqlUKpUqqKT4p1KpVCqVShVUUvxTqVQqlUqlCiop
/qlUKqdu3749dOjQffv2OXedOHHihfu6n0oVrtSnT59169Y5w8eNGzd16tSA
XvrWrVt04bDHs3379hfrC+8qmxT/glCjRo367bffrCFP9Ob/uhXyLuIkZgWD
gOrx48fbtm3z/RugoVb16tUjRIjAtWzhJ0+eJLxFixaBToBK9RJr0qRJtWvX
tgViPD/44IO9e/cG7rqwX+vWra3ftbx48WKBAgWcPd2jMPIc/OjRI7ZPnTrV
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
iRL37993FjiBIU/deTYe4fkKrra+wAL+ydovKpUqEOrTp491UQKnvv76a+db
fk2aNPH4KlavXr02btzoz/R50s8//+xxgQVVGKX4F4SaPHmyLPjsX02fPv3o
0aN+jzagIsEMhxnbmk+NjxgxYtKkSaGO8ObNmwULFjR/sbTNmjWjwF84Kn42
Wrx4cZw4cSZMmLBt27bly5dXqlQpEC1TpVKJGIf27dvX9+kTDOpLlizZuXNn
5wDW26xm1YsixT9VMGvLli1FihTZvXu3CalQoYJtEZin0tKlS7Gu5u+sWbM+
/vjjYHiMG2pdvnyZgcO4ceNAwXD4qWiV6iUTIOc7/t25c2fatGkenxbpFNwX
XYp/KpXR7du3K1asGJYYOnTo8MQV/FQqlUqler5S/FOpRNeuXfv5558XLlwY
6hjOnTvXtGlTPyZJpVKpVKpASPFPpRLt3LnTuthUKNS9e3frxz5UKpVKpQqf
UvxTqVQqlUqlCiop/qlUKpVKpVIFlRT/VCqVSqVSqYJKin8qlUqlUqlUQSXF
P5VKpVKpVKqgkuKfSqVSqVQqVVBJ8U+lUqlUKpUqqKT4p1KpVCqVShVUUvxT
qVQqlUqlCiop/qlUKpVKpVIFlRT/VCqVSqVSqYJKin8qlUqlUqlUQSXFP5VK
pVKpVKqgkuKfSqVSqVQqVVBJ8U+lUqlUKpUqqKT4p1KpVCqVShVUUvxTqVQq
lUqlCiop/qlUKpVKpVIFlRT/VCqVSqVSqYJKin8qlUqlUqlUQSXFP5VKpVKp
VKqgkuKfSqVSqVQqVVBJ8U+lUqlUKpUqqKT4p1KpVCqVShVUUvxTqVQqlUql
Ciop/qlUKpVKpVIFlRT/VCqVSqVSqYJKin8qlUqlUqlUQSXFP5VKpVKpVKqg
kuKfSqVSqVQqVVBJ8U+lUqlUKpUqqKT4p1KpVCqVShVUUvxTqVQqlUqlCiop
/qlUKpVKpVIFlRT/VCqVSqVSqYJKin8qm/7999/bt28/71SEXwVJ+ZBHchqW
GJ5BQVnj9/1ygU5YeGseQdJivemZZf/Ro0f3799/Bhd6ZgrylvPSS/FPZdW+
ffs+//zzRo0aPZvLnTp16vHjx36P9vTp05hiv0eLFi5cmD179l9++cXbAQ8f
Pjxz5ozfr3vz5s3Lly9727tz584ePXrcvXvXL9fC4A8dOjROnDhhwb8NGzYU
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
c2yDWytWrNi7dy+ppb21bt2aAYi3zB46dMjcGDx8+LD1I3RXrlwxDQOvQbKp
R/5Sp+Sds9gmVU73QTUNHTqURlLHLSuxkFnaLU0LbLCusiKiT8FdkDzVLdGC
Crg8cBeoWL16NcUonhEvLA1gy5Yt+EFJZ7t27YAN+hEFxXUpB3GOtHb6EQd0
69btwoULcjCIJf6dAmdMR5LgHDPbHx7AzxLI1Rkxsc11cfd0W4rUeZdJJDEj
su/s4NY3f3GsNHuKiAZAbMaJS+nBDHnz5pW703Bg3bp1sQxgs8ePAGIcaDaU
hnybb9asWdIkhItAerY7depEm6ErZc+e/d1336VsaTkUpgwQOAV7wsDBuRQP
7Upqmd5KF5YGQAsHm4mEcP5Km8Eo0c5Tp05tuiTMTwURM+mRFWlIAzAf4T+x
i0tTfbAi8TD8MTfKKOpUqVJRCFu3bqVVk1SMEvRLnXIkIRSLtdJd7qFWkiRJ
MAK2t70oHI+3/kQknlrGIGCCihUrRiHQhaXQyCaDLADMauc5BQuDVSdJ8nIu
7YGisFY3Ddt0PdtDZyrXdh8erKUBEL/c4SQ9YvaxYMbs84upZ5cs8CIOAiaX
mmVkRy8wR0pmaV3vvfcerQJLJQM6uhJJIrMNGjQgBDMrLoZTnM+MSJW55auy
SfEveGR7+KsKQXgHsfPhWdCdN/etUgVOIJ/H+cDBIxhpxIgRYOF2tzAXUaJE
8Tgr1V9i3GRuXYYHMZz09h5WuFK/fv3Onz//vFMRTqX4FzxS/PNR27ZtMw9e
w7MY2Jp1jFUq1TNT586dW7dubf4CfoHGv4EDBzpv/j8vnTx58qk+VfO8dOHC
BdtqMCqrFP+CR4p/T9Tx48enTZtWuXLlcH7rb/fu3VOnTrW9X6NSqZ6N+vbt
mydPHjOhd+nSpdYXGfyrlStXjho1Kpzc+rt8+TIW8pNPPgnnt/5u3rwpllxv
/YUgxb8g0erVq/PmzRsjRgxGQ2bWn8qm/v37v/HGG7Y1CcOhGjVqlCBBAo8v
/KpUqkALCmrcuHHhwoXlc2mwmXM1cn8pW7ZsZtmf566ZM2dGixbN+bpfeNOy
Zctee+01WdVW5U2KfyqVSqVSqVRBJcU/lUqlUqlUqqCS4p8q7Pr333+tH0d7
+XTt2jXrpw1Cp0CXUjishXCYpNDpxIkTgXvX9caNG/LpbVeIJfbSFKZTZuk8
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
hf67LGAocvLkyTRp0jjevV68eDFevHjmnEb4XJYxCVI8/PPEk+DFw7+/gHj4
54kn1oPPQHRevT/Zs2dP7969dSKNJw9Bxo8fnzt37uvXr1v2uOuIESN8TobM
mTOnbGZh2aN/5tI0wciHH36YPn36ABOoPPHEExGaCb0tWYE8mvHIouIhSZUn
kRUP/zzx5MyZM7169SpcuDBopwu0+pRly5ZVqFDB3GzLk5iWX375ZebMmfXr
1+/YsSMK2rx5s89g3333XY8ePZo1a0awkSNH+luP0accOHBAdjZ86623zBme
nnjiiUOuXbs2bNgwGkv79u318/AoyI0bN+jKEU+bNm1ktqcnD1k8/PPEE088
8cQTTzyJVeLhnyeeeOKJJ5544kmsEg//Yo/IgmaPOhUxK7/++uuHH36oC5CG
Sm7cuBHhssMhkcA6unTpkkyBi3LkpjySGALLtWvXZC3B0MrjWfNv3boVqTfU
0RfKwbE5wkMWEnDkyJFVq1b5WyLmMdHUb7/9JquvBJDg20JMt5o///zTvc1f
dOSnn37yt9ebQ7755htzFZcg5fE3RLFEPPyLJYJXLVWqVPHixaMcA2ZZm9vZ
s2fv23sB6N8QJjXKAvsNHz68R48e2bNnl9WVQyJTpkxJkSKFueuHZa8PBhBK
9jmGyvglAfz9/fffo8aKQGbDhg2TJUvmvkSc3bp1e/LJJ6Pjvtu2bZs1a9bC
tsjmApGVdevWye3PPPOMua5XSOTNN9/0+RkgqqxXr17gdfYCyOnTp2vUqOFz
299HKLNnz06VKpV7yhPOtFWrVu+8806UY75z586OHTvmzp27du1aaos6Rwo2
V65cXbp0CTIeGKBatWrRmdzlkAsXLjRu3Lhly5Zo2bGhrcj3339fuXLlF154
IVRPjJqsWLEiS5Ysjg1n3fLWW2+lT59emsO2bdsChNy7d68Ey5Qpk2Ob7+jL
9u3bKbHu3bubJwHCgwcPqrnGdN+9ezdITJo3b16aNGnmzJkTOBgRUlGfeOIJ
UDmyaS5btmzOnDmlTMzFxoMXqrHcHi9ePMdOpp4ELx7+xR7p379/dPAPs0Bz
o723aNEC/3L16lW4SHZ/C6GPiI5MnDhRlncOreBDEyRI4MC/c+fOvf3221BQ
/PjxR48eDWMcOnSoffv2+PTx48eb66BGSmSLAZ+XNm3a5N7aMlIC/rn3ZZDV
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
zDPPBB9+3LhxDx//Pv/882DwT1Z9iTL+LVy48C+DfzEk48ePj1HtT5s2Lcr4
16FDh+jg3xdffGHinyf/c+LhX6ySH374wfzr4Z8/wabduHEjVLFlz549AP79
8ccfun259dDx7/79+45a8ZeUEOZx48aNgfHP8SwP//4yEoXGEnL8cyQgUvjn
uNfDv1guHv7FEsFwrVixQjf+FlH8u/9AHLcEM5s3Uvf+/PPPeBzHVXfgX375
5d69e/4iuW+Iv/MB7nKccV/CSNauXVt3kA++NPw9PQD+Xb9+vUGDBu+//76e
UfwLPiMBUhIgjGXPG2/evLljY1ZHsQSIUHYB9qnNKKTHjC34HJk7EfvUJrJl
y5b8+fNHIUk+wwTGvx07djg2NFH88xlbZEsmyLKNLP5FKnI9uWDBAhP/7v+3
uE86Igky+z6DBXiQzxuDyRrHjo2tzQC///573759X3/99UgVUUjwT1OFWnPk
yGFeUvwLXJKcxwSVLVvWPKn4FzgL/lLlxj9HY4xU4Qc4af23InxG5QgTYeI9
sTz8izUyY8YMmmrSpEkLFy6sEAj+derUac6cOVmyZOFq9erVtf2eOXMmLCzs
rbfe+tvf/jZ37lyf7eju3btjxox58803ixYtmjNnzu+++86y2x0WqVevXkOH
Di1SpMjAgQNxMZYNfpxPly4dFqxmzZpx4sR5/vnnT5w4sXLlSgwaTydVGFjA
j6Q+99xzuOzKlStzXo71odgcjDCRN2rUCLunu3iTSFz8v//9b2gqTZo0CRMm
NJlq3bp13bp1e+ONNwoVKiQbjm/durVKlSqc79evX4YMGXgQSbVsHsN9y3Mp
K5kKDgrWr1+f0ihRooS/Tx3/9a9/Sa5r1KhBScqnu6QHA5ssWTLy4l4GlgLM
mzcvz4IPeda8efOsB/gXHh5OBpMkSfLUU08tWbJEwt+3HW6fPn1IarFixfxt
qLp9+3aehV7I7K5du65cuTJ69GiOX3vtta+//ho+IePonbQVLFiQZ6F9nj5l
yhRJcMuWLVE95cnTX3nlFU5+9tlnUhkIRjY5Qzyvvvpq27ZtYZvcuXMTCcVL
5WnVqhV1LFGiRAsXLtT0oIiePXsOGzaMNKBxd4KpErVq1Ro+fPigQYPI75NP
PomKdeOP77//fqgtPA4V67fqe/fubdasmXx88euvv44aNap06dIot1SpUsmT
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
OEN9FCsL0gK6mubNm2PCgvfwSzgoXVWFZyDcyDuhfpL5KOKmP+UkFSWy5zOI
av3vh9KfsmXLyuJ/59YDF0F6LVu2zJEjB0EKL4SvBkrp22p0NWnSpOZ3Gxg1
oZPhE1nef/99c6LVQwwNvKcrZMCowAA8PyGAOAUWFVwnj2h1RpEQnzZtWuS4
bds2WQdOn4E6S5cuBbnB2A0bNhB9+vTp47j7pAi+ohtU6O/DsGHDYI7MuCI1
fDtBRy5xIxUGe18Y94u4QU0Mk37K87UrV67EjRtXN85jdEjk4sWL8ugZbMwt
+qQbudB5GT7BnWMADGMnauhqNKJDnTp1gjEQItJxI0IBx6IeojmnT58mlBDa
HPedxCxZsixcuBAkDJwLlgVgGige6if6A4Yh3OgaSLgqT+oDEhKhMAOBCaQ5
PXr00AXwSvCW5EXTk59++oluy5Nr9ApIUL9+fWmaSEptYkfyQpaiUAI0l3SO
F/j9yCOPCOSgJBLBHuW4SpUqhE7MGekgevhPMbAKVn/tFkkl6Annwb2guCef
fJKxiHVLFgNbBN1xO4YjwV0JxYPzanEoKjkgxRg+7WImAfeJIFeqV6+emD/a
Dh/0MTQWkSFDBrFN2uUSORFlSEVxUKlSpaI5hkDloDh0HuXkJKYqI1LnIBse
kWNu3rwZDKCrW2ELlqU9waixOP9iYCTC8AcMGAAmB9OiWoBA/KGsn1QFRtwU
k/WieAbxP5QBm5EvYFbc5R8+YIyr2IKkCQwW+K2QXhZVCtJD+fG31E9GjIzk
85Xi6PA/DD/gN5RKlSpVuXJlvDSMclwvCqJWJE82py+voRUY+PPPP4+7IAog
Lz9cF7mby4OxOPOtn0GDBuHbAWn0DcyMBWFryIIyuClYhLC4XZgM/+keYxcd
o3LAm1aOm1UkSbfpmCYj1IkUNE3ATVWsWFHeKySjRM8xWDQZ9UPcuEpKkix4
lu5YsvAvhhAOBLOSJdBHjx7FpgoUKEB2tmvXrgULFhBucA5jxoyhgDzVwre0
d0kiF/GOMhgpnjlXrlyCJbgX90tUlRXdYJ4OHTpwiz5nAcAQqjgJLBHE6LgL
wrt37y4NXb9+HZ/zxhtv8Nf8YpsSBcaNG4eL5pauXbtq+kYsIKpyFzXrrI4S
zhN8K/0nvnu2OdZLSp6H1EKEDC517NgRpw1ioSH+4vxJ9uVFZqAUjh1HCmdk
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
k2xu3br1yy+/nDx58uuvv+5fQ2gpSujw4cMpU6YcPHgwrN6xYwect+79v00W
/sUcwpYn3aKAO8DelrZs2aI1hNjE05IlSwFp//79YBjMZ8qUKbt27brb3bkP
6N9//4Vp4nM86+gsRTlduXJl6dKlsHrJkiX+9XuW/mNk4Z8lS5YsWbJkyVKM
Igv/LFmyZMmSJUuWYhRZ+Bdz6OrVq6tWrTI/ih6FRLXjx483P3R8h+nEiROh
V6rs3bv3hRde8Hy/WujSpUsDBgzQT6FGB33yySf58+fPli1bsO1rw0IHDx60
n7Fy3O/GBLuEhl+5cuXGjRtTp07V7wB76IcffvB/PjFctHbtWnQpMjX4adOm
TbInoJ8Y0YgRI/yfIrxHSL7h6f9UjuN+97tixYrR5HNCE/Zu7nyhRD+nT5+u
32S+i3T69Gm6EfBj7EKzZs3KmDGjuRtIBAh3ofsFb9u2LdhXuX777bfOnTvP
mzcvMm0Fo2PHjjVt2jSE2QYj+USPfQwdTWThX8wh2ZEhql7+9RDONk2aNLfd
+Tf66MUXXzS3fvMTnpYCAeHfggUL4seP379//2jq2xdffNG7d2/izvLlyyO8
eOmvv/5q3LgxQ4gq+EdPduzYMWPGjBDvAREU9hsUTSuvTp06FfDzYsEoefLk
hQsXLuajggULysav4OTMmTObrzGaJJ/pjvDi1R9//LFEiRKpU6eO2O0BieHH
ixcvWKBHTMmSJQu458tdp3PnzlWpUgV++uEfqA+Q7Nnq8Y4RCpApUyb/edQY
TIW7uPNd8hD5MswJ9pms+fPnz5kzB4cmW1pEmEqWLBk7dmzH/WKefC86YDH5
BviUKVMi01YwEt+7devW8N64Zs0ac/MaS1FLFv7FHLp8+fKkSZOCff438tS6
deu7CP/I9JctWxYCn/zwww/B4B9E5I0++AdnlixZEvl6ZM+pKIF/MEq2zIBi
xYoFCAxYDMjxwC2qUKFCdMC/LVu2AOf8O8sEI8DqY489dvbs2b9doldZs2aV
Y3Q7f/780skePXoEg38HDhxAHJEZy9KlS6MW/smWfLpxoZ88m8DeUyS7jAWc
/SPxuVvw79NPPw2mVJ06dboX4N8///wDQA0G/5566qkosfRdu3bpbneIIxj8
g/LkyRNN8A8FILuJAPzjRrpEihEdvbJk4Z+lqKI2bdrcRfh3WwoN/55//vno
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
D/9aGBE=
    "], {{0, 486.04212365071635`}, {511.8443598445198, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{119.98960000000002`, 119.98960000000002`},
    SmoothingQuality->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{511.8443598445198, 486.04212365071635`},
  PlotRange->{{0, 511.8443598445198}, {0, 486.04212365071635`}}]], "Input",Exp\
ressionUUID->"6830b427-e001-4076-a216-836931510e41"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"example", "=", 
  RowBox[{"RandomGraph", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"10", ",", "20"}], "}"}], ",", 
    RowBox[{"VertexLabels", "->", "Automatic"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.866636409958376*^9, 3.866636425749879*^9}, {
  3.8666366878088193`*^9, 3.866636701428314*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"b795f7c3-5d9f-48a1-b5bc-a647e440c9ac"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {Null, 
       SparseArray[
       Automatic, {10, 10}, 0, {
        1, {{0, 3, 6, 9, 12, 19, 25, 30, 32, 38, 40}, {{5}, {6}, {9}, {5}, {
          7}, {9}, {5}, {6}, {7}, {5}, {6}, {10}, {1}, {2}, {3}, {4}, {6}, {
          7}, {9}, {1}, {3}, {4}, {5}, {7}, {9}, {2}, {3}, {5}, {6}, {8}, {
          7}, {9}, {1}, {2}, {5}, {6}, {8}, {10}, {4}, {9}}}, Pattern}]}, {
      VertexLabels -> {Automatic}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
        ArrowBox[CompressedData["
1:eJxTTMoPSmVmYGAQAWImKL7HuvS+4acf9h7nX83p2bXJXnZ6K/NG29f2HndP
cU1seGqPLp927WdehP5be5H/yzvqe89iyBssVvVmnvjF/qDQomJFtS/2fkUN
+mr379mb+/c+VRT8gWE+unzDm10ZC/P77KtKyqpK1d9iyKObz4AG0M1Hl0d3
P7o8uv0+GZ7zRQUZHLwYp61nuP8Ew/3o8ujmo8uLrT130+kzs8Nhz2WHgxd8
xzAPXT+6PLr70OXRwwfdPHT96PLo+tHVH1DQ4Tiz6qQ915ManX2JDA7ofHT9
6Hx0/wMAlXAZvg==
         "], 0.0264957892268452]}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {
         DiskBox[{1.55912959443264, 0.07315901595103214}, 0.0264957892268452],
          InsetBox["1", 
          Offset[{2, 2}, {1.5856253836594851, 0.09965480517787734}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.4823699439892025, 1.5041827170252426}, 
          0.0264957892268452], 
         InsetBox["2", 
          Offset[{2, 2}, {0.5088657332160478, 1.5306785062520878}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0., 0.}, 0.0264957892268452], 
         InsetBox["3", 
          Offset[{2, 2}, {0.0264957892268452, 0.0264957892268452}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.008342022350041, 0.6522220067418314}, 0.0264957892268452],
          InsetBox["4", 
          Offset[{2, 2}, {2.034837811576886, 0.6787177959686765}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.8512806957994347, 0.6719441614904236}, 
          0.0264957892268452], 
         InsetBox["5", 
          Offset[{2, 2}, {0.8777764850262799, 0.6984399507172687}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.9120294730661953, 0.2308806817309167}, 
          0.0264957892268452], 
         InsetBox["6", 
          Offset[{2, 2}, {0.9385252622930405, 0.2573764709577619}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.014861355789767439, 0.9110667602395914}, 
          0.0264957892268452], 
         InsetBox["7", 
          Offset[{2, 2}, {0.04135714501661264, 0.9375625494664366}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.2005248107818769, 2.0477260089505807}, 
          0.0264957892268452], 
         InsetBox["8", 
          Offset[{2, 2}, {0.2270206000087221, 2.074221798177426}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.2854035315924186, 1.259309245769302}, 0.0264957892268452],
          InsetBox["9", 
          Offset[{2, 2}, {1.3118993208192637, 1.2858050349961472}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.493779851550822, 1.4766423838196807}, 0.0264957892268452],
          InsetBox["10", 
          Offset[{2, 2}, {2.520275640777667, 1.5031381730465259}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.866636426428288*^9, 3.866636701769947*^9, 
  3.866638706076208*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"7736ce13-1133-400d-a7e6-6eeab5fe15e2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eulerianGraph", "=", 
  RowBox[{
   RowBox[{"ResourceFunction", "[", "\"\<EulerizeGraph\>\"", "]"}], "[", 
   "example", "]"}]}]], "Input",
 CellChangeTimes->{{3.8666364286157703`*^9, 3.866636431787196*^9}, 
   3.866636538580866*^9, {3.866636568932029*^9, 3.866636571291026*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"81ac14c1-a2ae-4bbd-a6d7-da53a9ea8723"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {
      Null, SparseArray[
       Automatic, {10, 10}, 0, {
        1, {{0, 5, 8, 10, 13, 15, 17, 20, 21, 21, 21}, {{2}, {3}, {4}, {7}, {
          10}, {4}, {7}, {10}, {8}, {9}, {6}, {7}, {8}, {8}, {9}, {8}, {9}, {
          9}, {10}, {8}, {10}}}, {1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1}}]}, {VertexLabels -> {Automatic}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
        ArrowBox[{{2.5668710183974275`, 1.148691427530358}, {
         3.052915843072356, 0.699738247649063}}, 0.030617797001168748`], 
        ArrowBox[BezierCurveBox[{{2.5668710183974275`, 1.148691427530358}, {
         1.896202473093139, 1.2911875372674833`}, {1.441036297737781, 
         1.8039498523445552`}}], 0.030617797001168748`], 
        ArrowBox[BezierCurveBox[{{2.5668710183974275`, 1.148691427530358}, {
         2.111704843042068, 1.6614537426074365`}, {1.441036297737781, 
         1.8039498523445552`}}], 0.030617797001168748`], 
        ArrowBox[{{2.5668710183974275`, 1.148691427530358}, {
         2.147959584863798, 0.219668144992476}}, 0.030617797001168748`], 
        ArrowBox[{{2.5668710183974275`, 1.148691427530358}, {
         2.0368578388877356`, 0.8914492679267586}}, 0.030617797001168748`], 
        ArrowBox[{{2.5668710183974275`, 1.148691427530358}, {
         2.550281633074804, 1.6198997827011292`}}, 0.030617797001168748`], 
        ArrowBox[{{3.052915843072356, 0.699738247649063}, {2.147959584863798, 
         0.219668144992476}}, 0.030617797001168748`], 
        ArrowBox[{{3.052915843072356, 0.699738247649063}, {
         2.0368578388877356`, 0.8914492679267586}}, 0.030617797001168748`], 
        ArrowBox[{{3.052915843072356, 0.699738247649063}, {2.550281633074804, 
         1.6198997827011292`}}, 0.030617797001168748`], 
        ArrowBox[{{1.441036297737781, 1.8039498523445552`}, {
         1.361124555703101, 0.980925405575772}}, 0.030617797001168748`], 
        ArrowBox[{{1.441036297737781, 1.8039498523445552`}, {
         0.758884030188864, 0.9647157795249004}}, 0.030617797001168748`], 
        ArrowBox[BezierCurveBox[{{2.147959584863798, 0.219668144992476}, {
         1.6459601345089907`, -0.06714424379171688}, {1.071715896364404, 
         0.}}], 0.030617797001168748`], 
        ArrowBox[BezierCurveBox[{{2.147959584863798, 0.219668144992476}, {
         1.5737153467192069`, 0.2868123887841925}, {1.071715896364404, 0.}}], 
         0.030617797001168748`], 
        ArrowBox[{{2.147959584863798, 0.219668144992476}, {
         2.0368578388877356`, 0.8914492679267586}}, 0.030617797001168748`], 
        ArrowBox[{{2.147959584863798, 0.219668144992476}, {1.361124555703101, 
         0.980925405575772}}, 0.030617797001168748`], 
        ArrowBox[{{0., 1.1898823201395645`}, {1.361124555703101, 
         0.980925405575772}}, 0.030617797001168748`], 
        ArrowBox[{{0., 1.1898823201395645`}, {0.758884030188864, 
         0.9647157795249004}}, 0.030617797001168748`], 
        ArrowBox[{{1.071715896364404, 0.}, {1.361124555703101, 
         0.980925405575772}}, 0.030617797001168748`], 
        ArrowBox[{{1.071715896364404, 0.}, {0.758884030188864, 
         0.9647157795249004}}, 0.030617797001168748`], 
        ArrowBox[{{2.0368578388877356`, 0.8914492679267586}, {
         0.758884030188864, 0.9647157795249004}}, 0.030617797001168748`], 
        ArrowBox[{{2.0368578388877356`, 0.8914492679267586}, {
         2.550281633074804, 1.6198997827011292`}}, 0.030617797001168748`], 
        ArrowBox[{{2.0368578388877356`, 0.8914492679267586}, {
         1.361124555703101, 0.980925405575772}}, 0.030617797001168748`], 
        ArrowBox[{{1.361124555703101, 0.980925405575772}, {2.550281633074804, 
         1.6198997827011292`}}, 0.030617797001168748`]}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {
         DiskBox[{2.5668710183974275, 1.148691427530358}, 
          0.030617797001168748], 
         InsetBox["1", 
          Offset[{2, 2}, {2.5974888153985964, 1.1793092245315266}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.052915843072356, 0.699738247649063}, 
          0.030617797001168748], 
         InsetBox["2", 
          Offset[{2, 2}, {3.083533640073525, 0.7303560446502317}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.441036297737781, 1.8039498523445552}, 
          0.030617797001168748], 
         InsetBox["3", 
          Offset[{2, 2}, {1.4716540947389498, 1.834567649345724}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.147959584863798, 0.219668144992476}, 
          0.030617797001168748], 
         InsetBox["4", 
          Offset[{2, 2}, {2.178577381864967, 0.25028594199364473}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0., 1.1898823201395645}, 0.030617797001168748], 
         InsetBox["5", 
          Offset[{2, 2}, {0.030617797001168748, 1.2205001171407333}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.071715896364404, 0.}, 0.030617797001168748], 
         InsetBox["6", 
          Offset[{2, 2}, {1.1023336933655727, 0.030617797001168748}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.0368578388877356, 0.8914492679267586}, 
          0.030617797001168748], 
         InsetBox["7", 
          Offset[{2, 2}, {2.0674756358889046, 0.9220670649279273}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.361124555703101, 0.980925405575772}, 
          0.030617797001168748], 
         InsetBox["8", 
          Offset[{2, 2}, {1.3917423527042698, 1.0115432025769409}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.758884030188864, 0.9647157795249004}, 
          0.030617797001168748], 
         InsetBox["9", 
          Offset[{2, 2}, {0.7895018271900327, 0.9953335765260691}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.550281633074804, 1.6198997827011292}, 
          0.030617797001168748], 
         InsetBox["10", 
          Offset[{2, 2}, {2.580899430075973, 1.650517579702298}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{
  3.86663643212803*^9, {3.866636541901282*^9, 3.8666365715647993`*^9}, 
   3.866636704849139*^9},
 CellLabel->"Out[46]=",ExpressionUUID->"53a8bf9e-d557-4fd0-a5d0-fa3903919f3f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EulerianGraphQ", "[", "example", "]"}]], "Input",
 CellChangeTimes->{{3.866636772829897*^9, 3.8666367762765884`*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"7162defe-3fd6-447d-bfad-382b0dc0987b"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.8666367766584396`*^9},
 CellLabel->"Out[50]=",ExpressionUUID->"3cd07acf-407f-44f9-82e4-5808e9823bce"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EulerianGraphQ", "[", "eulerianGraph", "]"}]], "Input",
 CellChangeTimes->{{3.866636548338448*^9, 3.866636577032999*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"765a7547-b767-429f-bb08-5588d4f1ec19"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.8666365518668528`*^9, 3.86663657747296*^9}, 
   3.8666367681292715`*^9},
 CellLabel->"Out[49]=",ExpressionUUID->"87d2f610-9866-4683-9939-c964864359fb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphDifference", "[", 
  RowBox[{"eulerianGraph", ",", "example", ",", 
   RowBox[{"VertexLabels", "->", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8666366550652246`*^9, 3.866636677896079*^9}, {
  3.866636710701064*^9, 
  3.8666367264461994`*^9}},ExpressionUUID->"7c00c053-8be6-48e7-872d-\
c94f2f9a554c"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {Null, {{7, 8}}}, {
      GraphLayout -> {"Dimension" -> 2}, VertexLabels -> {Automatic}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
        {Arrowheads[0.], 
         ArrowBox[{{1.013898888888889, -0.013898888888888895`}, {
          0.013898888888888905`, -0.01389888888888889}}, 0.01273]}}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {DiskBox[{0.6562725, -0.041696666666666674}, 0.01273], 
         InsetBox["1", Offset[{2, 2}, {0.6690025, -0.028966666666666675}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.5277977777777778, -0.041696666666666674}, 0.01273], 
         InsetBox["2", 
          Offset[{2, 2}, {0.5405277777777778, -0.028966666666666675}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.013898888888888888, -0.041696666666666674}, 0.01273], 
         InsetBox["3", 
          Offset[{2, 2}, {0.02662888888888889, -0.028966666666666675}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.1423736111111111, -0.041696666666666674}, 0.01273], 
         InsetBox["4", 
          Offset[{2, 2}, {0.1551036111111111, -0.028966666666666675}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.27084833333333336, -0.041696666666666674}, 0.01273], 
         InsetBox["5", 
          Offset[{2, 2}, {0.2835783333333334, -0.028966666666666675}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.3993230555555556, -0.041696666666666674}, 0.01273], 
         InsetBox["6", 
          Offset[{2, 2}, {0.4120530555555556, -0.028966666666666675}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.013898888888889, -0.013898888888888895}, 0.01273], 
         InsetBox["7", 
          Offset[{2, 2}, {1.0266288888888888, -0.0011688888888888947}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.013898888888888905, -0.01389888888888889}, 0.01273], 
         InsetBox["8", 
          Offset[{2, 2}, {0.026628888888888903, -0.0011688888888888894}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.7847472222222223, -0.041696666666666674}, 0.01273], 
         InsetBox["9", 
          Offset[{2, 2}, {0.7974772222222223, -0.028966666666666675}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.9132219444444445, -0.041696666666666674}, 0.01273], 
         InsetBox["10", 
          Offset[{2, 2}, {0.9259519444444445, -0.028966666666666675}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{{3.8666366626913667`*^9, 3.8666366782577934`*^9}, {
  3.8666367111181555`*^9, 3.866636715540368*^9}},
 CellLabel->"Out[48]=",ExpressionUUID->"ea2f7e06-8f37-461e-8cbf-a53fda614074"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AssociationMap", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"MatrixForm", "@", 
     RowBox[{"IncidenceMatrix", "[", "#", "]"}]}], "&"}], ",", 
   RowBox[{"{", 
    RowBox[{"example", ",", "eulerianGraph", ",", 
     RowBox[{"GraphDifference", "[", 
      RowBox[{"eulerianGraph", ",", "example"}], "]"}]}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8666368329035344`*^9, 3.866636871247424*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"54a181a5-0f52-40ca-9cd9-786f5b0fe84d"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {Null, 
          SparseArray[
          Automatic, {10, 10}, 0, {
           1, {{0, 5, 9, 12, 17, 19, 22, 27, 32, 36, 40}, {{2}, {3}, {4}, {
             7}, {10}, {1}, {4}, {7}, {10}, {1}, {8}, {9}, {1}, {2}, {6}, {
             7}, {8}, {8}, {9}, {4}, {8}, {9}, {1}, {2}, {4}, {9}, {10}, {
             3}, {4}, {5}, {6}, {10}, {3}, {5}, {6}, {7}, {1}, {2}, {7}, {
             8}}}, Pattern}]}, {VertexLabels -> {Automatic}}]]}, 
       TagBox[GraphicsGroupBox[{
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[CompressedData["
1:eJxTTMoPSmVmYGAQAWImKN6ic+rSrGcsDm17VP4zsN+xn3p2yTIhZk6H9b82
sOhyfrRHl++Zkp76UvuHPQMUoMtvfaLAdrmGwYHh+hSJeRHfMfTzLy+cP+8f
g8O8i4v/R51+jiFv8Nxpy/nFLA7nTDjTZhh/wXAPuvno8ujmo8ujm4/un/l/
twlsCvhiv64rS1G24yOGfOX7pVLqja/sTzWx885lfYLhnsM1GhX3Lryzl7KN
mSgj/wdDHt196PLo9sPsZT/0zcuZ9Q1BeXT3obsHXT+6PLp+dPcSkkcPX3T7
0OUB8qof8g==
            "], 0.031139871609553338`]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
           0.7]}], {
            DiskBox[{2.6125999896954344, 0.43792748371465284}, 
             0.031139871609553338], 
            InsetBox["1", 
             Offset[{2, 2}, {2.643739861304988, 0.4690673553242062}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            DiskBox[{3.12650041761817, 1.0647401984457863}, 
             0.031139871609553338], 
            InsetBox["2", 
             Offset[{2, 2}, {3.1576402892277233, 1.0958800700553395}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            DiskBox[{1.510720630752334, 0.}, 0.031139871609553338], 
            InsetBox["3", 
             Offset[{2, 2}, {1.5418605023618874, 0.031139871609553338}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            DiskBox[{2.0609493712223306, 1.4591351471148641}, 
             0.031139871609553338], 
            InsetBox["4", 
             Offset[{2, 2}, {2.092089242831884, 1.4902750187244176}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            DiskBox[{0., 0.8756424392832408}, 0.031139871609553338], 
            InsetBox["5", 
             Offset[{2, 2}, {0.031139871609553338, 0.9067823108927942}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            DiskBox[{0.9629967066611232, 1.757595603765202}, 
             0.031139871609553338], 
            InsetBox["6", 
             Offset[{2, 2}, {0.9941365782706766, 1.7887354753747555}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            DiskBox[{2.1243259865340245, 0.7435736649481901}, 
             0.031139871609553338], 
            InsetBox["7", 
             Offset[{2, 2}, {2.155465858143578, 0.7747135365577434}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            DiskBox[{1.2697010662958303, 1.0957309060401417}, 
             0.031139871609553338], 
            InsetBox["8", 
             Offset[{2, 2}, {1.3008409379053836, 1.1268707776496951}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            DiskBox[{0.828265716597783, 0.6256852392653738}, 
             0.031139871609553338], 
            InsetBox["9", 
             Offset[{2, 2}, {0.8594055882073364, 0.6568251108749271}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            DiskBox[{2.5799860079686354, 1.262596510484673}, 
             0.031139871609553338], 
            InsetBox["10", 
             Offset[{2, 2}, {2.611125879578189, 1.2937363820942265}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}}}],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FormatType->TraditionalForm,
     FrameTicks->None], "\[Rule]", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"1", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0",
          "0", "0", "0", "0", "0", "0"},
        {"1", "0", "0", "0", "0", "1", "1", "1", "0", "0", "0", "0", "0", "0",
          "0", "0", "0", "0", "0", "0"},
        {"0", "1", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0",
          "0", "0", "0", "0", "0", "0"},
        {"0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "1", "1", "1", "0",
          "0", "0", "0", "0", "0", "0"},
        {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1",
          "1", "0", "0", "0", "0", "0"},
        {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0",
          "0", "1", "1", "0", "0", "0"},
        {"0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "1", "0", "0",
          "0", "0", "0", "1", "1", "0"},
        {"0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "1", "1",
          "0", "1", "0", "0", "0", "1"},
        {"0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0",
          "1", "0", "1", "1", "0", "0"},
        {"0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0",
          "0", "0", "0", "0", "1", "1"}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[
      SparseArray[
       Automatic, {10, 20}, 0, {
        1, {{0, 5, 9, 12, 17, 19, 22, 27, 32, 36, 40}, {{1}, {2}, {3}, {4}, {
          5}, {1}, {6}, {7}, {8}, {2}, {9}, {10}, {3}, {6}, {11}, {12}, {
          13}, {14}, {15}, {11}, {16}, {17}, {4}, {7}, {12}, {18}, {19}, {
          9}, {13}, {14}, {16}, {20}, {10}, {15}, {17}, {18}, {5}, {8}, {
          19}, {20}}}, {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
         1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
         1}}]]]]}], ",", 
   RowBox[{
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {
         Null, SparseArray[
          Automatic, {10, 10}, 0, {
           1, {{0, 5, 8, 10, 13, 15, 17, 20, 21, 21, 21}, {{2}, {3}, {4}, {
             7}, {10}, {4}, {7}, {10}, {8}, {9}, {6}, {7}, {8}, {8}, {9}, {
             8}, {9}, {9}, {10}, {8}, {10}}}, {1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 
            2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}}]}, {
         VertexLabels -> {Automatic}}]]}, 
       TagBox[GraphicsGroupBox[{
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
           ArrowBox[{{2.5668710183974275`, 1.148691427530358}, {
            3.052915843072356, 0.699738247649063}}, 0.030617797001168748`], 
           ArrowBox[BezierCurveBox[{{2.5668710183974275`, 
            1.148691427530358}, {1.896202473093139, 1.2911875372674833`}, {
            1.441036297737781, 1.8039498523445552`}}], 0.030617797001168748`],
            ArrowBox[BezierCurveBox[{{2.5668710183974275`, 
            1.148691427530358}, {2.111704843042068, 1.6614537426074365`}, {
            1.441036297737781, 1.8039498523445552`}}], 0.030617797001168748`],
            ArrowBox[{{2.5668710183974275`, 1.148691427530358}, {
            2.147959584863798, 0.219668144992476}}, 0.030617797001168748`], 
           ArrowBox[{{2.5668710183974275`, 1.148691427530358}, {
            2.0368578388877356`, 0.8914492679267586}}, 0.030617797001168748`],
            ArrowBox[{{2.5668710183974275`, 1.148691427530358}, {
            2.550281633074804, 1.6198997827011292`}}, 0.030617797001168748`], 
           ArrowBox[{{3.052915843072356, 0.699738247649063}, {
            2.147959584863798, 0.219668144992476}}, 0.030617797001168748`], 
           ArrowBox[{{3.052915843072356, 0.699738247649063}, {
            2.0368578388877356`, 0.8914492679267586}}, 0.030617797001168748`],
            ArrowBox[{{3.052915843072356, 0.699738247649063}, {
            2.550281633074804, 1.6198997827011292`}}, 0.030617797001168748`], 
           ArrowBox[{{1.441036297737781, 1.8039498523445552`}, {
            1.361124555703101, 0.980925405575772}}, 0.030617797001168748`], 
           ArrowBox[{{1.441036297737781, 1.8039498523445552`}, {
            0.758884030188864, 0.9647157795249004}}, 0.030617797001168748`], 
           ArrowBox[BezierCurveBox[{{2.147959584863798, 0.219668144992476}, {
            1.6459601345089907`, -0.06714424379171688}, {1.071715896364404, 
            0.}}], 0.030617797001168748`], 
           ArrowBox[BezierCurveBox[{{2.147959584863798, 0.219668144992476}, {
            1.5737153467192069`, 0.2868123887841925}, {1.071715896364404, 
            0.}}], 0.030617797001168748`], 
           ArrowBox[{{2.147959584863798, 0.219668144992476}, {
            2.0368578388877356`, 0.8914492679267586}}, 0.030617797001168748`],
            ArrowBox[{{2.147959584863798, 0.219668144992476}, {
            1.361124555703101, 0.980925405575772}}, 0.030617797001168748`], 
           ArrowBox[{{0., 1.1898823201395645`}, {1.361124555703101, 
            0.980925405575772}}, 0.030617797001168748`], 
           ArrowBox[{{0., 1.1898823201395645`}, {0.758884030188864, 
            0.9647157795249004}}, 0.030617797001168748`], 
           ArrowBox[{{1.071715896364404, 0.}, {1.361124555703101, 
            0.980925405575772}}, 0.030617797001168748`], 
           ArrowBox[{{1.071715896364404, 0.}, {0.758884030188864, 
            0.9647157795249004}}, 0.030617797001168748`], 
           ArrowBox[{{2.0368578388877356`, 0.8914492679267586}, {
            0.758884030188864, 0.9647157795249004}}, 0.030617797001168748`], 
           ArrowBox[{{2.0368578388877356`, 0.8914492679267586}, {
            2.550281633074804, 1.6198997827011292`}}, 0.030617797001168748`], 
           ArrowBox[{{2.0368578388877356`, 0.8914492679267586}, {
            1.361124555703101, 0.980925405575772}}, 0.030617797001168748`], 
           ArrowBox[{{1.361124555703101, 0.980925405575772}, {
            2.550281633074804, 1.6198997827011292`}}, 0.030617797001168748`]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
           0.7]}], {
            DiskBox[{2.5668710183974275, 1.148691427530358}, 
             0.030617797001168748], 
            InsetBox["1", 
             Offset[{2, 2}, {2.5974888153985964, 1.1793092245315266}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            DiskBox[{3.052915843072356, 0.699738247649063}, 
             0.030617797001168748], 
            InsetBox["2", 
             Offset[{2, 2}, {3.083533640073525, 0.7303560446502317}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            DiskBox[{1.441036297737781, 1.8039498523445552}, 
             0.030617797001168748], 
            InsetBox["3", 
             Offset[{2, 2}, {1.4716540947389498, 1.834567649345724}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            DiskBox[{2.147959584863798, 0.219668144992476}, 
             0.030617797001168748], 
            InsetBox["4", 
             Offset[{2, 2}, {2.178577381864967, 0.25028594199364473}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            DiskBox[{0., 1.1898823201395645}, 0.030617797001168748], 
            InsetBox["5", 
             Offset[{2, 2}, {0.030617797001168748, 1.2205001171407333}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            DiskBox[{1.071715896364404, 0.}, 0.030617797001168748], 
            InsetBox["6", 
             Offset[{2, 2}, {1.1023336933655727, 0.030617797001168748}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            DiskBox[{2.0368578388877356, 0.8914492679267586}, 
             0.030617797001168748], 
            InsetBox["7", 
             Offset[{2, 2}, {2.0674756358889046, 0.9220670649279273}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            DiskBox[{1.361124555703101, 0.980925405575772}, 
             0.030617797001168748], 
            InsetBox["8", 
             Offset[{2, 2}, {1.3917423527042698, 1.0115432025769409}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            DiskBox[{0.758884030188864, 0.9647157795249004}, 
             0.030617797001168748], 
            InsetBox["9", 
             Offset[{2, 2}, {0.7895018271900327, 0.9953335765260691}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            DiskBox[{2.550281633074804, 1.6198997827011292}, 
             0.030617797001168748], 
            InsetBox["10", 
             Offset[{2, 2}, {2.580899430075973, 1.650517579702298}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}}}],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FormatType->TraditionalForm,
     FrameTicks->None], "\[Rule]", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"1", "1", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0",
          "0", "0", "0", "0", "0", "0", "0", "0", "0"},
        {"1", "0", "0", "0", "0", "0", "1", "1", "1", "0", "0", "0", "0", "0",
          "0", "0", "0", "0", "0", "0", "0", "0", "0"},
        {"0", "1", "1", "0", "0", "0", "0", "0", "0", "1", "1", "0", "0", "0",
          "0", "0", "0", "0", "0", "0", "0", "0", "0"},
        {"0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "1", "1", "1",
          "1", "0", "0", "0", "0", "0", "0", "0", "0"},
        {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0",
          "0", "1", "1", "0", "0", "0", "0", "0", "0"},
        {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "1", "0",
          "0", "0", "0", "1", "1", "0", "0", "0", "0"},
        {"0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "1",
          "0", "0", "0", "0", "0", "1", "1", "1", "0"},
        {"0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0",
          "1", "1", "0", "1", "0", "0", "0", "1", "1"},
        {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0",
          "0", "0", "1", "0", "1", "1", "0", "0", "0"},
        {"0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0",
          "0", "0", "0", "0", "0", "0", "1", "0", "1"}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[
      SparseArray[
       Automatic, {10, 23}, 0, {
        1, {{0, 6, 10, 14, 20, 22, 26, 32, 38, 42, 46}, {{1}, {2}, {3}, {4}, {
          5}, {6}, {1}, {7}, {8}, {9}, {2}, {3}, {10}, {11}, {4}, {7}, {12}, {
          13}, {14}, {15}, {16}, {17}, {12}, {13}, {18}, {19}, {5}, {8}, {
          14}, {20}, {21}, {22}, {10}, {15}, {16}, {18}, {22}, {23}, {11}, {
          17}, {19}, {20}, {6}, {9}, {21}, {23}}}, {1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}}]]]]}], ",", 
   RowBox[{
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {Null, {{7, 8}}}]]}, 
       TagBox[
        GraphicsGroupBox[
         GraphicsComplexBox[{{0.6562725, -0.041696666666666674`}, {
          0.5277977777777778, -0.041696666666666674`}, {
          0.013898888888888888`, -0.041696666666666674`}, {
          0.1423736111111111, -0.041696666666666674`}, {
          0.27084833333333336`, -0.041696666666666674`}, {
          0.3993230555555556, -0.041696666666666674`}, {
          1.013898888888889, -0.013898888888888895`}, {
          0.013898888888888905`, -0.01389888888888889}, {
          0.7847472222222223, -0.041696666666666674`}, {
          0.9132219444444445, -0.041696666666666674`}}, {
           {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
            {Arrowheads[0.], ArrowBox[{7, 8}, 0.01273]}}, 
           {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
            DiskBox[1, 0.01273], DiskBox[2, 0.01273], DiskBox[3, 0.01273], 
            DiskBox[4, 0.01273], DiskBox[5, 0.01273], DiskBox[6, 0.01273], 
            DiskBox[7, 0.01273], DiskBox[8, 0.01273], DiskBox[9, 0.01273], 
            DiskBox[10, 0.01273]}}]],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FormatType->TraditionalForm,
     FrameTicks->None], "\[Rule]", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"0"},
        {"0"},
        {"0"},
        {"0"},
        {"0"},
        {"0"},
        {"1"},
        {"1"},
        {"0"},
        {"0"}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[
      SparseArray[
       Automatic, {10, 1}, 0, {
        1, {{0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2}, {{1}, {1}}}, {1, 1}}]]]]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.866636843788833*^9, 3.8666368716514516`*^9}},
 CellLabel->"Out[57]=",ExpressionUUID->"e1351316-ac7b-4f23-9540-968f9464ef44"]
}, Open  ]],

Cell["The objective function depends on the edge count", "Text",
 CellChangeTimes->{{3.8666372387912025`*^9, 
  3.866637249691802*^9}},ExpressionUUID->"07385714-3502-451b-a934-\
4fbda4c8557d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Array", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Indexed", "[", 
     RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", "20"}], "]"}]], "Input",
 CellChangeTimes->{{3.8666372560770645`*^9, 3.8666372750239873`*^9}},
 CellLabel->"In[58]:=",ExpressionUUID->"0f7933d1-9519-4b76-aa9d-590959f5a198"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"x", "1"},
    "IndexedDefault"], ",", 
   TemplateBox[{"x", "2"},
    "IndexedDefault"], ",", 
   TemplateBox[{"x", "3"},
    "IndexedDefault"], ",", 
   TemplateBox[{"x", "4"},
    "IndexedDefault"], ",", 
   TemplateBox[{"x", "5"},
    "IndexedDefault"], ",", 
   TemplateBox[{"x", "6"},
    "IndexedDefault"], ",", 
   TemplateBox[{"x", "7"},
    "IndexedDefault"], ",", 
   TemplateBox[{"x", "8"},
    "IndexedDefault"], ",", 
   TemplateBox[{"x", "9"},
    "IndexedDefault"], ",", 
   TemplateBox[{"x", "10"},
    "IndexedDefault"], ",", 
   TemplateBox[{"x", "11"},
    "IndexedDefault"], ",", 
   TemplateBox[{"x", "12"},
    "IndexedDefault"], ",", 
   TemplateBox[{"x", "13"},
    "IndexedDefault"], ",", 
   TemplateBox[{"x", "14"},
    "IndexedDefault"], ",", 
   TemplateBox[{"x", "15"},
    "IndexedDefault"], ",", 
   TemplateBox[{"x", "16"},
    "IndexedDefault"], ",", 
   TemplateBox[{"x", "17"},
    "IndexedDefault"], ",", 
   TemplateBox[{"x", "18"},
    "IndexedDefault"], ",", 
   TemplateBox[{"x", "19"},
    "IndexedDefault"], ",", 
   TemplateBox[{"x", "20"},
    "IndexedDefault"]}], "}"}]], "Output",
 CellChangeTimes->{3.8666372753251033`*^9},
 CellLabel->"Out[58]=",ExpressionUUID->"3617b5b6-de0c-41ba-b5a1-c4a651548cff"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Array", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Indexed", "[", 
      RowBox[{"x", ",", "#"}], "]"}], "&"}], ",", "20"}], "]"}], "/.", 
  RowBox[{"{", 
   RowBox[{
    TemplateBox[{"x", "1"},
     "IndexedDefault"], "->", "0"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.8666372560770645`*^9, 3.8666373029519835`*^9}},
 CellLabel->"In[59]:=",ExpressionUUID->"57108a86-22f8-46de-b3bb-bec6766c06e4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   TemplateBox[{"x", "2"},
    "IndexedDefault"], ",", 
   TemplateBox[{"x", "3"},
    "IndexedDefault"], ",", 
   TemplateBox[{"x", "4"},
    "IndexedDefault"], ",", 
   TemplateBox[{"x", "5"},
    "IndexedDefault"], ",", 
   TemplateBox[{"x", "6"},
    "IndexedDefault"], ",", 
   TemplateBox[{"x", "7"},
    "IndexedDefault"], ",", 
   TemplateBox[{"x", "8"},
    "IndexedDefault"], ",", 
   TemplateBox[{"x", "9"},
    "IndexedDefault"], ",", 
   TemplateBox[{"x", "10"},
    "IndexedDefault"], ",", 
   TemplateBox[{"x", "11"},
    "IndexedDefault"], ",", 
   TemplateBox[{"x", "12"},
    "IndexedDefault"], ",", 
   TemplateBox[{"x", "13"},
    "IndexedDefault"], ",", 
   TemplateBox[{"x", "14"},
    "IndexedDefault"], ",", 
   TemplateBox[{"x", "15"},
    "IndexedDefault"], ",", 
   TemplateBox[{"x", "16"},
    "IndexedDefault"], ",", 
   TemplateBox[{"x", "17"},
    "IndexedDefault"], ",", 
   TemplateBox[{"x", "18"},
    "IndexedDefault"], ",", 
   TemplateBox[{"x", "19"},
    "IndexedDefault"], ",", 
   TemplateBox[{"x", "20"},
    "IndexedDefault"]}], "}"}]], "Output",
 CellChangeTimes->{3.8666373032409325`*^9},
 CellLabel->"Out[59]=",ExpressionUUID->"782a4e9a-106e-4183-9139-4a81b5675aa2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EdgeList", "[", "example", "]"}]], "Input",
 CellChangeTimes->{{3.866637330242281*^9, 3.86663733281595*^9}},
 CellLabel->"In[60]:=",ExpressionUUID->"cf975dfb-a51f-473f-b4c7-74133dbb6cd5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"1", "\[UndirectedEdge]", "2"}], ",", 
   RowBox[{"1", "\[UndirectedEdge]", "3"}], ",", 
   RowBox[{"1", "\[UndirectedEdge]", "4"}], ",", 
   RowBox[{"1", "\[UndirectedEdge]", "7"}], ",", 
   RowBox[{"1", "\[UndirectedEdge]", "10"}], ",", 
   RowBox[{"2", "\[UndirectedEdge]", "4"}], ",", 
   RowBox[{"2", "\[UndirectedEdge]", "7"}], ",", 
   RowBox[{"2", "\[UndirectedEdge]", "10"}], ",", 
   RowBox[{"3", "\[UndirectedEdge]", "8"}], ",", 
   RowBox[{"3", "\[UndirectedEdge]", "9"}], ",", 
   RowBox[{"4", "\[UndirectedEdge]", "6"}], ",", 
   RowBox[{"4", "\[UndirectedEdge]", "7"}], ",", 
   RowBox[{"4", "\[UndirectedEdge]", "8"}], ",", 
   RowBox[{"5", "\[UndirectedEdge]", "8"}], ",", 
   RowBox[{"5", "\[UndirectedEdge]", "9"}], ",", 
   RowBox[{"6", "\[UndirectedEdge]", "8"}], ",", 
   RowBox[{"6", "\[UndirectedEdge]", "9"}], ",", 
   RowBox[{"7", "\[UndirectedEdge]", "9"}], ",", 
   RowBox[{"7", "\[UndirectedEdge]", "10"}], ",", 
   RowBox[{"8", "\[UndirectedEdge]", "10"}]}], "}"}]], "Output",
 CellChangeTimes->{3.866637333101136*^9},
 CellLabel->"Out[60]=",ExpressionUUID->"d45cbc48-d709-4f24-96ee-b8c14bbc0b81"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EdgeList", "[", "eulerianGraph", "]"}]], "Input",
 CellChangeTimes->{{3.866637338612464*^9, 3.8666373435437*^9}},
 CellLabel->"In[61]:=",ExpressionUUID->"6d4ef5fa-ae6f-4806-814c-4de06a5db45f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"1", "\[UndirectedEdge]", "2"}], ",", 
   RowBox[{"1", "\[UndirectedEdge]", "3"}], ",", 
   RowBox[{"1", "\[UndirectedEdge]", "3"}], ",", 
   RowBox[{"1", "\[UndirectedEdge]", "4"}], ",", 
   RowBox[{"1", "\[UndirectedEdge]", "7"}], ",", 
   RowBox[{"1", "\[UndirectedEdge]", "10"}], ",", 
   RowBox[{"2", "\[UndirectedEdge]", "4"}], ",", 
   RowBox[{"2", "\[UndirectedEdge]", "7"}], ",", 
   RowBox[{"2", "\[UndirectedEdge]", "10"}], ",", 
   RowBox[{"3", "\[UndirectedEdge]", "8"}], ",", 
   RowBox[{"3", "\[UndirectedEdge]", "9"}], ",", 
   RowBox[{"4", "\[UndirectedEdge]", "6"}], ",", 
   RowBox[{"4", "\[UndirectedEdge]", "6"}], ",", 
   RowBox[{"4", "\[UndirectedEdge]", "7"}], ",", 
   RowBox[{"4", "\[UndirectedEdge]", "8"}], ",", 
   RowBox[{"5", "\[UndirectedEdge]", "8"}], ",", 
   RowBox[{"5", "\[UndirectedEdge]", "9"}], ",", 
   RowBox[{"6", "\[UndirectedEdge]", "8"}], ",", 
   RowBox[{"6", "\[UndirectedEdge]", "9"}], ",", 
   RowBox[{"7", "\[UndirectedEdge]", "9"}], ",", 
   RowBox[{"7", "\[UndirectedEdge]", "10"}], ",", 
   RowBox[{"7", "\[UndirectedEdge]", "8"}], ",", 
   RowBox[{"8", "\[UndirectedEdge]", "10"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8666373438537083`*^9},
 CellLabel->"Out[61]=",ExpressionUUID->"b77d35af-5da7-4b4e-8010-0bd192f8171b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Complement", "[", 
  RowBox[{
   RowBox[{"EdgeList", "[", "eulerianGraph", "]"}], ",", 
   RowBox[{"EdgeList", "[", "example", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8666373577956905`*^9, 3.866637388907446*^9}},
 CellLabel->"In[64]:=",ExpressionUUID->"4f127025-4e0d-4ff3-bae9-560b076c8d69"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"7", "\[UndirectedEdge]", "8"}], "}"}]], "Output",
 CellChangeTimes->{{3.866637363347751*^9, 3.8666373893135166`*^9}},
 CellLabel->"Out[64]=",ExpressionUUID->"9faa3997-00e0-4a33-8b61-49970518e08c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ConstantArray", "[", 
   RowBox[{"0", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"VertexCount", "[", "example", "]"}], ",", 
      RowBox[{"VertexCount", "[", "example", "]"}]}], "}"}]}], "]"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.8666374010350533`*^9, 3.866637455426693*^9}},
 CellLabel->"In[68]:=",ExpressionUUID->"14a76672-b82e-4c98-8c90-733ea8c472d9"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.8666374398932285`*^9, 3.8666374557682204`*^9}},
 CellLabel->
  "Out[68]//MatrixForm=",ExpressionUUID->"6d281dc5-947a-462b-a345-\
8462dafdc6c6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ReplaceAt", "[", 
   RowBox[{
    RowBox[{"ConstantArray", "[", 
     RowBox[{"0", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"VertexCount", "[", "example", "]"}], ",", 
        RowBox[{"VertexCount", "[", "example", "]"}]}], "}"}]}], "]"}], ",", 
    RowBox[{"0", "->", "1"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"7", ",", "8"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"6", ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3", ",", "1"}], "}"}]}], "}"}]}], "]"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.8666374648093214`*^9, 3.866637532574177*^9}},
 CellLabel->"In[71]:=",ExpressionUUID->"f333e33e-855a-4a88-b2a6-1d1dc954e244"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"1", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "1", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "1", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.8666375097680817`*^9, 3.866637532947174*^9}},
 CellLabel->
  "Out[71]//MatrixForm=",ExpressionUUID->"b80d6d0a-96e4-47e2-bdd1-\
f3404b2ef1b7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"s", "=", 
  RowBox[{"SparseArray", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"7", ",", "8"}], "}"}], "->", "1"}], ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"6", ",", "4"}], "}"}], "->", "1"}], ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"3", ",", "1"}], "}"}], "->", "1"}]}], "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8666384496210327`*^9, 3.86663849568773*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"9458932e-f4f8-487b-a403-0a6b169291ef"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["SparseArray",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             RasterBox[CompressedData["
1:eJxTTMoPSmVmYGBgB2IOIAaxrcp3x81SOmc/x3jRFvMfV+xfLFJ8HLjqlf1g
E9/ZbeC6c8sL+xvuy9fVTHtrfzIi91/81/dDxvxR8cEpPhrvo+KUiAMAGerL
oA==
              "], {{0, 0}, {8, 7}}, {0, 1}], AspectRatio -> 1, Axes -> False, 
             Frame -> False, FrameLabel -> {None, None}, FrameStyle -> 
             Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], 
             FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
             Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], 
             Method -> {
              "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
               Automatic, 
               "DefaultGraphicsInteraction" -> {
                "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                 "Effects" -> {
                  "Highlight" -> {"ratio" -> 2}, 
                   "HighlightPoint" -> {"ratio" -> 2}, 
                   "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
               "DefaultPlotStyle" -> Automatic, "DomainPadding" -> 
               Scaled[0.02], "RangePadding" -> Scaled[0.05]}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Specified elements: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["3", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"7", ",", "8"}], "}"}], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             RasterBox[CompressedData["
1:eJxTTMoPSmVmYGBgB2IOIAaxrcp3x81SOmc/x3jRFvMfV+xfLFJ8HLjqlf1g
E9/ZbeC6c8sL+xvuy9fVTHtrfzIi91/81/dDxvxR8cEpPhrvo+KUiAMAGerL
oA==
              "], {{0, 0}, {8, 7}}, {0, 1}], AspectRatio -> 1, Axes -> False, 
             Frame -> False, FrameLabel -> {None, None}, FrameStyle -> 
             Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], 
             FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
             Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], 
             Method -> {
              "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
               Automatic, 
               "DefaultGraphicsInteraction" -> {
                "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                 "Effects" -> {
                  "Highlight" -> {"ratio" -> 2}, 
                   "HighlightPoint" -> {"ratio" -> 2}, 
                   "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
               "DefaultPlotStyle" -> Automatic, "DomainPadding" -> 
               Scaled[0.02], "RangePadding" -> Scaled[0.05]}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Specified elements: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["3", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"7", ",", "8"}], "}"}], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Default: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Density: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0.05357142857142857`", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Elements:\"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"\"", "SummaryItem"]}]}, {
               TagBox[
                TagBox[
                 GridBox[{{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"3", ",", "1"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "1", ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"6", ",", "4"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "1", ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"7", ",", "8"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "1", ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"], "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  SparseArray[
  Automatic, {7, 8}, 0, {
   1, {{0, 0, 0, 1, 1, 1, 2, 3}, {{1}, {4}, {8}}}, {1, 1, 1}}],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.866638496404146*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"0c2ec745-5f41-4aca-9bac-d22c40d8d7f7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ConstantArray", "[", 
  RowBox[{"0", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"VertexCount", "[", "example", "]"}], ",", 
     RowBox[{"VertexCount", "[", "example", "]"}]}], "}"}], ",", 
   "SparseArray"}], "]"}]], "Input",
 CellChangeTimes->{{3.8666386831588783`*^9, 3.8666387273052645`*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"146e29d3-d69f-47df-b790-0596433f9263"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["SparseArray",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"], 
               ImageSizeCache -> {
                10.869016023673117`, {0., 10.869016023673117`}}], Appearance -> 
              None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             RasterBox[CompressedData["
1:eJxTTMoPSmVmYGDggmIQ26p8d9wspXP2c4wXbTH/ccX+xSLFx4GrXtmPio+K
j4qPio+Kj4qPio+Kj4qTJw4AG3/1MA==
              "], {{0, 0}, {10, 10}}, {0, 1}], AspectRatio -> 1, Axes -> 
             False, Frame -> False, FrameLabel -> {None, None}, FrameStyle -> 
             Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], 
             FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
             Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], 
             Method -> {
              "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
               Automatic, 
               "DefaultGraphicsInteraction" -> {
                "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                 "Effects" -> {
                  "Highlight" -> {"ratio" -> 2}, 
                   "HighlightPoint" -> {"ratio" -> 2}, 
                   "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
               "DefaultPlotStyle" -> Automatic, "DomainPadding" -> 
               Scaled[0.02], "RangePadding" -> Scaled[0.05]}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Specified elements: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"10", ",", "10"}], "}"}], "SummaryItem"]}]}}, 
             AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
        GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"], 
               ImageSizeCache -> {
                10.869016023673117`, {0., 10.869016023673117`}}], Appearance -> 
              None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             RasterBox[CompressedData["
1:eJxTTMoPSmVmYGDggmIQ26p8d9wspXP2c4wXbTH/ccX+xSLFx4GrXtmPio+K
j4qPio+Kj4qPio+Kj4qTJw4AG3/1MA==
              "], {{0, 0}, {10, 10}}, {0, 1}], AspectRatio -> 1, Axes -> 
             False, Frame -> False, FrameLabel -> {None, None}, FrameStyle -> 
             Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], 
             FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
             Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], 
             Method -> {
              "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
               Automatic, 
               "DefaultGraphicsInteraction" -> {
                "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                 "Effects" -> {
                  "Highlight" -> {"ratio" -> 2}, 
                   "HighlightPoint" -> {"ratio" -> 2}, 
                   "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
               "DefaultPlotStyle" -> Automatic, "DomainPadding" -> 
               Scaled[0.02], "RangePadding" -> Scaled[0.05]}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Specified elements: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"10", ",", "10"}], "}"}], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Default: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Density: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0.`", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Elements: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["None", "SummaryItem"]}]}}, AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  SparseArray[
  Automatic, {10, 10}, 0, {1, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {}}, {}}],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.866638701148349*^9, 3.866638727958172*^9}},
 CellLabel->"Out[4]=",ExpressionUUID->"9ca1ab10-def6-4439-b95f-51b0c65ac660"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SparseArray", "[", 
  RowBox[{
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"VertexCount", "[", "example", "]"}], ",", 
       RowBox[{"VertexCount", "[", "example", "]"}]}], "}"}], ",", 
     "SparseArray"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"7", ",", "8"}], "}"}], "->", "1"}], ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"6", ",", "4"}], "}"}], "->", "1"}], ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"3", ",", "1"}], "}"}], "->", "1"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.866638740301943*^9, 3.8666387405567913`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"7acdbc4c-c12e-424d-a551-a92f14da54a7"],

Cell[BoxData[
 TemplateBox[{
  "SparseArray", "adims", 
   "\"Array dimension specification \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"7\\\", \\\",\\\", \\\"8\\\"}], \
\\\"}\\\"}], \\\"\[Rule]\\\", \\\"1\\\"}], \\\",\\\", RowBox[{RowBox[{\\\"{\\\
\", RowBox[{\\\"6\\\", \\\",\\\", \\\"4\\\"}], \\\"}\\\"}], \\\"\[Rule]\\\", \
\\\"1\\\"}], \\\",\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"3\\\", \\\",\\\
\", \\\"1\\\"}], \\\"}\\\"}], \\\"\[Rule]\\\", \\\"1\\\"}]}], \\\"}\\\"}]\\) \
should be Automatic, a non-negative machine integer, or a list of \
non-negative machine integers.\"", 2, 5, 2, 19443644064093027831, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8666387408815613`*^9},
 CellLabel->
  "During evaluation of \
In[5]:=",ExpressionUUID->"e1b61d4f-99b3-448d-b14a-b1b7299b0712"],

Cell[BoxData[
 RowBox[{"SparseArray", "[", 
  RowBox[{
   InterpretationBox[
    RowBox[{
     TagBox["SparseArray",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[
               RasterBox[CompressedData["
1:eJxTTMoPSmVmYGDggmIQ26p8d9wspXP2c4wXbTH/ccX+xSLFx4GrXtmPio+K
j4qPio+Kj4qPio+Kj4qTJw4AG3/1MA==
                "], {{0, 0}, {10, 10}}, {0, 1}], AspectRatio -> 1, Axes -> 
               False, Frame -> False, FrameLabel -> {None, None}, FrameStyle -> 
               Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], 
               FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
               Directive[
                 GrayLevel[0.5, 0.4]], ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], 
               Method -> {
                "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
                 Automatic, 
                 "DefaultGraphicsInteraction" -> {
                  "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                   "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                 "DefaultPlotStyle" -> Automatic, "DomainPadding" -> 
                 Scaled[0.02], "RangePadding" -> Scaled[0.05]}], 
              GridBox[{{
                 RowBox[{
                   TagBox[
                   "\"Specified elements: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["0", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"10", ",", "10"}], "}"}], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[
               RasterBox[CompressedData["
1:eJxTTMoPSmVmYGDggmIQ26p8d9wspXP2c4wXbTH/ccX+xSLFx4GrXtmPio+K
j4qPio+Kj4qPio+Kj4qTJw4AG3/1MA==
                "], {{0, 0}, {10, 10}}, {0, 1}], AspectRatio -> 1, Axes -> 
               False, Frame -> False, FrameLabel -> {None, None}, FrameStyle -> 
               Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], 
               FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
               Directive[
                 GrayLevel[0.5, 0.4]], ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], 
               Method -> {
                "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
                 Automatic, 
                 "DefaultGraphicsInteraction" -> {
                  "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                   "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                 "DefaultPlotStyle" -> Automatic, "DomainPadding" -> 
                 Scaled[0.02], "RangePadding" -> Scaled[0.05]}], 
              GridBox[{{
                 RowBox[{
                   TagBox[
                   "\"Specified elements: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["0", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"10", ",", "10"}], "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Default: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["0", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Density: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["0.`", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Elements: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["None", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    SparseArray[
    Automatic, {10, 10}, 0, {1, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {}}, {}}],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"7", ",", "8"}], "}"}], "\[Rule]", "1"}], ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"6", ",", "4"}], "}"}], "\[Rule]", "1"}], ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"3", ",", "1"}], "}"}], "\[Rule]", "1"}]}], "}"}]}], 
  "]"}]], "Output",
 CellChangeTimes->{3.8666387413355603`*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"d5eaaffe-b80e-4c39-8345-4e29a284a725"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SparseArray", "[", 
  RowBox[{
   InterpretationBox[
    RowBox[{
     TagBox["SparseArray",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"], 
                 ImageSizeCache -> {
                  10.869016023673117`, {0., 10.869016023673117`}}], 
                Appearance -> None, BaseStyle -> {}, 
                ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[
               RasterBox[CompressedData["
1:eJxTTMoPSmVmYGDggmIQ26p8d9wspXP2c4wXbTH/ccX+xSLFx4GrXtmPio+K
j4qPio+Kj4qPio+Kj4qTJw4AG3/1MA==
                "], {{0, 0}, {10, 10}}, {0, 1}], AspectRatio -> 1, Axes -> 
               False, Frame -> False, FrameLabel -> {None, None}, FrameStyle -> 
               Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], 
               FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
               Directive[
                 GrayLevel[0.5, 0.4]], ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], 
               Method -> {
                "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
                 Automatic, 
                 "DefaultGraphicsInteraction" -> {
                  "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                   "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                 "DefaultPlotStyle" -> Automatic, "DomainPadding" -> 
                 Scaled[0.02], "RangePadding" -> Scaled[0.05]}], 
              GridBox[{{
                 RowBox[{
                   TagBox[
                   "\"Specified elements: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["0", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"10", ",", "10"}], "}"}], "SummaryItem"]}]}}, 
               AutoDelete -> False, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
            False, BaselinePosition -> {1, 1}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
          GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"], 
                 ImageSizeCache -> {
                  10.869016023673117`, {0., 10.869016023673117`}}], 
                Appearance -> None, BaseStyle -> {}, 
                ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[
               RasterBox[CompressedData["
1:eJxTTMoPSmVmYGDggmIQ26p8d9wspXP2c4wXbTH/ccX+xSLFx4GrXtmPio+K
j4qPio+Kj4qPio+Kj4qTJw4AG3/1MA==
                "], {{0, 0}, {10, 10}}, {0, 1}], AspectRatio -> 1, Axes -> 
               False, Frame -> False, FrameLabel -> {None, None}, FrameStyle -> 
               Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], 
               FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
               Directive[
                 GrayLevel[0.5, 0.4]], ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], 
               Method -> {
                "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
                 Automatic, 
                 "DefaultGraphicsInteraction" -> {
                  "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                   "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                 "DefaultPlotStyle" -> Automatic, "DomainPadding" -> 
                 Scaled[0.02], "RangePadding" -> Scaled[0.05]}], 
              GridBox[{{
                 RowBox[{
                   TagBox[
                   "\"Specified elements: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["0", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"10", ",", "10"}], "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Default: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["0", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Density: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["0.`", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Elements: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["None", "SummaryItem"]}]}}, AutoDelete -> False, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
            False, BaselinePosition -> {1, 1}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    SparseArray[
    Automatic, {10, 10}, 0, {1, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {}}, {}}],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", "10", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"7", ",", "8"}], "}"}], "->", "1"}], ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"6", ",", "4"}], "}"}], "->", "1"}], ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"3", ",", "1"}], "}"}], "->", "1"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8666387750919456`*^9, 3.866638810908213*^9}, {
  3.866638864324848*^9, 3.8666389150703287`*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"a018cbab-1b3d-43a0-8889-571f30470988"],

Cell[BoxData[
 TemplateBox[{
  "SparseArray", "ilist", 
   "\"The implicit value \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{RowBox[{RowBox[{\
\\\"{\\\", RowBox[{\\\"7\\\", \\\",\\\", \\\"8\\\"}], \\\"}\\\"}], \
\\\"\[Rule]\\\", \\\"1\\\"}], \\\",\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{\\\"6\\\", \\\",\\\", \\\"4\\\"}], \\\"}\\\"}], \\\"\[Rule]\\\", \
\\\"1\\\"}], \\\",\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"3\\\", \\\",\\\
\", \\\"1\\\"}], \\\"}\\\"}], \\\"\[Rule]\\\", \\\"1\\\"}]}], \\\"}\\\"}]\\) \
in \\!\\(\\*RowBox[{\\\"SparseArray\\\", \\\"[\\\", \
RowBox[{InterpretationBox[RowBox[{TagBox[\\\"SparseArray\\\", \\\"SummaryHead\
\\\"], \\\"[\\\", DynamicModuleBox[{Typeset`open$$ = False, \
Set[Typeset`embedState$$, \\\"Ready\\\"]}, \
TemplateBox[List[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[PaneBox[ButtonBox[DynamicBox[FEPrivate`FrontEndResource[\\\"\
FEBitmaps\\\", \\\"SummaryBoxOpener\\\"]], RuleDelayed[ButtonFunction, \
Set[Typeset`open$$, True]], Rule[Appearance, None], Rule[BaseStyle, List[]], \
Rule[Evaluator, Automatic], Rule[Method, \\\"Preemptive\\\"]], \
Rule[Alignment, List[Center, Center]], Rule[ImageSize, \
Dynamic[List[Automatic, Times[3.5`, \
Times[CurrentValue[\\\"FontCapHeight\\\"], \
Power[AbsoluteCurrentValue[Magnification], -1]]]]]]], \
GraphicsBox[RasterBox[List[List[List[0.235431`, 0.32765`, 0.833291`], \
List[0.235431`, 0.32765`, 0.833291`], List[0.235431`, 0.32765`, 0.833291`], \
List[0.235431`, 0.32765`, 0.833291`], List[0.235431`, 0.32765`, 0.833291`], \
List[0.235431`, 0.32765`, 0.833291`], List[0.235431`, 0.32765`, 0.833291`], \
List[0.235431`, 0.32765`, 0.833291`], List[0.235431`, 0.32765`, 0.833291`], \
List[0.235431`, 0.32765`, 0.833291`]], List[List[0.235431`, 0.32765`, \
0.833291`], List[0.235431`, 0.32765`, 0.833291`], List[0.235431`, 0.32765`, \
0.833291`], List[0.235431`, 0.32765`, 0.833291`], List[0.235431`, 0.32765`, \
0.833291`], List[0.235431`, 0.32765`, 0.833291`], List[0.235431`, 0.32765`, \
0.833291`], List[0.235431`, 0.32765`, 0.833291`], List[0.235431`, 0.32765`, \
0.833291`], List[0.235431`, 0.32765`, 0.833291`]], List[List[0.235431`, \
0.32765`, 0.833291`], List[0.235431`, 0.32765`, 0.833291`], List[0.235431`, \
0.32765`, 0.833291`], List[0.235431`, 0.32765`, 0.833291`], List[0.235431`, \
0.32765`, 0.833291`], List[0.235431`, 0.32765`, 0.833291`], List[0.235431`, \
0.32765`, 0.833291`], List[0.235431`, 0.32765`, 0.833291`], List[0.235431`, \
0.32765`, 0.833291`], List[0.235431`, 0.32765`, 0.833291`]], \
List[List[0.235431`, 0.32765`, 0.833291`], List[0.235431`, 0.32765`, \
0.833291`], List[0.235431`, 0.32765`, 0.833291`], List[0.235431`, 0.32765`, \
0.833291`], List[0.235431`, 0.32765`, 0.833291`], List[0.235431`, 0.32765`, \
0.833291`], List[0.235431`, 0.32765`, 0.833291`], List[0.235431`, 0.32765`, \
0.833291`], List[0.235431`, 0.32765`, 0.833291`], List[0.235431`, 0.32765`, \
0.833291`]], List[List[0.235431`, 0.32765`, 0.833291`], List[0.235431`, \
0.32765`, 0.833291`], List[0.235431`, 0.32765`, 0.833291`], List[0.235431`, \
0.32765`, 0.833291`], List[0.235431`, 0.32765`, 0.833291`], List[0.235431`, \
0.32765`, 0.833291`], List[0.235431`, 0.32765`, 0.833291`], List[0.235431`, \
0.32765`, 0.833291`], List[0.235431`, 0.32765`, 0.833291`], List[0.235431`, \
0.32765`, 0.833291`]], List[List[0.235431`, 0.32765`, 0.833291`], \
List[0.235431`, 0.32765`, 0.833291`], List[0.235431`, 0.32765`, 0.833291`], \
List[0.235431`, 0.32765`, 0.833291`], List[0.235431`, 0.32765`, 0.833291`], \
List[0.235431`, 0.32765`, 0.833291`], List[0.235431`, 0.32765`, 0.833291`], \
List[0.235431`, 0.32765`, 0.833291`], List[0.235431`, 0.32765`, 0.833291`], \
List[0.235431`, 0.32765`, 0.833291`]], List[List[0.235431`, 0.32765`, \
0.833291`], List[0.235431`, 0.32765`, 0.833291`], List[0.235431`, 0.32765`, \
0.833291`], List[0.235431`, 0.32765`, 0.833291`], List[0.235431`, 0.32765`, \
0.833291`], List[0.235431`, 0.32765`, 0.833291`], List[0.235431`, 0.32765`, \
0.833291`], List[0.235431`, 0.32765`, 0.833291`], List[0.235431`, 0.32765`, \
0.833291`], List[0.235431`, 0.32765`, 0.833291`]], List[List[0.235431`, \
0.32765`, 0.833291`], List[0.235431`, 0.32765`, 0.833291`], List[0.235431`, \
0.32765`, 0.833291`], List[0.235431`, 0.32765`, 0.833291`], List[0.235431`, \
0.32765`, 0.833291`], List[0.235431`, 0.32765`, 0.833291`], List[0.235431`, \
0.32765`, 0.833291`], List[0.235431`, 0.32765`, 0.833291`], List[0.235431`, \
0.32765`, 0.833291`], List[0.235431`, 0.32765`, 0.833291`]], \
List[List[0.235431`, 0.32765`, 0.833291`], List[0.235431`, 0.32765`, \
0.833291`], List[0.235431`, 0.32765`, 0.833291`], List[0.235431`, 0.32765`, \
0.833291`], List[0.235431`, 0.32765`, 0.833291`], List[0.235431`, 0.32765`, \
0.833291`], List[0.235431`, 0.32765`, 0.833291`], List[0.235431`, 0.32765`, \
0.833291`], List[0.235431`, 0.32765`, 0.833291`], List[0.235431`, 0.32765`, \
0.833291`]], List[List[0.235431`, 0.32765`, 0.833291`], List[0.235431`, \
0.32765`, 0.833291`], List[0.235431`, 0.32765`, 0.833291`], List[0.235431`, \
0.32765`, 0.833291`], List[0.235431`, 0.32765`, 0.833291`], List[0.235431`, \
0.32765`, 0.833291`], List[0.235431`, 0.32765`, 0.833291`], List[0.235431`, \
0.32765`, 0.833291`], List[0.235431`, 0.32765`, 0.833291`], List[0.235431`, \
0.32765`, 0.833291`]]], List[List[0, 0], List[10, 10]], List[0, 1]], \
Rule[AspectRatio, 1], Rule[Axes, False], Rule[Frame, False], Rule[FrameLabel, \
List[None, None]], Rule[FrameStyle, Directive[Opacity[0.5`], Thickness[Tiny], \
RGBColor[0.368417`, 0.506779`, 0.709798`]]], Rule[FrameTicks, List[List[None, \
None], List[None, None]]], Rule[GridLinesStyle, Directive[GrayLevel[0.5`, \
0.4`]]], Rule[ImageSize, Dynamic[List[Automatic, Times[3.5`, \
Times[CurrentValue[\\\"FontCapHeight\\\"], \
Power[AbsoluteCurrentValue[Magnification], -1]]]]]], Rule[Method, \
List[Rule[\\\"AxisPadding\\\", Scaled[0.02`]], \
Rule[\\\"DefaultBoundaryStyle\\\", Automatic], \
Rule[\\\"DefaultGraphicsInteraction\\\", List[Rule[\\\"Version\\\", 1.2`], \
Rule[\\\"TrackMousePosition\\\", List[True, False]], Rule[\\\"Effects\\\", \
List[Rule[\\\"Highlight\\\", List[Rule[\\\"ratio\\\", 2]]], \
Rule[\\\"HighlightPoint\\\", List[Rule[\\\"ratio\\\", 2]]], \
Rule[\\\"Droplines\\\", List[Rule[\\\"freeformCursorMode\\\", True], \
Rule[\\\"placement\\\", List[Rule[\\\"x\\\", \\\"All\\\"], Rule[\\\"y\\\", \\\
\"None\\\"]]]]]]]]], Rule[\\\"DefaultPlotStyle\\\", Automatic], \
Rule[\\\"DomainPadding\\\", Scaled[0.02`]], Rule[\\\"RangePadding\\\", \
Scaled[0.05`]]]]], GridBox[List[List[RowBox[List[TagBox[\\\"\\\\\\\"Specified \
elements: \\\\\\\"\\\", \\\"SummaryItemAnnotation\\\"], \
\\\"\\\\[InvisibleSpace]\\\", TagBox[\\\"0\\\", \\\"SummaryItem\\\"]]]], \
List[RowBox[List[TagBox[\\\"\\\\\\\"Dimensions: \\\\\\\"\\\", \
\\\"SummaryItemAnnotation\\\"], \\\"\\\\[InvisibleSpace]\\\", \
TagBox[RowBox[List[\\\"{\\\", RowBox[List[\\\"10\\\", \\\",\\\", \
\\\"10\\\"]], \\\"}\\\"]], \\\"SummaryItem\\\"]]]]], Rule[GridBoxAlignment, \
List[Rule[\\\"Columns\\\", List[List[Left]]], Rule[\\\"Rows\\\", \
List[List[Automatic]]]]], Rule[AutoDelete, False], Rule[GridBoxItemSize, \
List[Rule[\\\"Columns\\\", List[List[Automatic]]], Rule[\\\"Rows\\\", \
List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", \
List[List[2]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[BaseStyle, \
List[Rule[ShowStringCharacters, False], Rule[NumberMarks, False], \
Rule[PrintPrecision, 3], Rule[ShowSyntaxStyles, False]]]]]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]], \
Rule[\\\"Rows\\\", List[List[Top]]]]], Rule[AutoDelete, False], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[BaselinePosition, List[1, \
1]]]], Rule[True, \
GridBox[List[List[PaneBox[ButtonBox[DynamicBox[FEPrivate`FrontEndResource[\\\"\
FEBitmaps\\\", \\\"SummaryBoxCloser\\\"]], RuleDelayed[ButtonFunction, \
Set[Typeset`open$$, False]], Rule[Appearance, None], Rule[BaseStyle, List[]], \
Rule[Evaluator, Automatic], Rule[Method, \\\"Preemptive\\\"]], \
Rule[Alignment, List[Center, Center]], Rule[ImageSize, \
Dynamic[List[Automatic, Times[3.5`, \
Times[CurrentValue[\\\"FontCapHeight\\\"], \
Power[AbsoluteCurrentValue[Magnification], -1]]]]]]], \
GraphicsBox[RasterBox[List[List[List[0.235431`, 0.32765`, 0.833291`], \
List[0.235431`, 0.32765`, 0.833291`], List[0.235431`, 0.32765`, 0.833291`], \
List[0.235431`, 0.32765`, 0.833291`], List[0.235431`, 0.32765`, 0.833291`], \
List[0.235431`, 0.32765`, 0.833291`], List[0.235431`, 0.32765`, 0.833291`], \
List[0.235431`, 0.32765`, 0.833291`], List[0.235431`, 0.32765`, 0.833291`], \
List[0.235431`, 0.32765`, 0.833291`]], List[List[0.235431`, 0.32765`, \
0.833291`], List[0.235431`, 0.32765`, 0.833291`], List[0.235431`, 0.32765`, \
0.833291`], List[0.235431`, 0.32765`, 0.833291`], List[0.235431`, 0.32765`, \
0.833291`], List[0.235431`, 0.32765`, 0.833291`], List[0.235431`, 0.32765`, \
0.833291`], List[0.235431`, 0.32765`, 0.833291`], List[0.235431`, 0.32765`, \
0.833291`], List[0.235431`, 0.32765`, 0.833291`]], List[List[0.235431`, \
0.32765`, 0.833291`], List[0.235431`, 0.32765`, 0.833291`], List[0.235431`, \
0.32765`, 0.833291`], List[0.235431`, 0.32765`, 0.833291`], List[0.235431`, \
0.32765`, 0.833291`], List[0.235431`, 0.32765`, 0.833291`], List[0.235431`, \
0.32765`, 0.833291`], List[0.235431`, 0.32765`, 0.833291`], List[0.235431`, \
0.32765`, 0.833291`], List[0.235431`, 0.32765`, 0.833291`]], \
List[List[0.235431`, 0.32765`, 0.833291`], List[0.235431`, 0.32765`, \
0.833291`], List[0.235431`, 0.32765`, 0.833291`], List[0.235431`, 0.32765`, \
0.833291`], List[0.235431`, 0.32765`, 0.833291`], List[0.235431`, 0.32765`, \
0.833291`], List[0.235431`, 0.32765`, 0.833291`], List[0.235431`, 0.32765`, \
0.833291`], List[0.235431`, 0.32765`, 0.833291`], List[0.235431`, 0.32765`, \
0.833291`]], List[List[0.235431`, 0.32765`, 0.833291`], List[0.235431`, \
0.32765`, 0.833291`], List[0.235431`, 0.32765`, 0.833291`], List[0.235431`, \
0.32765`, 0.833291`], List[0.235431`, 0.32765`, 0.833291`], List[0.235431`, \
0.32765`, 0.833291`], List[0.235431`, 0.32765`, 0.833291`], List[0.235431`, \
0.32765`, 0.833291`], List[0.235431`, 0.32765`, 0.833291`], List[0.235431`, \
0.32765`, 0.833291`]], List[List[0.235431`, 0.32765`, 0.833291`], \
List[0.235431`, 0.32765`, 0.833291`], List[0.235431`, 0.32765`, 0.833291`], \
List[0.235431`, 0.32765`, 0.833291`], List[0.235431`, 0.32765`, 0.833291`], \
List[0.235431`, 0.32765`, 0.833291`], List[0.235431`, 0.32765`, 0.833291`], \
List[0.235431`, 0.32765`, 0.833291`], List[0.235431`, 0.32765`, 0.833291`], \
List[0.235431`, 0.32765`, 0.833291`]], List[List[0.235431`, 0.32765`, \
0.833291`], List[0.235431`, 0.32765`, 0.833291`], List[0.235431`, 0.32765`, \
0.833291`], List[0.235431`, 0.32765`, 0.833291`], List[0.235431`, 0.32765`, \
0.833291`], List[0.235431`, 0.32765`, 0.833291`], List[0.235431`, 0.32765`, \
0.833291`], List[0.235431`, 0.32765`, 0.833291`], List[0.235431`, 0.32765`, \
0.833291`], List[0.235431`, 0.32765`, 0.833291`]], List[List[0.235431`, \
0.32765`, 0.833291`], List[0.235431`, 0.32765`, 0.833291`], List[0.235431`, \
0.32765`, 0.833291`], List[0.235431`, 0.32765`, 0.833291`], List[0.235431`, \
0.32765`, 0.833291`], List[0.235431`, 0.32765`, 0.833291`], List[0.235431`, \
0.32765`, 0.833291`], List[0.235431`, 0.32765`, 0.833291`], List[0.235431`, \
0.32765`, 0.833291`], List[0.235431`, 0.32765`, 0.833291`]], \
List[List[0.235431`, 0.32765`, 0.833291`], List[0.235431`, 0.32765`, \
0.833291`], List[0.235431`, 0.32765`, 0.833291`], List[0.235431`, 0.32765`, \
0.833291`], List[0.235431`, 0.32765`, 0.833291`], List[0.235431`, 0.32765`, \
0.833291`], List[0.235431`, 0.32765`, 0.833291`], List[0.235431`, 0.32765`, \
0.833291`], List[0.235431`, 0.32765`, 0.833291`], List[0.235431`, 0.32765`, \
0.833291`]], List[List[0.235431`, 0.32765`, 0.833291`], List[0.235431`, \
0.32765`, 0.833291`], List[0.235431`, 0.32765`, 0.833291`], List[0.235431`, \
0.32765`, 0.833291`], List[0.235431`, 0.32765`, 0.833291`], List[0.235431`, \
0.32765`, 0.833291`], List[0.235431`, 0.32765`, 0.833291`], List[0.235431`, \
0.32765`, 0.833291`], List[0.235431`, 0.32765`, 0.833291`], List[0.235431`, \
0.32765`, 0.833291`]]], List[List[0, 0], List[10, 10]], List[0, 1]], \
Rule[AspectRatio, 1], Rule[Axes, False], Rule[Frame, False], Rule[FrameLabel, \
List[None, None]], Rule[FrameStyle, Directive[Opacity[0.5`], Thickness[Tiny], \
RGBColor[0.368417`, 0.506779`, 0.709798`]]], Rule[FrameTicks, List[List[None, \
None], List[None, None]]], Rule[GridLinesStyle, Directive[GrayLevel[0.5`, \
0.4`]]], Rule[ImageSize, Dynamic[List[Automatic, Times[3.5`, \
Times[CurrentValue[\\\"FontCapHeight\\\"], \
Power[AbsoluteCurrentValue[Magnification], -1]]]]]], Rule[Method, \
List[Rule[\\\"AxisPadding\\\", Scaled[0.02`]], \
Rule[\\\"DefaultBoundaryStyle\\\", Automatic], \
Rule[\\\"DefaultGraphicsInteraction\\\", List[Rule[\\\"Version\\\", 1.2`], \
Rule[\\\"TrackMousePosition\\\", List[True, False]], Rule[\\\"Effects\\\", \
List[Rule[\\\"Highlight\\\", List[Rule[\\\"ratio\\\", 2]]], \
Rule[\\\"HighlightPoint\\\", List[Rule[\\\"ratio\\\", 2]]], \
Rule[\\\"Droplines\\\", List[Rule[\\\"freeformCursorMode\\\", True], \
Rule[\\\"placement\\\", List[Rule[\\\"x\\\", \\\"All\\\"], Rule[\\\"y\\\", \\\
\"None\\\"]]]]]]]]], Rule[\\\"DefaultPlotStyle\\\", Automatic], \
Rule[\\\"DomainPadding\\\", Scaled[0.02`]], Rule[\\\"RangePadding\\\", \
Scaled[0.05`]]]]], GridBox[List[List[RowBox[List[TagBox[\\\"\\\\\\\"Specified \
elements: \\\\\\\"\\\", \\\"SummaryItemAnnotation\\\"], \
\\\"\\\\[InvisibleSpace]\\\", TagBox[\\\"0\\\", \\\"SummaryItem\\\"]]]], \
List[RowBox[List[TagBox[\\\"\\\\\\\"Dimensions: \\\\\\\"\\\", \
\\\"SummaryItemAnnotation\\\"], \\\"\\\\[InvisibleSpace]\\\", \
TagBox[RowBox[List[\\\"{\\\", RowBox[List[\\\"10\\\", \\\",\\\", \
\\\"10\\\"]], \\\"}\\\"]], \\\"SummaryItem\\\"]]]], \
List[RowBox[List[TagBox[\\\"\\\\\\\"Default: \\\\\\\"\\\", \
\\\"SummaryItemAnnotation\\\"], \\\"\\\\[InvisibleSpace]\\\", \
TagBox[\\\"0\\\", \\\"SummaryItem\\\"]]]], List[RowBox[List[TagBox[\\\"\\\\\\\
\"Density: \\\\\\\"\\\", \\\"SummaryItemAnnotation\\\"], \
\\\"\\\\[InvisibleSpace]\\\", TagBox[\\\"0.`\\\", \\\"SummaryItem\\\"]]]], \
List[RowBox[List[TagBox[\\\"\\\\\\\"Elements: \\\\\\\"\\\", \
\\\"SummaryItemAnnotation\\\"], \\\"\\\\[InvisibleSpace]\\\", TagBox[\\\"None\
\\\", \\\"SummaryItem\\\"]]]]], Rule[GridBoxAlignment, \
List[Rule[\\\"Columns\\\", List[List[Left]]], Rule[\\\"Rows\\\", \
List[List[Automatic]]]]], Rule[AutoDelete, False], Rule[GridBoxItemSize, \
List[Rule[\\\"Columns\\\", List[List[Automatic]]], Rule[\\\"Rows\\\", \
List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", \
List[List[2]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[BaseStyle, \
List[Rule[ShowStringCharacters, False], Rule[NumberMarks, False], \
Rule[PrintPrecision, 3], Rule[ShowSyntaxStyles, False]]]]]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]], \
Rule[\\\"Rows\\\", List[List[Top]]]]], Rule[AutoDelete, False], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[BaselinePosition, List[1, \
1]]]]], Dynamic[Typeset`open$$], Rule[ImageSize, Automatic]]], \
\\\"SummaryPanel\\\"], RuleDelayed[DynamicModuleValues, List[]]], \
\\\"]\\\"}], SparseArray[Automatic, List[10, 10], 0, List[1, List[List[0, 0, \
0, 0, 0, 0, 0, 0, 0, 0, 0], List[]], List[]]], Rule[Selectable, False], \
Rule[Editable, False], Rule[SelectWithContents, True]], \\\",\\\", \
\\\"10\\\", \\\",\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{RowBox[{\\\"{\\\", \
RowBox[{\\\"7\\\", \\\",\\\", \\\"8\\\"}], \\\"}\\\"}], \\\"\[Rule]\\\", \
\\\"1\\\"}], \\\",\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"6\\\", \\\",\\\
\", \\\"4\\\"}], \\\"}\\\"}], \\\"\[Rule]\\\", \\\"1\\\"}], \\\",\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"3\\\", \\\",\\\", \\\"1\\\"}], \\\"}\\\
\"}], \\\"\[Rule]\\\", \\\"1\\\"}]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) cannot be \
a list.\"", 2, 14, 7, 19443644064093027831, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.866638915492807*^9},
 CellLabel->
  "During evaluation of \
In[14]:=",ExpressionUUID->"09ba81d2-6f7c-4e4e-8a92-903284f893dc"],

Cell[BoxData[
 RowBox[{"SparseArray", "[", 
  RowBox[{
   InterpretationBox[
    RowBox[{
     TagBox["SparseArray",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[
               RasterBox[CompressedData["
1:eJxTTMoPSmVmYGDggmIQ26p8d9wspXP2c4wXbTH/ccX+xSLFx4GrXtmPio+K
j4qPio+Kj4qPio+Kj4qTJw4AG3/1MA==
                "], {{0, 0}, {10, 10}}, {0, 1}], AspectRatio -> 1, Axes -> 
               False, Frame -> False, FrameLabel -> {None, None}, FrameStyle -> 
               Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], 
               FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
               Directive[
                 GrayLevel[0.5, 0.4]], ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], 
               Method -> {
                "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
                 Automatic, 
                 "DefaultGraphicsInteraction" -> {
                  "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                   "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                 "DefaultPlotStyle" -> Automatic, "DomainPadding" -> 
                 Scaled[0.02], "RangePadding" -> Scaled[0.05]}], 
              GridBox[{{
                 RowBox[{
                   TagBox[
                   "\"Specified elements: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["0", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"10", ",", "10"}], "}"}], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[
               RasterBox[CompressedData["
1:eJxTTMoPSmVmYGDggmIQ26p8d9wspXP2c4wXbTH/ccX+xSLFx4GrXtmPio+K
j4qPio+Kj4qPio+Kj4qTJw4AG3/1MA==
                "], {{0, 0}, {10, 10}}, {0, 1}], AspectRatio -> 1, Axes -> 
               False, Frame -> False, FrameLabel -> {None, None}, FrameStyle -> 
               Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], 
               FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
               Directive[
                 GrayLevel[0.5, 0.4]], ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], 
               Method -> {
                "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
                 Automatic, 
                 "DefaultGraphicsInteraction" -> {
                  "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                   "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                 "DefaultPlotStyle" -> Automatic, "DomainPadding" -> 
                 Scaled[0.02], "RangePadding" -> Scaled[0.05]}], 
              GridBox[{{
                 RowBox[{
                   TagBox[
                   "\"Specified elements: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["0", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"10", ",", "10"}], "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Default: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["0", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Density: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["0.`", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Elements: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["None", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    SparseArray[
    Automatic, {10, 10}, 0, {1, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {}}, {}}],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", "10", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"7", ",", "8"}], "}"}], "\[Rule]", "1"}], ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"6", ",", "4"}], "}"}], "\[Rule]", "1"}], ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"3", ",", "1"}], "}"}], "\[Rule]", "1"}]}], "}"}]}], 
  "]"}]], "Output",
 CellChangeTimes->{{3.866638793054386*^9, 3.86663879907742*^9}, {
  3.8666388665427127`*^9, 3.866638916038811*^9}},
 CellLabel->"Out[14]=",ExpressionUUID->"62274978-df47-459d-866a-4dab56d73846"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Matrices", "Section",
 CellChangeTimes->{{3.86663665052394*^9, 
  3.8666366516391344`*^9}},ExpressionUUID->"b1b1f8e0-5a81-40e7-bc60-\
9a1c25f5376a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"IncidenceMatrix", "[", "eulerianGraph", "]"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.8666365791498556`*^9, 3.8666365854408665`*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"0dea25eb-4cbb-45b6-98d9-07b680eca3f2"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "1", "1", "1", "1", "1", "1", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "1", "0", "0", "0", "0", "1", "1", "1", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "0", "1", "1", 
      "1", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "1", "1", "0", 
      "0", "1", "1", "1", "0", "0", "0", "0", "0"},
     {"1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "0", 
      "0", "1", "0", "0", "1", "1", "1", "0", "0"},
     {"0", "1", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", 
      "0", "0", "1", "0", "1", "0", "0", "1", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", 
      "0", "0", "0", "0", "0", "1", "0", "1", "1"},
     {"0", "0", "1", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", 
      "1", "0", "0", "1", "0", "0", "1", "0", "1"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[
   SparseArray[
    Automatic, {10, 23}, 0, {
     1, {{0, 4, 10, 14, 18, 24, 30, 32, 36, 40, 46}, {{1}, {2}, {3}, {4}, {
       4}, {5}, {6}, {7}, {8}, {9}, {5}, {10}, {11}, {12}, {6}, {13}, {14}, {
       15}, {7}, {12}, {13}, {16}, {17}, {18}, {1}, {8}, {16}, {19}, {20}, {
       21}, {2}, {10}, {9}, {17}, {19}, {22}, {14}, {20}, {22}, {23}, {3}, {
       11}, {15}, {18}, {21}, {23}}}, {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1}}]]]]], "Output",
 CellChangeTimes->{{3.8666365817060633`*^9, 3.866636585822867*^9}},
 CellLabel->
  "Out[41]//MatrixForm=",ExpressionUUID->"64b9e471-c8ed-47ca-a97d-\
a30cc2d6a24e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"AdjacencyMatrix", "[", "eulerianGraph", "]"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.8666366045859594`*^9, 3.8666366096030087`*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"9d796984-09e2-43a4-b206-e7f74a629a75"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "1", "0", "0", "0", "1", "1", "0", "0", "1"},
     {"1", "0", "1", "1", "1", "1", "0", "1", "0", "0"},
     {"0", "1", "0", "0", "1", "0", "1", "0", "0", "1"},
     {"0", "1", "0", "0", "1", "0", "0", "0", "1", "1"},
     {"0", "1", "1", "1", "0", "1", "0", "1", "0", "1"},
     {"1", "1", "0", "0", "1", "0", "0", "1", "1", "1"},
     {"1", "0", "1", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "1", "0", "0", "1", "1", "0", "0", "1", "0"},
     {"0", "0", "0", "1", "0", "1", "0", "1", "0", "1"},
     {"1", "0", "1", "1", "1", "1", "0", "0", "1", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[
   SparseArray[
    Automatic, {10, 10}, 0, {
     1, {{0, 4, 10, 14, 18, 24, 30, 32, 36, 40, 46}, {{6}, {7}, {10}, {2}, {
       3}, {4}, {5}, {6}, {8}, {1}, {2}, {7}, {10}, {5}, {2}, {5}, {9}, {
       10}, {2}, {4}, {6}, {8}, {10}, {3}, {1}, {2}, {5}, {8}, {9}, {10}, {
       1}, {3}, {2}, {5}, {6}, {9}, {4}, {6}, {10}, {8}, {1}, {3}, {4}, {5}, {
       6}, {9}}}, {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1}}]]]]], "Output",
 CellChangeTimes->{3.8666366100658293`*^9},
 CellLabel->
  "Out[42]//MatrixForm=",ExpressionUUID->"10c55aec-310f-48bb-b74b-\
2d61b56ce8df"]
}, Open  ]]
}, Closed]]
},
WindowSize->{1141.2, 574.8},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"13.2 for Microsoft Windows (64-bit) (July 8, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"9c63bbb8-5f94-4b28-9ce1-c54fb0fa70f7"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 232, 10, 134, "Program",ExpressionUUID->"5f0afc1c-31bd-48e6-9dc7-cab5546c5a1e"],
Cell[793, 32, 234, 3, 28, "Input",ExpressionUUID->"9a3cfa9e-edfa-42fe-8eb7-6f4a3e659eb6"],
Cell[CellGroupData[{
Cell[1052, 39, 475, 11, 28, "Input",ExpressionUUID->"9928a39f-9eb5-44ec-ab61-75fecd0d481c"],
Cell[1530, 52, 4519, 76, 536, "Output",ExpressionUUID->"7e5b4920-9d7b-4aca-a87a-a2fdac5ae43f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6086, 133, 220, 3, 28, "Input",ExpressionUUID->"ba8b733d-c319-4dfd-8286-048fedd2c95b"],
Cell[6309, 138, 450, 10, 28, "Message",ExpressionUUID->"2fc1eabb-8f08-4564-bb95-e19f6b5ba251"],
Cell[6762, 150, 4615, 78, 538, "Output",ExpressionUUID->"264e354b-95a7-434a-8cb0-999453f58ac7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11414, 233, 253, 5, 28, "Input",ExpressionUUID->"665935e9-a7a7-4e22-805c-406df369bd66"],
Cell[11670, 240, 4723, 89, 285, "Output",ExpressionUUID->"8ef49ca5-d3b7-4dd2-b0ab-c9540dbc5803"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16430, 334, 262, 4, 28, "Input",ExpressionUUID->"250d032e-d3b4-4fa1-a817-899cbac71274"],
Cell[16695, 340, 4509, 75, 341, "Output",ExpressionUUID->"f5af8100-17cf-4566-ad87-1311db1872b3"]
}, Open  ]],
Cell[21219, 418, 218, 5, 35, "Text",ExpressionUUID->"3d545a5d-b5d0-4504-99ab-f3a3e81f83be"],
Cell[21440, 425, 195, 3, 35, "Text",ExpressionUUID->"e0f037c4-4b12-45b1-ac13-22e213f1f6fb"],
Cell[21638, 430, 175, 3, 35, "Text",ExpressionUUID->"97241d36-3ba1-4cc5-8aba-6c2c46a89e78"],
Cell[21816, 435, 174466, 2864, 499, "Input",ExpressionUUID->"6830b427-e001-4076-a216-836931510e41"],
Cell[CellGroupData[{
Cell[196307, 3303, 410, 9, 28, "Input",ExpressionUUID->"b795f7c3-5d9f-48a1-b5bc-a647e440c9ac"],
Cell[196720, 3314, 3971, 86, 317, "Output",ExpressionUUID->"7736ce13-1133-400d-a7e6-6eeab5fe15e2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[200728, 3405, 382, 7, 28, "Input",ExpressionUUID->"81ac14c1-a2ae-4bbd-a6d7-da53a9ea8723"],
Cell[201113, 3414, 6940, 132, 247, "Output",ExpressionUUID->"53a8bf9e-d557-4fd0-a5d0-fa3903919f3f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[208090, 3551, 220, 3, 28, "Input",ExpressionUUID->"7162defe-3fd6-447d-bfad-382b0dc0987b"],
Cell[208313, 3556, 155, 2, 32, "Output",ExpressionUUID->"3cd07acf-407f-44f9-82e4-5808e9823bce"]
}, Open  ]],
Cell[CellGroupData[{
Cell[208505, 3563, 224, 3, 28, "Input",ExpressionUUID->"765a7547-b767-429f-bb08-5588d4f1ec19"],
Cell[208732, 3568, 205, 3, 32, "Output",ExpressionUUID->"87d2f610-9866-4683-9939-c964864359fb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[208974, 3576, 342, 7, 28, "Input",ExpressionUUID->"7c00c053-8be6-48e7-872d-c94f2f9a554c"],
Cell[209319, 3585, 3353, 69, 55, "Output",ExpressionUUID->"ea2f7e06-8f37-461e-8cbf-a53fda614074"]
}, Open  ]],
Cell[CellGroupData[{
Cell[212709, 3659, 505, 12, 28, "Input",ExpressionUUID->"54a181a5-0f52-40ca-9cd9-786f5b0fe84d"],
Cell[213217, 3673, 18313, 363, 383, "Output",ExpressionUUID->"e1351316-ac7b-4f23-9540-968f9464ef44"]
}, Open  ]],
Cell[231545, 4039, 192, 3, 35, "Text",ExpressionUUID->"07385714-3502-451b-a934-4fbda4c8557d"],
Cell[CellGroupData[{
Cell[231762, 4046, 312, 7, 28, "Input",ExpressionUUID->"0f7933d1-9519-4b76-aa9d-590959f5a198"],
Cell[232077, 4055, 1307, 44, 32, "Output",ExpressionUUID->"3617b5b6-de0c-41ba-b5a1-c4a651548cff"]
}, Open  ]],
Cell[CellGroupData[{
Cell[233421, 4104, 436, 12, 28, "Input",ExpressionUUID->"57108a86-22f8-46de-b3bb-bec6766c06e4"],
Cell[233860, 4118, 1261, 42, 32, "Output",ExpressionUUID->"782a4e9a-106e-4183-9139-4a81b5675aa2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[235158, 4165, 211, 3, 28, "Input",ExpressionUUID->"cf975dfb-a51f-473f-b4c7-74133dbb6cd5"],
Cell[235372, 4170, 1178, 24, 32, "Output",ExpressionUUID->"d45cbc48-d709-4f24-96ee-b8c14bbc0b81"]
}, Open  ]],
Cell[CellGroupData[{
Cell[236587, 4199, 216, 3, 28, "Input",ExpressionUUID->"6d4ef5fa-ae6f-4806-814c-4de06a5db45f"],
Cell[236806, 4204, 1330, 27, 52, "Output",ExpressionUUID->"b77d35af-5da7-4b4e-8010-0bd192f8171b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[238173, 4236, 323, 6, 28, "Input",ExpressionUUID->"4f127025-4e0d-4ff3-bae9-560b076c8d69"],
Cell[238499, 4244, 236, 4, 32, "Output",ExpressionUUID->"9faa3997-00e0-4a33-8b61-49970518e08c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[238772, 4253, 420, 10, 28, "Input",ExpressionUUID->"14a76672-b82e-4c98-8c90-733ea8c472d9"],
Cell[239195, 4265, 1184, 27, 199, "Output",ExpressionUUID->"6d281dc5-947a-462b-a345-8462dafdc6c6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[240416, 4297, 754, 21, 28, "Input",ExpressionUUID->"f333e33e-855a-4a88-b2a6-1d1dc954e244"],
Cell[241173, 4320, 1182, 27, 199, "Output",ExpressionUUID->"b80d6d0a-96e4-47e2-bdd1-f3404b2ef1b7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[242392, 4352, 537, 15, 28, "Input",ExpressionUUID->"9458932e-f4f8-487b-a403-0a6b169291ef"],
Cell[242932, 4369, 9273, 196, 65, "Output",ExpressionUUID->"0c2ec745-5f41-4aca-9bac-d22c40d8d7f7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[252242, 4570, 404, 9, 28, "Input",ExpressionUUID->"146e29d3-d69f-47df-b790-0596433f9263"],
Cell[252649, 4581, 7824, 167, 65, "Output",ExpressionUUID->"9ca1ab10-def6-4439-b95f-51b0c65ac660"]
}, Open  ]],
Cell[CellGroupData[{
Cell[260510, 4753, 781, 22, 28, "Input",ExpressionUUID->"7acdbc4c-c12e-424d-a551-a92f14da54a7"],
Cell[261294, 4777, 850, 15, 28, "Message",ExpressionUUID->"e1b61d4f-99b3-448d-b14a-b1b7299b0712"],
Cell[262147, 4794, 8295, 178, 65, "Output",ExpressionUUID->"d5eaaffe-b80e-4c39-8345-4e29a284a725"]
}, Open  ]],
Cell[CellGroupData[{
Cell[270479, 4977, 8606, 184, 61, "Input",ExpressionUUID->"a018cbab-1b3d-43a0-8889-571f30470988"],
Cell[279088, 5163, 16327, 231, 53, "Message",ExpressionUUID->"09ba81d2-6f7c-4e4e-8a92-903284f893dc"],
Cell[295418, 5396, 8379, 179, 65, "Output",ExpressionUUID->"62274978-df47-459d-866a-4dab56d73846"]
}, Open  ]],
Cell[CellGroupData[{
Cell[303834, 5580, 154, 3, 67, "Section",ExpressionUUID->"b1b1f8e0-5a81-40e7-bc60-9a1c25f5376a"],
Cell[CellGroupData[{
Cell[304013, 5587, 265, 5, 28, "Input",ExpressionUUID->"0dea25eb-4cbb-45b6-98d9-07b680eca3f2"],
Cell[304281, 5594, 2439, 46, 199, "Output",ExpressionUUID->"64b9e471-c8ed-47ca-a97d-a30cc2d6a24e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[306757, 5645, 265, 5, 28, "Input",ExpressionUUID->"9d796984-09e2-43a4-b206-e7f74a629a75"],
Cell[307025, 5652, 1673, 36, 199, "Output",ExpressionUUID->"10c55aec-310f-48bb-b74b-2d61b56ce8df"]
}, Open  ]]
}, Closed]]
}
]
*)

