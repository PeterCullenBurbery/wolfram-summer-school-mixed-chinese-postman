(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    935463,      17579]
NotebookOptionsPosition[    916095,      17260]
NotebookOutlinePosition[    916496,      17276]
CellTagsIndexPosition[    916453,      17273]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["VertexCut", "Section",
 CellChangeTimes->{{3.8197269612806807`*^9, 3.819726962548319*^9}, 
   3.819728678815297*^9, {3.819728711309804*^9, 
   3.8197287115608463`*^9}},ExpressionUUID->"e3f4ee59-b7bc-4e47-9ad9-\
5a979013497e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"VertexCut", "[", 
   RowBox[{
    RowBox[{"g_", "?", "UndirectedGraphQ"}], ",", "parm___"}], "]"}], ":=", 
  RowBox[{"VertexCut", "[", 
   RowBox[{
    RowBox[{"DirectedGraph", "[", "g", "]"}], ",", "parm"}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.819727583645637*^9, 3.819727640213024*^9}, 
   3.819728040383718*^9, {3.819728715690989*^9, 3.81972872006343*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"053cf9d7-f327-4a56-9d87-01b6320073f6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"VertexCut", "[", 
   RowBox[{
    RowBox[{"g_", "?", "MultigraphQ"}], ",", "parm___"}], "]"}], ":=", 
  RowBox[{"VertexCut", "[", 
   RowBox[{
    RowBox[{"SimpleGraph", "[", "g", "]"}], ",", "parm"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.819727583645637*^9, 3.8197276720183077`*^9}, 
   3.8197280424301643`*^9, 3.819728593928564*^9, {3.819728716802753*^9, 
   3.81972872092523*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"671571c6-6db0-4ed9-af89-d1220b1381fa"],

Cell[BoxData[
 RowBox[{
  RowBox[{"VertexCut", "[", 
   RowBox[{
    RowBox[{"g", ":", 
     RowBox[{"Except", "[", 
      RowBox[{"_", "?", "LoopFreeGraphQ"}], "]"}]}], ",", "parm___"}], "]"}], 
  ":=", 
  RowBox[{"VertexCut", "[", 
   RowBox[{
    RowBox[{"SimpleGraph", "[", "g", "]"}], ",", "parm"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.819727583645637*^9, 3.8197276720183077`*^9}, {
   3.8197277066381273`*^9, 3.8197277138486567`*^9}, 3.819728044344182*^9, 
   3.819728592328786*^9, {3.819728717761997*^9, 3.819728721854282*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"822b3962-c377-4405-83b7-1854278b1b54"],

Cell["", "Text",ExpressionUUID->"dce98b52-32e6-49cd-86b5-a8cc28e91a4a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"VertexCut", "[", 
   RowBox[{"g_", "?", "DirectedGraphQ"}], "]"}], ":=", "\[IndentingNewLine]", 
  
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "res", ",", "n", ",", "m", ",", "a", ",", "b", ",", "u", ",", "v"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"n", "=", 
         RowBox[{"VertexCount", "[", "g", "]"}]}], ";"}], 
       RowBox[{"(*", 
        RowBox[{"I", " ", "understand", " ", "this", " ", "line"}], "*)"}], 
       "\[IndentingNewLine]", "m"}], "=", 
      RowBox[{"Transpose", "[", 
       RowBox[{"IncidenceMatrix", "[", "g", "]"}], "]"}]}], ";", 
     RowBox[{"(*", 
      RowBox[{"I", " ", 
       RowBox[{"don", "'"}], "t", " ", "understand", " ", "what", " ", "this",
        " ", "line", " ", "is", " ", "for", " ", "I", " ", "understand", " ", 
       "what", " ", "the", " ", "incidence", " ", "matrix", " ", "represents",
        " ", "and", " ", "what", " ", "the", " ", "transpose", " ", "of", " ",
        "a", " ", "matrix", " ", "represents", " ", "but", " ", "I", " ", 
       RowBox[{"don", "'"}], "t", " ", "understand", " ", "what", " ", "this",
        " ", 
       RowBox[{"does", "."}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"a", "=", 
      RowBox[{"UnitStep", "[", 
       RowBox[{"m", "-", "1"}], "]"}]}], ";", 
     RowBox[{"(*", 
      RowBox[{
      "remove", " ", "negative", " ", "values", " ", "from", " ", "directed", 
       " ", 
       RowBox[{"edges", "/", 
        RowBox[{"arcs", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"b", "=", 
      RowBox[{"a", "-", "m"}]}], ";", 
     RowBox[{"(*", "constraints", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"res", "=", 
      RowBox[{"LinearOptimization", "[", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Total", "[", 
          RowBox[{"u", "+", "v"}], "]"}]}], 
        RowBox[{"(*", 
         RowBox[{
         "I", " ", "understand", " ", "this", " ", "objective", " ", 
          "function", " ", "and", " ", "the", " ", "linear", " ", 
          "optimization"}], "*)"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"u", "+", "v"}], " ", "\[VectorLessEqual]", "1"}], 
          RowBox[{"(*", 
           RowBox[{
           "I", " ", "understand", " ", "this", " ", "as", " ", "saying"}], 
           " ", "*)"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"a", ".", "u"}], " ", "+", 
            RowBox[{"b", ".", "v"}]}], "\[VectorLessEqual]", "1"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"a", ".", "v"}], " ", "+", 
            RowBox[{"b", ".", "u"}]}], "\[VectorLessEqual]", "1"}], ",", 
          RowBox[{
           RowBox[{"Total", "[", "u", "]"}], "\[VectorGreaterEqual]", "1"}], 
          ",", 
          RowBox[{
           RowBox[{"Total", "[", "v", "]"}], "\[VectorGreaterEqual]", "1"}], 
          ",", 
          RowBox[{"u", "\[VectorGreaterEqual]", "0"}], ",", 
          RowBox[{"v", "\[VectorGreaterEqual]", "0"}], ",", 
          RowBox[{"u", "\[VectorLessEqual]", "1"}], ",", 
          RowBox[{"v", "\[VectorLessEqual]", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"u", "\[Element]", 
           RowBox[{"Vectors", "[", 
            RowBox[{"n", ",", "Integers"}], "]"}]}], ",", 
          RowBox[{"v", "\[Element]", 
           RowBox[{"Vectors", "[", 
            RowBox[{"n", ",", "Integers"}], "]"}]}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"VertexList", "[", "g", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Position", "[", 
         RowBox[{
          RowBox[{"Total", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"u", ",", "v"}], "}"}], " ", "/.", " ", "res"}], "]"}], 
          ",", "0"}], "]"}], "]"}], "]"}], "]"}]}]}], " ", 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.819726601773953*^9, 3.8197266908177547`*^9}, {
   3.819726722491035*^9, 3.819726746846274*^9}, {3.819726790339477*^9, 
   3.819726797962216*^9}, {3.8197286330950747`*^9, 3.819728636892961*^9}, 
   3.819728718797875*^9, {3.8662127492233934`*^9, 3.8662127600463905`*^9}, {
   3.8662140902101684`*^9, 3.866214198217671*^9}, {3.8662142430258827`*^9, 
   3.86621424830787*^9}, {3.8662150104116163`*^9, 3.8662150261738853`*^9}, {
   3.866215301799875*^9, 
   3.866215303652884*^9}},ExpressionUUID->"953750f1-6766-48e9-9357-\
a396993c4c2b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomGraph", "[", 
  RowBox[{"{", 
   RowBox[{"7", ",", "21"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.866214711225604*^9, 3.866214722209796*^9}},
 CellLabel->"In[98]:=",ExpressionUUID->"3c019a71-88a7-48ea-83b3-bb31cf0afaff"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7}, {Null, 
       SparseArray[
       Automatic, {7, 7}, 0, {
        1, {{0, 6, 12, 18, 24, 30, 36, 42}, {{2}, {3}, {4}, {5}, {6}, {7}, {
          1}, {3}, {4}, {5}, {6}, {7}, {1}, {2}, {4}, {5}, {6}, {7}, {1}, {
          2}, {3}, {5}, {6}, {7}, {1}, {2}, {3}, {4}, {6}, {7}, {1}, {2}, {
          3}, {4}, {5}, {7}, {1}, {2}, {3}, {4}, {5}, {6}}}, Pattern}]}]]}, 
    TagBox[
     GraphicsGroupBox[
      GraphicsComplexBox[{{-0.7818314824680302, 
       0.6234898018587343}, {-7.044813998280222*^-16, 1.}, {
       0.7818314824680294, 0.6234898018587326}, {
       0.9749279121818237, -0.2225209339563155}, {
       0.43388373911755884`, -0.9009688679024196}, {-0.43388373911755757`, \
-0.9009688679024187}, {-0.9749279121818235, -0.22252093395631342`}}, {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
         ArrowBox[{{1, 2}, {1, 3}, {1, 4}, {1, 5}, {1, 6}, {1, 7}, {2, 3}, {2,
           4}, {2, 5}, {2, 6}, {2, 7}, {3, 4}, {3, 5}, {3, 6}, {3, 7}, {4, 
          5}, {4, 6}, {4, 7}, {5, 6}, {5, 7}, {6, 7}}, 
          0.02220329551621769]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.02220329551621769], DiskBox[2, 0.02220329551621769], 
         DiskBox[3, 0.02220329551621769], DiskBox[4, 0.02220329551621769], 
         DiskBox[5, 0.02220329551621769], DiskBox[6, 0.02220329551621769], 
         DiskBox[7, 0.02220329551621769]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{
  3.8662147230408783`*^9, {3.8662151292029552`*^9, 3.8662151317616043`*^9}},
 CellLabel->"Out[98]=",ExpressionUUID->"614347a5-3198-4d04-89dd-7b4085bab52e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"IncidenceMatrix", "[", 
   RowBox[{"RandomGraph", "[", 
    RowBox[{"{", 
     RowBox[{"7", ",", "21"}], "}"}], "]"}], "]"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.866214732086047*^9, 3.8662147422290616`*^9}},
 CellLabel->"In[84]:=",ExpressionUUID->"95444a5e-a1d1-430e-ab97-1a9c6cedab24"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "1", "1", "1", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0"},
     {"1", "0", "0", "0", "0", "0", "1", "1", "1", "1", "1", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0"},
     {"0", "1", "0", "0", "0", "0", "1", "0", "0", "0", "0", "1", "1", "1", 
      "1", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "1", "0", "0", "0", "0", "1", "0", "0", "0", "1", "0", "0", 
      "0", "1", "1", "1", "0", "0", "0"},
     {"0", "0", "0", "1", "0", "0", "0", "0", "1", "0", "0", "0", "1", "0", 
      "0", "1", "0", "0", "1", "1", "0"},
     {"0", "0", "0", "0", "1", "0", "0", "0", "0", "1", "0", "0", "0", "1", 
      "0", "0", "1", "0", "1", "0", "1"},
     {"0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "1", "0", "0", "0", 
      "1", "0", "0", "1", "0", "1", "1"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[
   SparseArray[
    Automatic, {7, 21}, 0, {
     1, {{0, 6, 12, 18, 24, 30, 36, 42}, {{1}, {2}, {3}, {4}, {5}, {6}, {1}, {
       7}, {8}, {9}, {10}, {11}, {2}, {7}, {12}, {13}, {14}, {15}, {3}, {8}, {
       12}, {16}, {17}, {18}, {4}, {9}, {13}, {16}, {19}, {20}, {5}, {10}, {
       14}, {17}, {19}, {21}, {6}, {11}, {15}, {18}, {20}, {21}}}, {1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}}]]]]], "Output",
 CellChangeTimes->{{3.866214736219059*^9, 3.8662147427600613`*^9}},
 CellLabel->
  "Out[84]//MatrixForm=",ExpressionUUID->"da079328-cee9-4286-bbb7-\
28db812ee622"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Transpose", "@", 
   RowBox[{"IncidenceMatrix", "[", 
    RowBox[{"RandomGraph", "[", 
     RowBox[{"{", 
      RowBox[{"7", ",", "21"}], "}"}], "]"}], "]"}]}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.866214732086047*^9, 3.8662147516984596`*^9}},
 CellLabel->"In[85]:=",ExpressionUUID->"479744e7-c516-4800-bb5d-723da6ca104e"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "1", "0", "0", "0", "0", "0"},
     {"1", "0", "1", "0", "0", "0", "0"},
     {"1", "0", "0", "1", "0", "0", "0"},
     {"1", "0", "0", "0", "1", "0", "0"},
     {"1", "0", "0", "0", "0", "1", "0"},
     {"1", "0", "0", "0", "0", "0", "1"},
     {"0", "1", "1", "0", "0", "0", "0"},
     {"0", "1", "0", "1", "0", "0", "0"},
     {"0", "1", "0", "0", "1", "0", "0"},
     {"0", "1", "0", "0", "0", "1", "0"},
     {"0", "1", "0", "0", "0", "0", "1"},
     {"0", "0", "1", "1", "0", "0", "0"},
     {"0", "0", "1", "0", "1", "0", "0"},
     {"0", "0", "1", "0", "0", "1", "0"},
     {"0", "0", "1", "0", "0", "0", "1"},
     {"0", "0", "0", "1", "1", "0", "0"},
     {"0", "0", "0", "1", "0", "1", "0"},
     {"0", "0", "0", "1", "0", "0", "1"},
     {"0", "0", "0", "0", "1", "1", "0"},
     {"0", "0", "0", "0", "1", "0", "1"},
     {"0", "0", "0", "0", "0", "1", "1"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[
   SparseArray[
    Automatic, {21, 7}, 0, {
     1, {{0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 
       36, 38, 40, 42}, {{1}, {2}, {1}, {3}, {1}, {4}, {1}, {5}, {1}, {6}, {
       1}, {7}, {2}, {3}, {2}, {4}, {2}, {5}, {2}, {6}, {2}, {7}, {3}, {4}, {
       3}, {5}, {3}, {6}, {3}, {7}, {4}, {5}, {4}, {6}, {4}, {7}, {5}, {6}, {
       5}, {7}, {6}, {7}}}, {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1}}]]]]], "Output",
 CellChangeTimes->{3.8662147519394493`*^9},
 CellLabel->
  "Out[85]//MatrixForm=",ExpressionUUID->"52b654c1-b2b5-4573-810a-\
35b0b4f0c846"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Undirected Graph", "Subsubsection",
 CellChangeTimes->{{3.866215050900635*^9, 
  3.866215054187041*^9}},ExpressionUUID->"fd15a751-657a-4ca5-82a4-\
83304dc58d86"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Transpose", "@", 
   RowBox[{"IncidenceMatrix", "[", 
    RowBox[{"RandomGraph", "[", 
     RowBox[{"{", 
      RowBox[{"7", ",", "21"}], "}"}], "]"}], "]"}]}], "//", 
  "Normal"}]], "Input",
 CellChangeTimes->{{3.866214732086047*^9, 3.8662147816359477`*^9}},
 CellLabel->"In[87]:=",ExpressionUUID->"475f669e-8b95-4412-a480-55cdb12667c2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "0"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1", ",", "0", ",", "1", ",", "0", ",", "0"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "1"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "1", ",", "0"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "0"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "1"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1"}],
     "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8662147757226925`*^9, 3.8662147820199523`*^9}},
 CellLabel->"Out[87]=",ExpressionUUID->"4c5b7fff-f9ab-4861-accd-43ca3c1f2d8f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"UnitStep", "[", 
   RowBox[{
    RowBox[{"Transpose", "@", 
     RowBox[{"IncidenceMatrix", "[", 
      RowBox[{"RandomGraph", "[", 
       RowBox[{"{", 
        RowBox[{"7", ",", "21"}], "}"}], "]"}], "]"}]}], "-", "1"}], "]"}], "//",
   "Normal"}]], "Input",
 CellChangeTimes->{{3.8662148754716635`*^9, 3.866214905741477*^9}},
 CellLabel->"In[91]:=",ExpressionUUID->"11915d24-5743-442e-9f0b-fd19373bf7d8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "0"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1", ",", "0", ",", "1", ",", "0", ",", "0"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "1"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "1", ",", "0"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "0"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "1"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1"}],
     "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.866214881987754*^9, 3.8662149061914344`*^9}},
 CellLabel->"Out[91]=",ExpressionUUID->"dd762f54-7ad9-487a-936f-a976b8eb26aa"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Directed Graph", "Subsubsection",
 CellChangeTimes->{{3.866215057714262*^9, 
  3.866215059641969*^9}},ExpressionUUID->"31921492-0236-4c55-a44c-\
1a64f1da9d43"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"randomDirectedGraph", "=", 
  RowBox[{"RandomGraph", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"7", ",", "21"}], "}"}], ",", 
    RowBox[{"DirectedEdges", "->", "True"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.866215109354873*^9, 3.866215152479906*^9}},
 CellLabel->"In[99]:=",ExpressionUUID->"57ae11d7-c6bc-479e-9b0c-d0fe5ad0806e"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7}, {
       SparseArray[
       Automatic, {7, 7}, 0, {
        1, {{0, 2, 7, 10, 13, 18, 19, 21}, {{4}, {6}, {1}, {3}, {4}, {5}, {
          6}, {1}, {2}, {5}, {3}, {5}, {7}, {1}, {2}, {3}, {6}, {7}, {1}, {
          3}, {6}}}, Pattern}], Null}]]}, 
    TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1: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
iJb2sq/Tqr3gbNjXyBQIEbgm/YXlfA/+Bq2xQfY=
       "], {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
         ArrowBox[{1, 4}, 0.017539383976248712`], 
         ArrowBox[BezierCurveBox[{
          1, {0.7907921902330473, -0.053228144898238086`}, 6}], 
          0.017539383976248712`], ArrowBox[{2, 1}, 0.017539383976248712`], 
         ArrowBox[BezierCurveBox[{
          2, {0.6809811708156954, 0.6613024669928056}, 3}], 
          0.017539383976248712`], ArrowBox[{2, 4}, 0.017539383976248712`], 
         ArrowBox[BezierCurveBox[{
          2, {0.6191483212518785, 0.26908002091063016`}, 5}], 
          0.017539383976248712`], ArrowBox[{2, 6}, 0.017539383976248712`], 
         ArrowBox[{3, 1}, 0.017539383976248712`], 
         ArrowBox[BezierCurveBox[{
          3, {1.1069264670753474`, 0.6868639288100971}, 2}], 
          0.017539383976248712`], 
         ArrowBox[BezierCurveBox[{
          3, {0.7932597651863317, 0.9294272819465735}, 5}], 
          0.017539383976248712`], ArrowBox[{4, 3}, 0.017539383976248712`], 
         ArrowBox[{4, 5}, 0.017539383976248712`], 
         ArrowBox[{4, 7}, 0.017539383976248712`], 
         ArrowBox[{5, 1}, 0.017539383976248712`], 
         ArrowBox[BezierCurveBox[{
          5, {0.8243559259360148, 0.4079093845271679}, 2}], 
          0.017539383976248712`], 
         ArrowBox[BezierCurveBox[{
          5, {0.5725220736108276, 1.0426951837458294`}, 3}], 
          0.017539383976248712`], ArrowBox[{5, 6}, 0.017539383976248712`], 
         ArrowBox[{5, 7}, 0.017539383976248712`], 
         ArrowBox[BezierCurveBox[{
          6, {0.6825634382938918, 0.3823094516702077}, 1}], 
          0.017539383976248712`], ArrowBox[{7, 3}, 0.017539383976248712`], 
         ArrowBox[{7, 6}, 0.017539383976248712`]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.017539383976248712], DiskBox[2, 0.017539383976248712], 
         DiskBox[3, 0.017539383976248712], DiskBox[4, 0.017539383976248712], 
         DiskBox[5, 0.017539383976248712], DiskBox[6, 0.017539383976248712], 
         DiskBox[7, 0.017539383976248712]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.866215154019908*^9},
 CellLabel->"Out[99]=",ExpressionUUID->"415ce421-075c-4025-b29e-178d7df341b5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"m", "=", 
  RowBox[{
   RowBox[{"Transpose", "@", 
    RowBox[{"IncidenceMatrix", "[", "randomDirectedGraph", "]"}]}], "//", 
   "Normal"}]}]], "Input",
 CellChangeTimes->{{3.866214985124983*^9, 3.8662149893775387`*^9}, {
  3.866215065604084*^9, 3.8662150674972405`*^9}, {3.8662151623797135`*^9, 
  3.8662151876581397`*^9}},
 CellLabel->
  "In[101]:=",ExpressionUUID->"7e01dac1-a7f9-4f46-abc9-f9c0ab44c32d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", 
     ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", 
     ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"-", "1"}], ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", "1"}], ",", "1", ",", "0", ",", "0", ",", "0", ",", "0"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", "1"}], ",", "0", ",", "1", ",", "0", ",", "0", ",", "0"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", "1"}], ",", "0", ",", "0", ",", "1", ",", "0", ",", "0"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", "1"}], ",", "0", ",", "0", ",", "0", ",", "1", ",", "0"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", 
     RowBox[{"-", "1"}], ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", 
     RowBox[{"-", "1"}], ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     RowBox[{"-", "1"}], ",", "0", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1", ",", 
     RowBox[{"-", "1"}], ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", 
     RowBox[{"-", "1"}], ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", 
     RowBox[{"-", "1"}], ",", "0", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", 
     RowBox[{"-", "1"}], ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0", ",", "0", ",", 
     RowBox[{"-", "1"}], ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1", ",", "0", ",", 
     RowBox[{"-", "1"}], ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", 
     RowBox[{"-", "1"}], ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", 
     RowBox[{"-", "1"}], ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
     RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", 
     RowBox[{"-", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", 
     RowBox[{"-", "1"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8662149899025536`*^9, 3.866215068044236*^9, {3.866215182163351*^9, 
   3.866215188117077*^9}},
 CellLabel->
  "Out[101]=",ExpressionUUID->"c13fdf2e-c2e1-4357-9f37-6c68506fbd1e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"a", "=", 
  RowBox[{
   RowBox[{"UnitStep", "[", 
    RowBox[{
     RowBox[{"Transpose", "@", 
      RowBox[{"IncidenceMatrix", "[", "randomDirectedGraph", "]"}]}], "-", 
     "1"}], "]"}], "//", "Normal"}]}]], "Input",
 CellChangeTimes->{{3.8662148754716635`*^9, 3.8662149287535*^9}, {
  3.8662149717882195`*^9, 3.866214974837219*^9}, {3.866215076259839*^9, 
  3.8662150764768333`*^9}, {3.866215194742966*^9, 3.8662151974369755`*^9}},
 CellLabel->
  "In[102]:=",ExpressionUUID->"0445a0e5-e11c-4a7a-a09f-3d16dcd78917"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0"}],
     "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8662149751952276`*^9, 3.8662150769123726`*^9, 
  3.866215197906978*^9},
 CellLabel->
  "Out[102]=",ExpressionUUID->"c808be08-a618-4225-837c-df08c90a13c9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"a", "-", "m"}]], "Input",
 CellChangeTimes->{{3.866215078954616*^9, 3.866215079484623*^9}},
 CellLabel->
  "In[103]:=",ExpressionUUID->"69448047-a7bc-4472-9402-1fde0eae24b1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1"}],
     "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8662150800167136`*^9, 3.8662152025576954`*^9},
 CellLabel->
  "Out[103]=",ExpressionUUID->"512cd06a-dac5-4de2-b059-5e50cfc2ec01"]
}, Open  ]],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsnXn8DdUf/5EtS1GksocQIVtE9j1Zs2/ZQ9ay75KIrGVXIpWyhCgUEdkp
RURSEhWRikqZ3/M375/373xn5l7Xx2eT8/rjPubOnDnL+7yX1zlzZk72Nt3r
dUiUIEGCp5LzU6913/K9erXuXz8Nfxp0e6pTx27t21Xv9nT7ju17lWhzEyfn
JEyQIBEH//fYsbCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCw
sLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLgBcOnSpbiu
Qpwh8rbHHynFVU3ijwRuQFjh34C45CKua2FxveLSZXjO//7774sXL+Y3TmoV
33DmzJmhQ4e+8MILcV2ROAA6MH78+H79+l0xJVr0+uuvN2rUSP7+/PPPqNC/
//4bwxUMwJ9//jl16tSuXbvGcrlnz54dMWLEmDFjonZ7KGOMdnz00Ud//PFH
tGdLj2t3r169+tdff432Ig4fPrxmzZpAEXESfatdu3a0FxoPgZxp7KlTp+K6
InGPEydO1KtXL2nSpMuWLYvrulhcT8CIVq5c2axZs7p161atWvVhFxMmTFDf
+OqrryZIkGDGjBlxW894gjfffDNFihRDhgyJ64rEATZs2JAuXbp27dpdMeV3
332XL1+++++/X/726dMHFdq8eXMMVzAAO3fuzJQpE74xlstdv359qlSp+vfv
f1V3Eb4//fTTzp07Y4l1XTRs2HD58uUxRIe2bt06adIkOf7tt9/au+jevfvI
kSPNZATZHj16cClC8k9EzpAhw/fffy9/z58/z73RzoFr1qyJUv3yyy/+S0RD
nFjWrFmjt8T4iV27diGH2Of58Q2Md+rUqXPx4kVMz3JCi8hx5MiRSpUqlS1b
9ssvv9STX3zxRebMmWfNmiV/f//9dyiQnQtSVKhQ4cZkQQC2HAkLAlOmTFEW
BCmCS8fJXBDo1q1b7LMgQKFXxYJ+/fVXZJszZ863335bTx4/fhzz7NixY7RX
79y5c9WqVTPP0EG33377wIED/YnhRU2bNo2QjD3++OPE5U8++UTPrFixYvDg
wddYYQ/27t37zjvvhLqKDG8QFkSvYVzHjh2L64rEMSA/9evXj+taWFxnYMTE
MLlcuXL+KfF169bNnDkzTmoV//Hoo4/esCyoQ4cOEbKgl19+WVlQ3AIqEv9Z
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
1pGWeGJB4MknnyxbtqwoPk8pUaKE4w4Nacmfe+45GZAB+/fvl7t+/vnne+65
J5IRsNdff133q4oRC9q+fbuHBd0KuMEsCFIayZumGOHy5cuIVqi9AxBjKH3x
4sXTpk37j2sIs1Tmd999hySsWLEiQYIEkUxdi4QFHTlyRJdPjCfEkgV5NqSw
LEiQL1++vzQLkp1hLQuy+Ivi6NGjCxcu9EyniRMEsiDH3dH4vvvuEyYgG/xd
NyvZ/NrzxlxmMOoG9IratWvritPxx4K+/PLLxIkTy3sxPKB/o8nAN2KzZ89u
1qyZ56RsLeTxX/ClNGnSyCSo2LAgWulf//qXXuUvPY4zkm2jzfMiA2fOnAm1
aRQJuNGz/BHcgJOeZUDkJNDOFRYkXwgePHgwzCDJlStXuFHZr1k22ILOjefk
vn37SBlIKeGosqupCdlULpLNg7Dn69evN2egCZo2bRq4H8Tq1auzZs1KO0c4
d4jCN2rUiIhA9q+PZMzKz4JOnz5N9ZVBbdq0KXv27PR7qDEo0qNuckl2j4pi
rqywIG5HSPz9znk4v9nv5iVIRdGiRc1RMmVB1MLT6Y77NoSTUiN/SXSL+e+/
/55kuo0U5+lo3aONv5gIcyfBb7/9Fhmji7lLh5pJw1+zx4UFcfuBAwe45HHx
Fy5c4KT5lahKKSXxf6YhQFZFL9SUSVPkzZsXkxWq42gWbkFxPAqLHnHes0IU
j5DVmfyXRPfNv6ShvzxV4CS/oTRUEnz++efmXbK/PLFnqCpQEu7ybCFHOTnp
+YJGTpqdLixI9J1uDWM66HfuNWdEaKfQv6pl0vXA7iNm4bgh86hRo/r371+q
VKkwyZCl9teD3+75WdBXX33V08Udd9wBf4j8Q/LFixfDZ8wzmBHoBHH0uHHj
PImHDRumoyjxwYKEffXp06dSpUrUccuWLYE3BrKgBg0aeOalQH6qVq2KDXn9
9dc9ieGKMqs5Chb0wgsvyMu4fv36PfLII3KJfNq1azdp0qQ333yzTp06NWrU
ED8I85HGpC7JkiXTATqzyj169JgwYQI1Kly4sGwiz0n6hcJnypQpZ86cas1W
rVrVrVs3Ut5zzz08Ws7DgqZNm4brL1++PN4cZ+ovORlCDKpXr545c+Zs2bKJ
p8DR0In58+dftGgRJcQk4sJwTIgcj3jiiSegHx4OTz5p06b1bCaLEylQoABV
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
w7IgCwuLvwNy585tziVeuXJlJIur32DECQvav39/4sSJzddM2Pk4ISfXxeXL
l0uUKHHd3XXD48SJE+XKlbOb2FrcGKAdQ4YMkZe2/gXEIsF3330ntxcpUsSy
IAsLi1sTzZs31+Whrl692rJlS329futg7Nix5reB0UG+lJ82bZoQIThJ+fLl
za9O4hWHDh1q2rRpbHKoXLmyucibhUW8YujQocWvITrBk5XqBbKqoYWFhcWt
hh9//HHEiBH169fv0KFD37599+7de7NL5MXGjRtr1qxZsmTJyZMnmzPAowCm
uG3btjC9Z599FhPtmfUX3wj/PYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWF
hYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWF
hYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWF
hYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWF
hYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWF
hYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWF
hYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWF
hYWFxd8QQ4cOfSh2+Pzzz292JSwsLCwsLCwsYoxXXnnlHy7uvvvulStX7gmL
FStWzHIxYcKE5s2bJ0+enBt37959sythYWFhYWFhYRENpk6dqkTo2LFjkd/4
3XffQYQsC7KwsLCwsLhZ+OWXX7755pubXYr/HzeeFfz5558QEn6jziFqItS8
eXPLgiwsLCwsbjNMmzbtvffeM89c18n+6UKO33333Zdffjk2fjlCQIF69ep1
/vz5AwcOTJ48uf01dHDBwZQpU06dOhV479WrV+fPn9+qVauqVatWqlSpc+fO
a9as+b//+z8uSVatW7cuXrx4/fr127RpwyWpzqVLl4YOHcrVJk2alC5dmqud
OnWCCWhlFy9evG7duviuuImDBw9CYAYNGhSbTOjxKIjQwIEDLQuysLCwsLid
8P777zdq1Mg8880336RIkSLMLXCD8uXLz5gxQ880bNhw7dq18VXEaxg8ePCu
Xbs4+P777//973/ndPH777/LVTjSq6++miVLlunTp3so2YYNG3LkyNGnT5+T
J0/KmS1bthQpUqRKlSqO+65n4sSJUAJoEn+PHj167733NmjQAI7066+/chUW
xNVPPvmEqzt37syYMeOQIUP0EU2bNqU88V13xYULF7p27SrtEBvQVsmSJYsR
Edq2bRuNE8vnWlhYWFhY3CK4ePFi4cKFz507p2dw7pUrV4YhhLpl9+7dVatW
xXsuWLBAT/7www+FChX66aef4q+oPLd+/frmmQoVKsBAPMlgRwkTJhwzZoye
eeuttzgzatQoT8rTp08/+uijcvyf//yHGumozr59+/jbt29f+fv222/z98SJ
E/J33rx5/F2yZIn8/eijjyCBN2AoLM4BAY4pEbKwsLCwsLhtMHbs2D59+phn
/vnPf5YrV65kyZKhbpk5c+aePXtwnR9//LF5vmPHjuPGjYuvggYNNwWyINC5
c+c777zzyJEjjkvzMmbMWK1atcA8ly9ffuXKFcfHgkCWLFny5csnxx4WdPLk
Sf6aA2hlypTZu3dvrKp3k7B582YhQnfddZclQhYWFhYWfx/8/vvvuXLlggDo
mU8//XTSpElt27YNw4JAIAt69913CxQo8Mcff8RHUU+dOgWZ+eWXX8yToVjQ
zp07KV6vXr04Hj9+PMeLFy8On7+HBf3888+pUqWqXbu2/PWwoAMHDvB3yJAh
ejvU8dlnn422cv8ffvvtt6+++urPP//85ptv9u3bJ4NL9NHu3bvlvKbkpPYa
58+ePeu4Q1ukjILJxAcR+uGHH2jzzz77LEZDZDDSFStW6IjiJ5988vXXX8dJ
eSwsLCwsLDzAm9977736F9ffokULDqJjQSBBggQyAhPnwKVWrlzZczIUC4IV
3HnnnTJWU6dOHYr65Zdfhs/fw4LmzJmTOHHiDz74QP6aLAi33rlz5wwZMhw/
flxv37Jly9133x1t5f5f4P3z5MnTrl275557rmrVqkmSJKlZs+bevXupdZky
ZXj66NGjJeXEiRNz5swpvI4yVKxYsWzZsq+99hp33X///SlSpIhiypBJhLTW
UWPMmDHNmjVDPKjRW2+9FfmNXbt2zZw5c7169TieMWNG0aJFySeWhbGwsLCw
sAjE1KlTGzdurH/xQV999ZUTCxZUqlSpZcuWxUdRe/XqRak8J0OxoF9++SVl
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
XteoVRRFURRFiV3u3LnTsWNH83f8+PE//fST1zMnTZo0bdo0Nnbu3Bn4wJu1
a9eWL18+8vFUFEVRFEWJWsaNGxeBxbbatWtnT4IUEhKy6R6O/ZUrV37nnXei
Jq6KoiiKoihRxJ07d1Ap5u/du3d9TfDoOBQUFCQ9SMHBwfXq1fvss89G38Ne
I/W77747ePBgpkyZonXxOEVRFEVRlPCyZ8+eOnXqmL9Dhw5NmDCh52lIncaN
G+fKlcvsQT4VKlQIbVO3bt3Vq1d7DXzXrl0jR45k45FHHomD69sqiqIoivIw
s27durZt25q/e/fu9bp6V0hIyPLlyxs2bGjvzJ49O1qoYMGCm/4XmSwIgVS5
cuVRo0aNHj06fvz4qoIURVEURYlToIK6detm/nbu3PmXX37xemabNm2WLFli
7zEqaPT/Ii/O2Pj777/lzMyZM+/cuTPaHkJRFEVRFCXcbN269euvv5bt27dv
FypU6PLly9u2bePvgQMH1q5dK4fu3r1boECBq1evmgtF/7C/YsWKhw8fdgSL
EOrRo4f5++677wYFBUXvkyiKoiiKooSHmzdvFi1aVLYRPylTphw6dKj8/emn
n+LHj3/06FG2T5w48eGHH9oXopEaNGjgcs8FVLJkySlTppg3YgsXLkQgjRw5
UkZEr1mzJm3atHXr1kU4xeizKYqiKIqi+KV169b79u1zubt3du/ebR9q06aN
qKCJEyeOGzfOPtS9e/ddu3bJdkhIyOzZs3v27Fnfja/B0oqiKIqiKHGKS5cu
denSxXP/xo0bZY5E+PTTT+3XYVeuXLEnWlQURVEURblP2bBhw/r1630dbdy4
8dy5c+09s2bNskWRoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiKoiiK
oiiKoiiKoiiKoiiKoiiKoiiKoiiRYdmyZaMix7lz52L7IaKXjRs3RjKJPJdR
UxRFURQl1qlbt248N6+++mr9sChRokQONxkzZox3j+3bt8f2Q0Qv3bt3lydN
mTJlmElUpkwZSaI333zTJNEvv/wS2w+hKIqiKIqTS5cu5cqVS5x106ZNZXnT
QAgODv7mm28eBhV048YNtI0k0UcffXTz5s0ALwwNDR02bFiCBAlUBSmKoihK
3MQWQk2aNAlcCHFm3rx5H3gV5IqEEALOVxX0QLJ169ZJkyZ57r9w4ULXrl1j
PDqKosQ+K1asWLt2bbguuetGtrl25cqVUR8tJSwiLIRq1679MKggl1sIlS1b
NgJCqEuXLqqCHkhOnjyZPn16z5IwduzYr776yt6zYMGCoUOHRuZeVElK0SY3
P/74o31o7969S5YsYT+/kbmFoiiR5MCBA4UKFXIsLM4eX+fv2rWrZMmS+JSM
GTOuWrWKPVzL+Tt37oyJ6Cr/S8SE0PDhwx8SFeSKqBCaP3++qqAHlRw5cgQF
BTl2lipVavny5faeQYMG1a1bNzI3unXrFm3MZMmSFSlSZNu2bfYhxNjAgQOT
Jk36+++/R+YWiqJEhtu3b2fLlm3Pnj1mD260Tp066dKl83o+LZcCBQrMnj17
9OjRSZIkoXYHBwezf/fu3dmzZ79z504MxVuxINlr1qwpXr5x48aB9wg9VLRv
3z5ir8aUB4/vvvuOmmLvuXDhQqpUqezGYBRSpUqV999/37GTevr5559Pnz49
Ou6oKEqATJgwoVatWvaemTNnZsqU6d133/U8mWqLKwkJCZG/zZs3x6f8+eef
8peaPnHixOiNruIDFUKBYITQhx9+qELoYWb//v2vv/66XQbGjh1L6y9cgVy6
dAk1Va9evTx58mS/x4kTJzzP7NOnz0svveTYuXTp0qpVq0Yg8oqiRBW4zrff
ftvupz116lTHjh2/+OILryrIwZgxY3AoBw8elL9z587Nmzev+t/YIuaFEA3n
06dPyza3O3PmTNzP/Q4dOsSkEOIW//33n2zHZBJxFypmNPVsPBjkzJnTfolP
efj111/tE0jDw4cP+8ovzF2aNGmaNGkyf/78zRY3btzwevKjjz567Ngxs4fT
ChQo4FUyKYoSY/z777+vvvqq+Ut9p12D5QxQBTVv3jx//vzGSnBh/PjxtV7H
IrYQ+uqrr65duxZ99woJCUmXLl3ixIlxJZSBL7/8kpvu2LEj+u4YVdhCiOZ8
9N0ICZQ7d27cH61+kqhr166JEiVyuNowmT59uv+pHS9cuOC45PLly3jnTz75
JGnSpFH3NA8avXv3fv31100fTvLkyW3RiF4l7ygkx48f97x28eLF2bJlO3To
UID3Onr0KEHZWd+yZcvx48dH7gkURYksVMMyZcqYvwMGDJCvFQJRQTjBFClS
mNdhQpYsWXRAaexiC6H33nsv+oTQokWLgoODCxcu3K1bt8GDB69YsYLfU6dO
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
A/Lu448/PnnyZJSHrCiKoiiKoiiKoiiKoiiKoiiKEvfxM/2+JyEhIQGefPny
5R49esybNy/waET4XtFNuJLoxo0bnovdeyU0NLRv3772bNhhRsOx5+bNm3Fh
cmxFURRFuR/BX48aNcosKd6rV6+///7b8zS8bdOmTS9evHj+/Pnhw4cHEjKn
HTt2bLwbxyHPz5QOHjw4Z84c2T59+nSzZs1cbhU0aNCgWBdCRIBH4NnNnvbt
2ztWgHK5VR9JREoiS/r37x9ItOfOnRsUFPTbb7+R7GGef/bs2R9++EG2r169
yr2Cg4PJlz59+sR6EimKoijK/Qgy49ChQ+bvxo0bjSJysHr1atlAruC4wwx5
3rx5M2bMuHPnznvvvbd06VL7ELrL/ss5InsEfLq518KFC6NjTr9wMW3aNJLF
3rNu3TqvvT0m2n/88Yen9vNky5YtAwcOZKNmzZr+h3OTJq1atbIXEzf32rp1
awysY6soiqIoDxhnzpyJwKfTt2/frl69uul/2L9/f/fu3c33Tf/995/sv3nz
5htvvHH06NHt27e/9tprdggOFTRp0iQ/Mwx/9tlnsdjXgSasU6dOBC7kqmvX
rsk2aYLaMUm0c+dOc9q77767Y8cOTkiTJs2lS5d8hbZ8+XI/6z0R5pUrVyIQ
SUVRFEV5aMGx2lPTrF+/3p5Y2IDsGT9+PM7a7Gnfvr2sfD127NhatWpt27bN
8yqkS58+fYoVK8aGLHiN9x/tBmEjG2fPnuVoxYoV7avQSPay2j179ly1alVU
PG5EWLJkid3TQvR+/vlnz9VO2T9lyhTTPwMjRoyYPXs2GwsWLKhSpcratWs9
A+eqqVOnvvXWW1evXpUk4sFH/y+SFOic06dPm6tmzJhBxEw4P/zwA3ePsmdW
FEVRlIeAjz76aP/+/bJ97dq1Vq1ascfztGXLlhUuXNiM24HJkycPGjTo6NGj
5cuX9xryhg0bOnbsiGuuVq2a5zgiuy8IifXuu++av3/++WeJEiVEPwhs9+jR
I/wPFzW0bNlyxYoV5i/PVaFCBc9FQpGIlSpVQhOaPStXrmzWrNmVK1fee+89
r6/P/v77b8QkSdSwYcM2bdr4j0b27NnN9q5duz7++OPBgwebPSRavXr1wvVc
iqIoivKQU7NmTfstTNeuXefPn+952t27d4sWLWoPD169ejUufs2aNUWKFLGn
+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
3333Xd26de1rqfXJkyfXb8QiANYYCdS0aVOMYdGiRRs2bEijz6Eww2T06NG5
cuVyjL30T+3atckymqI0J+PFi7d27dpwRlxR7m9y5syZJk2aFStW2DvXr1//
2muv2cZt+fLlCJt//vmnS5cuZjZp7GSCBAl++eUXR5hTpkwpUaKE571u3br1
4osvbtiwwbG/devWxYsXp1XiJ55EpkePHo4+YZd7WMJjjz0mUZ07dy61WHvj
FSVw7ty5kz59esfgEOjevTtNDPP3k08+wVCggkJCQqiGOXLkKFiw4OTJkx3y
acyYMXXq1ImJeD9wDB06NGPGjCdOnGD7t99+w6xhnKV5ePHixc8//3z16tVy
Jmn+448/ep2XyfFhbyBcuXKlSZMm8pnM1KlTI/cQinL/MXjw4KRJkzpmTUfn
YPH27dtn9vTv3x/BQ/PEXlDj119/TZs27QcffOAIEyP57bffet5rz549r7/+
uud+Wo5Eg/YIrZJRFgsWLJATbt682bVrVyppmTJl5s+fby7EbiCf2C8GgUM0
V8PVDlIUZcKECeH6QsEXeOfMmTPrZ/JRzs6dOytWrGg+76LBOG7cuMqVK8du
rBTlweDAgQMyPYiDfv36denSJczLabPUr1/f3nPt2rWUKVP++++/nif7X2bo
8uXLM2fO7NatW/17DBgwIIAnUBQlUty5cydbtmz+p2oPhDFjxrRt2zZKoqTY
YFTNe39h4MCBXvttONPrlyYGu22rKIrgdUqKkJCQAgUK+O9fPXv2bLVq1RzG
c/Xq1V6HK1+/fr106dJRvqCqoiiRh9bQBx98EJmVNNesWVOiRAn7k3klqpgx
Y8aQIUPs0dGlSpXyul4b6e/1SxNDmOOlFUUxoGd69Ojh5wQaIwcPHrT33L17
t2nTpjIDvINvvvnG/yJiiqLEIkFBQZ5fZQYOKig4ODgK46MYihUrNmLECLOk
EWK1ePHisRslRXlIWLBgwR9//BHgyRcuXEiePHn//v09DyGoZs+eHaVRUxRF
eSjo3bv3b7/9Zv7OnDmzV69esRgfRVF8sWvXrtiOgqIoyoNMixYt9u/fH9ux
UBRFURRFiVGWLVvmOaWtoiiKoijKA8/MmTMDmWNWURRFURRFURRFURRFURRF
URRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRF
URRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRF
URRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRF
URRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRF
URRFURRFURRFURRFURRFURRFURRFURRFUQx3796VjatXrx48eDB2IxOXIaH+
+eef2I6FEkHIvhMnTkyYMGHnzp2HDh2K7ej4JDg4+PDhw14P8Qi7du2K4fjE
cUirkJCQ2I5F7BuHM2fOTJky5e+//47FOChKnGX37t3t2rXb5I1FixaVL1+e
c3788ceUKVMOHTrUawhff/11p06dYjbWcQu8T65cud57773YjkhA1K9fv3v3
7mGehu4tXbr0Tz/9FANRil1u3rzZuHHjjz76KGfOnPHixRs0aFBsx8g7M2bM
SJYs2fjx4z0P/fbbbxkzZmzQoEHMxypcoAfOnz8/b968UaNGbdy48datW5EJ
bd26dSVLlty/f7/nodDQ0EaNGiVIkOC///6LzC0iz7Zt2/LkyVOwYEH5e+HC
BeK8YMGCGIsAUrB9+/YffPDBxx9/HGM3DRPaGqTD6tWrYzsiiuJau3Zt4sSJ
69WrV99N/PjxM2TIINulSpUqWrSoy+0QX3jhBV8qiPMpzzEb67gFxrxChQr3
iwpKmzYtsQ3ztGPHjj355JOdO3eOgSjFLi1atFixYgUb165de+6552bPnh3b
MfLOlStXXnrpJa8qKCQkJFu2bHFcBW3YsKF48eK0F77//vuFCxf26dOnSJEi
zZo1u3z5csQCHDNmTMKECbds2eL16LJly9C0sa6Cbt++XblyZaOCaHU+/vjj
3377bYxFAP1z6tSpGLtdgKBgH3300WnTpsV2RBTFNXbs2BEjRpi/lMzatWvL
9l9//fX555/Ldt68eX2pIAX69et3v6ggxWbPnj2UbfM3TZo0cVYFwVtvveVV
BUHdunXjrAq6e/dur169kiRJ8vPPP9v7b9y4Ubp06b59+0bHTY8fPx4XVBCg
eYwKimGQxyTCnTt3YuXuinJfQNvk9OnT5q+tglzu3lTZUBXkn8BV0F030R0f
xcZPgg8cOJDGsvmrKig66NOnD77Y62ugCRMmzJs3L0ru4qhZqoJgy5YtcUcF
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
+rvcH77JTCmIVSP8UGtiScxOHhalTWkknpLpiqIESNyZSFZ5CHGMC1LuUxxv
xGwc44JiDFoNFSpUUEmgKIp/VAUpsYiqoAeDOKiCTp06ZQ9sUxRF8YoMnvT6
vklRopW7d+9myJDBjG9R7l8+/PBDGQ/vQAZ7x8oK6QMHDpwzZ47XOZcURVGE
w4cPN2vWLEeOHE2bNvW1TIOiRAehoaH9+vWj7FWtWtXXEmDKfcHkyZPz5s1b
rFix0aNH23NjksV9+/aVLPY6/3a0ki9fvurVq9tz1CuKoiiKojwMoH/0UylF
URRFURRFUSKA19nkDGfPnnXM/POwcenSJcfkh14hDbdt22bPdxdbEBPHZ7yx
xfbt21u0aDF37tzYjogTPwU+juAnhhz6+++/7cmLHkjCzKODBw+aSRIchIaG
ymxRJqgozPEdO3ZscrN169aIhUD2SQhbtmyJqlgZzpw5YxZyjUlIYXtmg2jl
4sWLZioM5SHnypUrTZs2jeRnkjlz5vRc4UtYt27dk08+6X9m9Vghas2aH/Dj
SZMm9TpRvIMuXbqYVRtikZCQkGzZssWPHz92o+Fyz/jUr1+/bt26UURjOy7/
w+7du5MnTz5p0qRoCn/x4sUDBw6MTAj//fcfMRw2bJjXo7KC+bhx4yJziyjn
7j3CPPPPP/+cOHHir7/+KkpgyZIljvmvXO56Rwr4qU0yXapZNsXm8OHDr732
2gsvvCB/qRH8NdMYRp5XX321WrVq9evXdxTswFMAW8HlderUefzxx8M8mUbo
okWLJK1WrVo16h7s9DwZ/ZMkSRJZPzcmQfwUKFCAYulrPdYoJCgo6Omnny5f
vnx030i5Lzh58mTBggUj2aCoUqWKvUK3g6pVq8YpFXTq1KnixYs/+uijmTNn
xhLGwB2xV4GooKtXr1I3Y10Fudxz/cUFFVSoUCHPmQbjAvv378+TJ0/0FR48
lK91nQLkxIkT+fPnd6yeYLhz587LL78cp1TQhg0b3nzzTZzge++95znXnw2P
hrs8cODA+vXr06RJ89RTT82bN89MxmhAqebKlctz9TEbCphXFeRyTxhuVBAV
s2TJkpHUpTaoIM8JUTHCRYsWJQVIB3uVCpd7heWhQ4d6RuDatWuBqKB//vlH
1pd5991316xZI0uLouHtFXNsMFYxr4JcbvEfMyoIatSooSpIiTHCXGUvJrlx
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
    "], {{0, 247.82147786141462`}, {462.04004347043406`, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{119.98960000000002`, 119.98960000000002`},
    SmoothingQuality->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{462.04004347043406`, 247.82147786141462`},
  PlotRange->{{0, 462.04004347043406`}, {0, 247.82147786141462`}}]], "Input",E\
xpressionUUID->"a0bb9adf-02a5-4b18-a5f9-7162c4cb1987"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Objective Cost Consideration", "Section",
 CellChangeTimes->{{3.8662163980266514`*^9, 
  3.8662164131843405`*^9}},ExpressionUUID->"afb39081-1171-48e5-a455-\
9277eb377f65"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"randomWeightedMixedGraph", "=", 
  RowBox[{"RandomWeightedMixedGraph", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"20", ",", "54"}], "}"}], ",", ".5", ",", 
    RowBox[{
     RowBox[{"RandomReal", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "\[ExponentialE]"}], "}"}], ",", "#"}], "]"}], 
     "&"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8662157179784317`*^9, 3.866215748196993*^9}, {
   3.866215835110594*^9, 3.866215904708912*^9}, {3.8662159460772586`*^9, 
   3.866215949387892*^9}, {3.8662162641367025`*^9, 3.866216267258889*^9}, {
   3.8662163000274415`*^9, 3.866216305575633*^9}, {3.866216360502496*^9, 
   3.8662163612754855`*^9}, 3.866216904094015*^9, {3.8665594227458005`*^9, 
   3.866559536589946*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"62f97736-14ff-495e-aaca-099d9cb3799d"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
       20}, CompressedData["
1:eJxTTMoPymNmYGBgAmIRKMYHGAnIEwKMONjEmE+K3ehqCfHJAYw4aGL0kCpH
iR5q+JUWYCS5C5eZ1MhPMExtMFjjBwSo6TZahN9gDjt6AWLLJmLzBrFlJ7Xr
CXLjktp5npT6kpR6gdR6mBRA7XxKa0Br946UcmG0PKUcjEQ/gwAAI+gCFg==

      "], {
      EdgeWeight -> {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}, 
       GraphLayout -> {"Dimension" -> 2}}]]}, 
    TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQfUr6jfKyXSwOT1Qio+d8/2v/InoivxUbi0Plwq1N
aiEv7etV5kjN02dy4GN7szd/4Sd7llcOoXaO7A6xktbnXR0+2e8KNKj/Po3V
gQEKuH1/2POacTsce77TNujgD/s8ViHBLUbcDgYRK6Ssn16yv9vm9Ca28p89
05ZrL8QXfrDn285RsDZX2EGP784SLovf9mv5RALWW3yx12qV+t16/5X9FnP3
Tzdev7BPihb1jIz6bX+gZr7yTw5uh5wd94O5mF7ZH5l3iW/eKkYHYx7eXAmT
H/aPjgtGKMgwOHxZmfzn151/9hfMRaVPOjI4mKUqnV5tf8F+Xpfa1C8dgg4+
XMvexYW/tffx8T+49w2fw6mg3VVVO77a/w+QWppwmN0hbwbr7+VLX9kvd573
/PYqDgfbZ7Pmc4n9t4f5k39Wz8RdXZ/sAarCie0=
       "], {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
         {Arrowheads[0.], ArrowBox[{1, 3}, 0.04222457961092127]}, 
         {Arrowheads[0.], ArrowBox[{1, 12}, 0.04222457961092127]}, 
         {Arrowheads[0.], ArrowBox[{1, 13}, 0.04222457961092127]}, 
         {Arrowheads[0.], ArrowBox[{1, 19}, 0.04222457961092127]}, 
         ArrowBox[{1, 8}, 0.04222457961092127], 
         {Arrowheads[0.], ArrowBox[{2, 3}, 0.04222457961092127]}, 
         {Arrowheads[0.], ArrowBox[{2, 10}, 0.04222457961092127]}, 
         {Arrowheads[0.], ArrowBox[{2, 13}, 0.04222457961092127]}, 
         ArrowBox[{2, 12}, 0.04222457961092127], 
         {Arrowheads[0.], ArrowBox[{2, 4}, 0.04222457961092127]}, 
         ArrowBox[{2, 19}, 0.04222457961092127], 
         {Arrowheads[0.], ArrowBox[{2, 7}, 0.04222457961092127]}, 
         {Arrowheads[0.], ArrowBox[{3, 4}, 0.04222457961092127]}, 
         {Arrowheads[0.], ArrowBox[{3, 8}, 0.04222457961092127]}, 
         {Arrowheads[0.], ArrowBox[{3, 12}, 0.04222457961092127]}, 
         {Arrowheads[0.], ArrowBox[{3, 13}, 0.04222457961092127]}, 
         ArrowBox[{3, 10}, 0.04222457961092127], 
         ArrowBox[{3, 18}, 0.04222457961092127], 
         {Arrowheads[0.], ArrowBox[{3, 14}, 0.04222457961092127]}, 
         {Arrowheads[0.], ArrowBox[{4, 7}, 0.04222457961092127]}, 
         {Arrowheads[0.], ArrowBox[{4, 13}, 0.04222457961092127]}, 
         ArrowBox[{4, 17}, 0.04222457961092127], 
         ArrowBox[{4, 19}, 0.04222457961092127], 
         {Arrowheads[0.], ArrowBox[{4, 15}, 0.04222457961092127]}, 
         {Arrowheads[0.], ArrowBox[{5, 7}, 0.04222457961092127]}, 
         {Arrowheads[0.], ArrowBox[{5, 12}, 0.04222457961092127]}, 
         {Arrowheads[0.], ArrowBox[{5, 18}, 0.04222457961092127]}, 
         ArrowBox[{5, 15}, 0.04222457961092127], 
         {Arrowheads[0.], ArrowBox[{5, 8}, 0.04222457961092127]}, 
         {Arrowheads[0.], ArrowBox[{6, 7}, 0.04222457961092127]}, 
         {Arrowheads[0.], ArrowBox[{6, 9}, 0.04222457961092127]}, 
         {Arrowheads[0.], ArrowBox[{6, 14}, 0.04222457961092127]}, 
         ArrowBox[{6, 17}, 0.04222457961092127], 
         {Arrowheads[0.], ArrowBox[{6, 8}, 0.04222457961092127]}, 
         {Arrowheads[0.], ArrowBox[{7, 12}, 0.04222457961092127]}, 
         {Arrowheads[0.], ArrowBox[{8, 11}, 0.04222457961092127]}, 
         ArrowBox[{8, 15}, 0.04222457961092127], 
         {Arrowheads[0.], ArrowBox[{9, 16}, 0.04222457961092127]}, 
         {Arrowheads[0.], ArrowBox[{10, 15}, 0.04222457961092127]}, 
         {Arrowheads[0.], ArrowBox[{10, 20}, 0.04222457961092127]}, 
         ArrowBox[{10, 13}, 0.04222457961092127], 
         ArrowBox[{11, 20}, 0.04222457961092127], 
         {Arrowheads[0.], ArrowBox[{11, 14}, 0.04222457961092127]}, 
         ArrowBox[{12, 18}, 0.04222457961092127], 
         {Arrowheads[0.], ArrowBox[{12, 16}, 0.04222457961092127]}, 
         {Arrowheads[0.], ArrowBox[{12, 17}, 0.04222457961092127]}, 
         {Arrowheads[0.], ArrowBox[{13, 18}, 0.04222457961092127]}, 
         ArrowBox[{13, 19}, 0.04222457961092127], 
         {Arrowheads[0.], ArrowBox[{14, 18}, 0.04222457961092127]}, 
         ArrowBox[{15, 18}, 0.04222457961092127], 
         ArrowBox[{16, 17}, 0.04222457961092127], 
         ArrowBox[{16, 18}, 0.04222457961092127], 
         {Arrowheads[0.], ArrowBox[{17, 19}, 0.04222457961092127]}, 
         ArrowBox[{17, 18}, 0.04222457961092127]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.04222457961092127], DiskBox[2, 0.04222457961092127], 
         DiskBox[3, 0.04222457961092127], DiskBox[4, 0.04222457961092127], 
         DiskBox[5, 0.04222457961092127], DiskBox[6, 0.04222457961092127], 
         DiskBox[7, 0.04222457961092127], DiskBox[8, 0.04222457961092127], 
         DiskBox[9, 0.04222457961092127], DiskBox[10, 0.04222457961092127], 
         DiskBox[11, 0.04222457961092127], DiskBox[12, 0.04222457961092127], 
         DiskBox[13, 0.04222457961092127], DiskBox[14, 0.04222457961092127], 
         DiskBox[15, 0.04222457961092127], DiskBox[16, 0.04222457961092127], 
         DiskBox[17, 0.04222457961092127], DiskBox[18, 0.04222457961092127], 
         DiskBox[19, 0.04222457961092127], 
         DiskBox[20, 0.04222457961092127]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{{3.8665594706048613`*^9, 3.8665594777322435`*^9}, {
  3.8665595077704954`*^9, 3.866559537133457*^9}},
 CellLabel->"Out[26]=",ExpressionUUID->"1c2f0c16-9a01-47a3-b93b-85fe351a9df9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AnnotationValue", "[", 
  RowBox[{"randomWeightedMixedGraph", ",", "EdgeWeight"}], "]"}]], "Input",
 CellChangeTimes->{{3.866559491919525*^9, 3.8665595272987638`*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"c0e40e96-ee35-43e5-88ea-64909e7bcde1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{{3.866559527690547*^9, 3.866559539938919*^9}},
 CellLabel->"Out[27]=",ExpressionUUID->"6b6406b4-be5f-4a26-a718-db954015fb62"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"WeightedAdjacencyMatrix", "[", "randomWeightedMixedGraph", "]"}], "//",
   "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.8662159190996127`*^9, 3.866215930031999*^9}, {
  3.8662161332219615`*^9, 3.86621613383261*^9}, {3.8662162908885117`*^9, 
  3.866216293744606*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"7cb5d2c4-ef14-4935-995e-108f6aec7659"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "1", "1", "0", "0", "0", "1", "0", "0", "0", "0", "0", 
      "1", "0", "0", "0", "1", "0"},
     {"0", "0", "0", "1", "1", "0", "1", "1", "0", "0", "0", "1", "0", "1", 
      "0", "0", "0", "0", "1", "1"},
     {"0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "0", "1", 
      "0", "0", "0", "0", "1", "0"},
     {"1", "1", "0", "0", "0", "1", "1", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "1", "1", "0", "0"},
     {"1", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "1", "1", "0", "0", "0", "1", "0", "1", "0", "0", "1", 
      "0", "0", "0", "0", "1", "1"},
     {"0", "1", "1", "1", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", 
      "1", "0", "0", "0", "0", "1"},
     {"0", "1", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", 
      "0", "0", "0", "0", "1", "0"},
     {"1", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", 
      "1", "1", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "1", "0", "0", "0", "0", "1"},
     {"0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "1", "0", 
      "0", "1", "0", "1", "1", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "1", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", 
      "1", "0", "1", "0", "0", "0"},
     {"0", "1", "0", "0", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0", 
      "1", "1", "0", "1", "0", "1"},
     {"1", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "1", 
      "0", "0", "1", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", 
      "0", "0", "1", "0", "1", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "1", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", 
      "0", "0", "0", "0", "1", "0"},
     {"0", "0", "1", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "0", 
      "0", "0", "1", "0", "0", "1"},
     {"0", "1", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "0", "1", 
      "0", "0", "0", "0", "1", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[
   SparseArray[
    Automatic, {20, 20}, 0, {
     1, {{0, 5, 13, 16, 22, 24, 31, 37, 40, 45, 47, 52, 53, 56, 62, 66, 70, 
       71, 73, 77, 81}, {{19}, {4}, {5}, {9}, {15}, {12}, {5}, {19}, {4}, {
       7}, {8}, {14}, {20}, {14}, {7}, {19}, {18}, {17}, {1}, {2}, {6}, {7}, {
       1}, {6}, {11}, {20}, {19}, {9}, {4}, {5}, {14}, {10}, {15}, {2}, {3}, {
       4}, {20}, {2}, {11}, {19}, {16}, {13}, {10}, {1}, {15}, {15}, {20}, {
       19}, {8}, {13}, {16}, {18}, {19}, {17}, {15}, {11}, {18}, {2}, {6}, {
       15}, {16}, {20}, {17}, {1}, {9}, {14}, {19}, {17}, {11}, {14}, {19}, {
       19}, {11}, {3}, {8}, {17}, {20}, {2}, {7}, {14}, {19}}}, {1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
      1, 1, 1, 1, 1}}]]]]], "Output",
 CellChangeTimes->{{3.8662159240441504`*^9, 3.8662159530658593`*^9}, {
   3.8662161030129385`*^9, 3.8662161341951427`*^9}, {3.866216274601882*^9, 
   3.8662162941115975`*^9}, 3.8662169115181003`*^9, {3.8665594816126394`*^9, 
   3.866559509902067*^9}},
 CellLabel->
  "Out[24]//MatrixForm=",ExpressionUUID->"cfb6b22f-862c-43a0-83bd-\
b38bc0df756b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AnnotationValue", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"randomWeightedMixedGraph", ",", 
     RowBox[{"1", "\[DirectedEdge]", "2"}]}], "}"}], ",", "EdgeWeight"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.866215968853994*^9, 3.8662159967263546`*^9}},
 CellLabel->
  "In[125]:=",ExpressionUUID->"5a341160-8365-47f2-8278-0b8a4b86d1dc"],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{{3.8662159890022078`*^9, 3.8662159974729304`*^9}, 
   3.8662162789380198`*^9},
 CellLabel->
  "Out[125]=",ExpressionUUID->"edf87a11-7615-4a8a-9c4d-c4255e1546ff"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AnnotationValue", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"randomWeightedMixedGraph", ",", 
     RowBox[{"1", "\[UndirectedEdge]", "6"}]}], "}"}], ",", "EdgeWeight"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.866215968853994*^9, 3.8662160270524445`*^9}, {
  3.866216074009898*^9, 3.8662160782719154`*^9}},
 CellLabel->
  "In[126]:=",ExpressionUUID->"34e7ec17-594a-41d0-9571-04ddd36b4d6d"],

Cell[BoxData["1.140762407561636`"], "Output",
 CellChangeTimes->{3.866216027565437*^9, 3.8662160786928988`*^9, 
  3.866216128431569*^9, 3.8662162813640237`*^9},
 CellLabel->
  "Out[126]=",ExpressionUUID->"271891e6-ce46-4596-8329-fd7160ba2b5a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Position", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"WeightedAdjacencyMatrix", "[", "randomWeightedMixedGraph", "]"}],
     "//", "Normal"}], ",", 
   RowBox[{"AnnotationValue", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"randomWeightedMixedGraph", ",", 
       RowBox[{"1", "\[UndirectedEdge]", "6"}]}], "}"}], ",", "EdgeWeight"}], 
    "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8662161429850287`*^9, 3.866216158464182*^9}},
 CellLabel->
  "In[120]:=",ExpressionUUID->"f1160880-1ec6-4e17-ad25-46a11454083f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"1", ",", "3"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.866216159094855*^9},
 CellLabel->
  "Out[120]=",ExpressionUUID->"74f14e1b-179c-4ed1-af29-ae3f8e0a748b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"VertexList", "[", "randomWeightedMixedGraph", "]"}]], "Input",
 CellChangeTimes->{{3.866216179746896*^9, 3.8662161877872095`*^9}},
 CellLabel->
  "In[121]:=",ExpressionUUID->"be06eed2-39f9-4ad7-bff2-ebca8d9a3f79"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8662161882911882`*^9},
 CellLabel->
  "Out[121]=",ExpressionUUID->"2a0b72d8-4762-48f7-acc4-395f568effa4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graph", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "\[UndirectedEdge]", "2"}], ",", 
     RowBox[{"2", "\[UndirectedEdge]", "3"}], ",", 
     RowBox[{"3", "\[UndirectedEdge]", "1"}]}], "}"}], ",", 
   RowBox[{"EdgeWeight", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], ",", 
   RowBox[{"VertexLabels", "->", "\"\<Name\>\""}], ",", 
   RowBox[{"EdgeLabels", "->", "\"\<EdgeWeight\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.866216240578538*^9, 3.8662162446754484`*^9}},
 CellLabel->"In[122]:=",
 CellID->198792957,ExpressionUUID->"3f41a6c0-96c2-4414-a090-456f2af86763"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3}, {Null, {{1, 2}, {2, 3}, {3, 1}}}, {
      EdgeLabels -> {"EdgeWeight"}, VertexLabels -> {"Name"}, 
       EdgeWeight -> {1, 2, 3}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], {
         {Arrowheads[0.], 
          ArrowBox[{{-0.8660254037844384, -0.49999999999999933`}, {
           1.8369701987210297`*^-16, 1.}}, 0.020399597244776385`]}, 
         InsetBox["1", {-0.4330127018922191, 0.25000000000000033}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{-0.8660254037844384, -0.49999999999999933`}, {
           0.8660254037844389, -0.5000000000000012}}, 0.020399597244776385`]},
          InsetBox["3", {2.7755575615628914*^-16, -0.5000000000000002}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{1.8369701987210297`*^-16, 1.}, {
           0.8660254037844389, -0.5000000000000012}}, 0.020399597244776385`]},
          InsetBox["2", {0.4330127018922196, 0.2499999999999994}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {
         DiskBox[{-0.8660254037844384, -0.49999999999999933}, 
          0.020399597244776385], 
         InsetBox["1", 
          Offset[{2, 2}, {-0.845625806539662, -0.479600402755223}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.8369701987210297*^-16, 1.}, 0.020399597244776385], 
         InsetBox["2", 
          Offset[{2, 2}, {0.02039959724477657, 1.0203995972447764}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.8660254037844389, -0.5000000000000012}, 
          0.020399597244776385], 
         InsetBox["3", 
          Offset[{2, 2}, {0.8864250010292153, -0.47960040275522486}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellContext->"Cell$$16671`",
 CellChangeTimes->{3.8662162453330355`*^9},
 GraphicsBoxOptions->{ImageSize->100},
 CellLabel->
  "Out[122]=",ExpressionUUID->"f45d74fe-87ba-40ed-ba83-dad5670790be"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"WeightedAdjacencyMatrix", "[", "%", "]"}], "//", 
  "MatrixForm"}]], "Input",
 CellLabel->"In[2]:=",
 CellID->355119011,ExpressionUUID->"c71601ef-9712-4222-b514-726cba223c2c"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "1", "3"},
     {"1", "0", "2"},
     {"3", "2", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[
   SparseArray[
    Automatic, {3, 3}, 0, {
     1, {{0, 2, 4, 6}, {{2}, {3}, {1}, {3}, {2}, {1}}}, {1, 3, 1, 2, 2, 
      3}}]]]]], "Output",
 CellContext->"Cell$$16671`",
 CellLabel->"Out[2]//MatrixForm=",
 CellID->514951707,ExpressionUUID->"0f64ba6e-b367-4cf1-8dbe-97d4e2ee1f5b"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"objective", "=", 
  RowBox[{"cost", " ", 
   RowBox[{"Total", "[", 
    RowBox[{"u", "+", "v"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.866215703097342*^9, 
  3.866215714169814*^9}},ExpressionUUID->"e589ffba-72d3-4d99-8738-\
39c3d58c1566"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"secondConstraint", "=", 
  RowBox[{
   RowBox[{"u", "+", "v"}], " ", "\[VectorGreaterEqual]", "1"}]}]], "Input",
 CellChangeTimes->{{3.8662164572420473`*^9, 3.8662164858664875`*^9}, {
  3.8662172933866496`*^9, 3.866217294967653*^9}},
 CellLabel->
  "In[142]:=",ExpressionUUID->"67ba7255-e0b5-4e56-8724-76d7ae73df8d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"u", "+", "v"}], "\[VectorGreaterEqual]", "1"}]], "Output",
 CellChangeTimes->{3.866216462683879*^9, 3.866217295517652*^9},
 CellLabel->
  "Out[142]=",ExpressionUUID->"14645c35-a6c3-46ad-b158-d9d1bbed8dd8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"thirdConstraint", "=", 
  RowBox[{"u", "\[VectorGreaterEqual]", "0"}]}]], "Input",
 CellChangeTimes->{{3.8662164882274885`*^9, 3.866216495425541*^9}},
 CellLabel->
  "In[131]:=",ExpressionUUID->"bb786523-4ee3-4c83-b235-638c101342d6"],

Cell[BoxData[
 RowBox[{"u", "\[VectorGreaterEqual]", "0"}]], "Output",
 CellChangeTimes->{3.86621649749456*^9},
 CellLabel->
  "Out[131]=",ExpressionUUID->"c4b7d152-e36d-45c1-81c1-fa419c6658f4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fourthConstraint", "=", 
  RowBox[{"v", "\[VectorGreaterEqual]", "0"}]}]], "Input",
 CellChangeTimes->{{3.8662164986668587`*^9, 3.8662165059813337`*^9}},
 CellLabel->
  "In[132]:=",ExpressionUUID->"eaf08260-f1bf-4743-af5a-829531e40517"],

Cell[BoxData[
 RowBox[{"v", "\[VectorGreaterEqual]", "0"}]], "Output",
 CellChangeTimes->{3.866216506422326*^9},
 CellLabel->
  "Out[132]=",ExpressionUUID->"cae22512-9f36-4589-8dbe-c5db1d12de72"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DirectedGraphArcs", "[", 
  RowBox[{"RandomMixedGraph", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"8", ",", "21"}], "}"}], ",", ".5"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.866216537868435*^9, 3.866216555101647*^9}, {
  3.866216673357744*^9, 3.866216683809131*^9}},
 CellLabel->
  "In[136]:=",ExpressionUUID->"edd2f785-bdc6-4a7e-850e-26d8376a7002"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"1", "\[DirectedEdge]", "3"}], ",", 
   RowBox[{"2", "\[DirectedEdge]", "6"}], ",", 
   RowBox[{"2", "\[DirectedEdge]", "4"}], ",", 
   RowBox[{"2", "\[DirectedEdge]", "7"}], ",", 
   RowBox[{"2", "\[DirectedEdge]", "5"}], ",", 
   RowBox[{"3", "\[DirectedEdge]", "5"}], ",", 
   RowBox[{"4", "\[DirectedEdge]", "5"}], ",", 
   RowBox[{"5", "\[DirectedEdge]", "8"}], ",", 
   RowBox[{"5", "\[DirectedEdge]", "7"}], ",", 
   RowBox[{"6", "\[DirectedEdge]", "8"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8662165515868797`*^9, 3.8662165554346533`*^9}, 
   3.8662166842251644`*^9},
 CellLabel->
  "Out[136]=",ExpressionUUID->"bc2d7058-8630-43d2-8ccd-8ec85da9b094"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Simple Case", "Subsection",
 CellChangeTimes->{{3.866216628804242*^9, 
  3.8662166312759595`*^9}},ExpressionUUID->"2c4fb308-d344-45f8-ba0c-\
6f8ee665c5dc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "vertexCount", ",", "edgeData", ",", "formatDirectedEdgesData", ",", 
     "edgeDifferenceData"}], "}"}], ",", 
   RowBox[{
    RowBox[{"vertexCount", "=", 
     RowBox[{"VertexCount", "[", "randomWeightedMixedGraph", "]"}]}], ";", 
    RowBox[{"edgeData", "=", 
     RowBox[{"Transpose", "[", 
      RowBox[{"IncidenceMatrix", "[", "randomWeightedMixedGraph", "]"}], 
      "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"formatDirectedEdgesData", "=", 
     RowBox[{"UnitStep", "[", 
      RowBox[{"edgeData", "-", "1"}], "]"}]}], ";", 
    RowBox[{"(*", 
     RowBox[{
     "remove", " ", "negative", " ", "values", " ", "from", " ", "directed", 
      " ", 
      RowBox[{"edges", "/", 
       RowBox[{"arcs", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"edgeDifferenceData", "=", 
     RowBox[{"formatDirectedEdgesData", "-", "edgeData"}]}], ";", 
    RowBox[{"(*", "constraints", "*)"}], 
    RowBox[{"LinearOptimization", "[", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Total", "[", 
        RowBox[{"u", "+", "v"}], "]"}]}], 
      RowBox[{"(*", 
       RowBox[{
       "I", " ", "understand", " ", "this", " ", "objective", " ", "function",
         " ", "and", " ", "the", " ", "linear", " ", "optimization"}], "*)"}],
       ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"u", "+", "v"}], " ", "\[VectorGreaterEqual]", "1"}], 
        RowBox[{"(*", 
         RowBox[{
         "I", " ", "understand", " ", "this", " ", "as", " ", "saying"}], " ",
          "*)"}], ",", 
        RowBox[{"u", "\[VectorGreaterEqual]", "0"}], ",", 
        RowBox[{"v", "\[VectorGreaterEqual]", "0"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"u", "\[Element]", 
         RowBox[{"Vectors", "[", 
          RowBox[{"vertexCount", ",", "Integers"}], "]"}]}], ",", 
        RowBox[{"v", "\[Element]", 
         RowBox[{"Vectors", "[", 
          RowBox[{"vertexCount", ",", "Integers"}], "]"}]}]}], "}"}]}], 
     "]"}]}]}], "\[IndentingNewLine]", " ", "]"}]], "Input",
 CellChangeTimes->{{3.8662168182082815`*^9, 3.866216832145403*^9}, {
  3.8662168739782224`*^9, 3.866216874441224*^9}, {3.8662169231991568`*^9, 
  3.8662170054172106`*^9}, {3.8662171629919605`*^9, 3.8662172614086957`*^9}, {
  3.866217310534014*^9, 3.866217347080577*^9}},
 CellLabel->
  "In[143]:=",ExpressionUUID->"9dbad579-bef2-4d0d-8bcd-e19b824967ed"],

Cell[BoxData[
 TemplateBox[{
  "LinearOptimization", "ubnd", "\"The problem is unbounded.\"", 2, 143, 36, 
   19440831192786232088, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8662173478645487`*^9},
 CellLabel->
  "During evaluation of \
In[143]:=",ExpressionUUID->"cf523c1d-c63a-402e-826a-dfb1745d1e93"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"u", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
      "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
      "Indeterminate"}], "}"}]}], ",", 
   RowBox[{"v", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
      "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
      "Indeterminate"}], "}"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.866217349181521*^9},
 CellLabel->
  "Out[143]=",ExpressionUUID->"27dea1ff-7f28-443d-b71e-d362c14c4546"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LinearOptimization", "[", 
  RowBox[{
   RowBox[{"-", 
    RowBox[{"Total", "[", 
     RowBox[{"u", "+", "v"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{
    "secondConstraint", ",", "thirdConstraint", ",", "fourthConstraint"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"u", "\[Element]", 
      RowBox[{"Vectors", "[", 
       RowBox[{"n", ",", "Integers"}], "]"}]}], ",", 
     RowBox[{"v", "\[Element]", 
      RowBox[{"Vectors", "[", 
       RowBox[{"n", ",", "Integers"}], "]"}]}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8662166320866346`*^9, 3.866216648891756*^9}, {
  3.866216755225116*^9, 3.8662167556371202`*^9}},
 CellLabel->
  "In[137]:=",ExpressionUUID->"82196e6c-0ea4-4754-b0db-38feeecff142"],

Cell[BoxData[
 TemplateBox[{
  "LinearOptimization", "varspec", 
   "\"\\!\\(\\*RowBox[{\\\"u\\\", \\\"\[Element]\\\", \
RowBox[{\\\"Vectors\\\", \\\"[\\\", RowBox[{\\\"n\\\", \\\",\\\", \
TemplateBox[List[], \\\"Integers\\\"]}], \\\"]\\\"}]}]\\) is not a valid \
variable specification.\"", 2, 137, 35, 19440831192786232088, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8662167571186953`*^9},
 CellLabel->
  "During evaluation of \
In[137]:=",ExpressionUUID->"6a635e6f-5b64-4653-86bc-d853896e4ba3"],

Cell[BoxData[
 RowBox[{"LinearOptimization", "[", 
  RowBox[{
   RowBox[{"-", 
    RowBox[{"Total", "[", 
     RowBox[{"u", "+", "v"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"u", "+", "v"}], "\[VectorLessEqual]", "1"}], ",", 
     RowBox[{"u", "\[VectorGreaterEqual]", "0"}], ",", 
     RowBox[{"v", "\[VectorGreaterEqual]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"u", "\[Element]", 
      RowBox[{"Vectors", "[", 
       RowBox[{"n", ",", 
        TemplateBox[{},
         "Integers"]}], "]"}]}], ",", 
     RowBox[{"v", "\[Element]", 
      RowBox[{"Vectors", "[", 
       RowBox[{"n", ",", 
        TemplateBox[{},
         "Integers"]}], "]"}]}]}], "}"}]}], "]"}]], "Output",
 CellChangeTimes->{3.866216758264598*^9},
 CellLabel->
  "Out[137]=",ExpressionUUID->"6989edbd-d2bb-4af5-bfea-0449ef660433"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"LinearOptimization", "[", 
  RowBox[{
   RowBox[{"-", "objective"}], ",", "constraints", ",", "variables"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.866215438809125*^9, 
  3.866215451039036*^9}},ExpressionUUID->"bd0754e3-4afc-4bc1-81e8-\
047e0ce654f0"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"VertexCut", "[", 
    RowBox[{
     RowBox[{"g_", "?", "DirectedGraphQ"}], ",", "s_", ",", "t_"}], "]"}], 
   " ", "/;", " ", 
   RowBox[{
    RowBox[{"VertexQ", "[", 
     RowBox[{"g", ",", "s"}], "]"}], "&&", 
    RowBox[{"VertexQ", "[", 
     RowBox[{"g", ",", "t"}], "]"}]}]}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "res", ",", "n", ",", "m", ",", "a", ",", "b", ",", "u", ",", "v", ",", 
      "i", ",", "j"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"n", "=", 
      RowBox[{"VertexCount", "[", "g", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"m", "=", 
      RowBox[{"Transpose", "[", 
       RowBox[{"IncidenceMatrix", "[", "g", "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"a", "=", 
      RowBox[{"UnitStep", "[", 
       RowBox[{"m", "-", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"b", "=", 
      RowBox[{"a", "-", "m"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"i", "=", 
      RowBox[{"VertexIndex", "[", 
       RowBox[{"g", ",", "s"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"j", "=", 
      RowBox[{"VertexIndex", "[", 
       RowBox[{"g", ",", "t"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"res", "=", 
      RowBox[{"LinearOptimization", "[", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Total", "[", 
          RowBox[{"u", "+", "v"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"u", "+", "v"}], " ", "\[VectorLessEqual]", "1"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"a", ".", "u"}], " ", "+", 
            RowBox[{"b", ".", "v"}]}], "\[VectorLessEqual]", "1"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"a", ".", "v"}], " ", "+", 
            RowBox[{"b", ".", "u"}]}], "\[VectorLessEqual]", "1"}], ",", 
          RowBox[{
           RowBox[{"Total", "[", "u", "]"}], "\[VectorGreaterEqual]", "1"}], 
          ",", 
          RowBox[{
           RowBox[{"Total", "[", "v", "]"}], "\[VectorGreaterEqual]", "1"}], 
          ",", 
          RowBox[{"u", "\[VectorGreaterEqual]", "0"}], ",", 
          RowBox[{"v", "\[VectorGreaterEqual]", "0"}], ",", 
          RowBox[{"u", "\[VectorLessEqual]", "1"}], ",", 
          RowBox[{"v", "\[VectorLessEqual]", "1"}], ",", 
          RowBox[{
           RowBox[{"Indexed", "[", 
            RowBox[{"u", ",", "i"}], "]"}], "\[Equal]", "1"}], ",", 
          RowBox[{
           RowBox[{"Indexed", "[", 
            RowBox[{"u", ",", "j"}], "]"}], "\[Equal]", "0"}], ",", 
          RowBox[{
           RowBox[{"Indexed", "[", 
            RowBox[{"v", ",", "i"}], "]"}], "\[Equal]", "0"}], ",", 
          RowBox[{
           RowBox[{"Indexed", "[", 
            RowBox[{"v", ",", "j"}], "]"}], "\[Equal]", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"u", "\[Element]", 
           RowBox[{"Vectors", "[", 
            RowBox[{"n", ",", "Integers"}], "]"}]}], ",", 
          RowBox[{"v", "\[Element]", 
           RowBox[{"Vectors", "[", 
            RowBox[{"n", ",", "Integers"}], "]"}]}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"VertexList", "[", "g", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Position", "[", 
         RowBox[{
          RowBox[{"Total", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"u", ",", "v"}], "}"}], " ", "/.", " ", "res"}], "]"}], 
          ",", "0"}], "]"}], "]"}], "]"}], "]"}]}]}], " ", 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.819726601773953*^9, 3.8197266908177547`*^9}, {
   3.819726722491035*^9, 3.819726746846274*^9}, {3.819726790339477*^9, 
   3.819726819157341*^9}, {3.819726855042575*^9, 3.8197269296581497`*^9}, {
   3.819728614553973*^9, 3.8197286483685904`*^9}, 3.819728723487411*^9},
 CellLabel->"In[20]:=",ExpressionUUID->"3011b6b1-17bc-4ec0-9bcd-b2ecb8c7cf5d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"VertexCut", "[", 
  RowBox[{"RandomGraph", "[", 
   RowBox[{"{", 
    RowBox[{"5", ",", "10"}], "}"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.866126841966978*^9, 3.8661268523129177`*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"9f3a2d0e-a357-4865-8bed-82c963a212ca"],

Cell[BoxData[
 TemplateBox[{
  "LinearOptimization", "nsolc", 
   "\"There are no points that satisfy the constraints.\"", 2, 21, 11, 
   19440272839142997566, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8661268539279766`*^9},
 CellLabel->
  "During evaluation of \
In[21]:=",ExpressionUUID->"334ba7e1-ea36-43fc-b080-2a92dc3af960"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{3.8661268540635104`*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"1fa4e954-3933-47ee-9dce-89caff162d3e"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Example", "Section",
 CellChangeTimes->{{3.8197269612806807`*^9, 3.819726962548319*^9}, {
  3.819728678815297*^9, 3.819728706418914*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"edges", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"start", "\[Rule]", "F201"}], ",", 
     RowBox[{"F201", "\[Rule]", "Q"}], ",", 
     RowBox[{"start", "\[Rule]", "F202"}], ",", 
     RowBox[{"F202", "\[Rule]", "Q"}], ",", 
     RowBox[{"Q", "\[Rule]", "P"}], ",", 
     RowBox[{"start", "\[Rule]", "F203"}], ",", 
     RowBox[{"F203", "\[Rule]", "P"}], ",", 
     RowBox[{"P", "\[Rule]", "B21"}], ",", 
     RowBox[{"F203", "\[Rule]", "B21"}], ",", 
     RowBox[{"start", "\[Rule]", "F204"}], ",", 
     RowBox[{"F204", "\[Rule]", "B21"}], ",", 
     RowBox[{"start", "\[Rule]", "F205"}], ",", 
     RowBox[{"F205", "\[Rule]", "B21"}], ",", 
     RowBox[{"start", "\[Rule]", "F206"}], ",", 
     RowBox[{"F206", "\[Rule]", "B21"}], ",", 
     RowBox[{"start", "\[Rule]", "F207"}], ",", 
     RowBox[{"F207", "\[Rule]", "C21"}], ",", 
     RowBox[{"C211", "\[Rule]", "C21"}], ",", 
     RowBox[{"F207", "\[Rule]", "C211"}], ",", 
     RowBox[{"C212", "\[Rule]", "C21"}], ",", 
     RowBox[{"start", "\[Rule]", "C213"}], ",", 
     RowBox[{"C213", "\[Rule]", "C21"}], ",", 
     RowBox[{"C21", "\[Rule]", "B21"}], ",", 
     RowBox[{"B21", "\[Rule]", "H21"}], ",", 
     RowBox[{"C21", "\[Rule]", "H21"}], ",", 
     RowBox[{"H21", "\[Rule]", "H211"}], ",", 
     RowBox[{"start", "\[Rule]", "FH211"}], ",", 
     RowBox[{"FH211", "\[Rule]", "H211"}], ",", 
     RowBox[{"C211", "\[Rule]", "H211"}], ",", 
     RowBox[{"H211", "\[Rule]", "IH2111"}], ",", 
     RowBox[{"IH2111", "\[Rule]", "goal"}], ",", 
     RowBox[{"start", "\[Rule]", "L21"}], ",", 
     RowBox[{"L21", "\[Rule]", "C21"}], ",", 
     RowBox[{"B21", "\[Rule]", "L21"}], ",", 
     RowBox[{"C21", "\[Rule]", "D1"}], ",", 
     RowBox[{"C212", "\[Rule]", "D1"}], ",", 
     RowBox[{"B21", "\[Rule]", "D1"}], ",", 
     RowBox[{"D1", "\[Rule]", "E22"}], ",", 
     RowBox[{"C211", "\[Rule]", "E22"}], ",", 
     RowBox[{"start", "\[Rule]", "FE22"}], ",", 
     RowBox[{"FE22", "\[Rule]", "E22"}], ",", 
     RowBox[{"E22", "\[Rule]", "E221"}], ",", 
     RowBox[{"start", "\[Rule]", "FE221"}], ",", 
     RowBox[{"FE221", "\[Rule]", "E221"}], ",", 
     RowBox[{"E22", "\[Rule]", "K3123"}], ",", 
     RowBox[{"K3123", "\[Rule]", "goal"}], ",", 
     RowBox[{"E221", "\[Rule]", "MR"}], ",", 
     RowBox[{"MR", "\[Rule]", "goal"}], ",", 
     RowBox[{"B21", "\[Rule]", "G21"}], ",", 
     RowBox[{"start", "\[Rule]", "FG21T1"}], ",", 
     RowBox[{"FG21T1", "\[Rule]", "G21"}], ",", 
     RowBox[{"start", "\[Rule]", "FG21T2"}], ",", 
     RowBox[{"FG21T2", "\[Rule]", "G21"}], ",", 
     RowBox[{"G21", "\[Rule]", "G211"}], ",", 
     RowBox[{"G211", "\[Rule]", "X"}], ",", 
     RowBox[{"X", "\[Rule]", "goal"}], ",", 
     RowBox[{"B21", "\[Rule]", "K31"}], ",", 
     RowBox[{"C21", "\[Rule]", "K31"}], ",", 
     RowBox[{"C212", "\[Rule]", "K31"}], ",", 
     RowBox[{"K31", "\[Rule]", "K3111"}], ",", 
     RowBox[{"K3111", "\[Rule]", "Y"}], ",", 
     RowBox[{"Y", "\[Rule]", "goal"}], ",", 
     RowBox[{"B21", "\[Rule]", "J31"}], ",", 
     RowBox[{"C21", "\[Rule]", "J31"}], ",", 
     RowBox[{"C211", "\[Rule]", "J31"}], ",", 
     RowBox[{"start", "\[Rule]", "FJ311"}], ",", 
     RowBox[{"FJ311", "\[Rule]", "J31"}], ",", 
     RowBox[{"start", "\[Rule]", "FJ312"}], ",", 
     RowBox[{"FJ312", "\[Rule]", "J31"}], ",", 
     RowBox[{"J31", "\[Rule]", "J311"}], ",", 
     RowBox[{"J311", "\[Rule]", "goal"}], ",", 
     RowBox[{"B21", "\[Rule]", "J32"}], ",", 
     RowBox[{"C21", "\[Rule]", "J32"}], ",", 
     RowBox[{"C211", "\[Rule]", "J32"}], ",", 
     RowBox[{"start", "\[Rule]", "FJ32"}], ",", 
     RowBox[{"FJ32", "\[Rule]", "J32"}], ",", 
     RowBox[{"J32", "\[Rule]", "J321"}], ",", 
     RowBox[{"J321", "\[Rule]", "goal"}], ",", 
     RowBox[{"B21", "\[Rule]", "R201"}], ",", 
     RowBox[{"R201", "\[Rule]", "Z"}], ",", 
     RowBox[{"Z", "\[Rule]", "goal"}], ",", 
     RowBox[{"P", "\[Rule]", "T1"}], ",", 
     RowBox[{"F204", "\[Rule]", "T1"}], ",", 
     RowBox[{"F206", "\[Rule]", "T1"}], ",", 
     RowBox[{"T1", "\[Rule]", "R201"}], ",", 
     RowBox[{"R201", "\[Rule]", "AQ"}], ",", 
     RowBox[{"AQ", "\[Rule]", "goal"}], ",", 
     RowBox[{"T1", "\[Rule]", "U1"}], ",", 
     RowBox[{"F208", "\[Rule]", "U1"}], ",", 
     RowBox[{"U1", "\[Rule]", "U11"}], ",", 
     RowBox[{"U11", "\[Rule]", "RE"}], ",", 
     RowBox[{"RE", "\[Rule]", "goal"}], ",", 
     RowBox[{"T1", "\[Rule]", "U2"}], ",", 
     RowBox[{"F208", "\[Rule]", "U2"}], ",", 
     RowBox[{"U2", "\[Rule]", "U21"}], ",", 
     RowBox[{"U21", "\[Rule]", "TY"}], ",", 
     RowBox[{"TY", "\[Rule]", "goal"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.819717881980671*^9, {3.819717977697057*^9, 3.819717983903586*^9}},
 CellLabel->"In[7]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"g", "=", 
   RowBox[{"Graph", "[", "edges", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.819717987291169*^9, 3.819718027788148*^9}, 
   3.819725111612752*^9},
 CellLabel->"In[8]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"a", "=", 
  RowBox[{"VertexCut", "[", 
   RowBox[{"g", ",", "start", ",", "goal"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8197269940576487`*^9, 3.8197270427924423`*^9}, {
  3.819728792203307*^9, 3.819728792489235*^9}},
 CellLabel->"In[9]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "B21", ",", "H211", ",", "E22", ",", "E221", ",", "G21", ",", "K3111", ",", 
   "J31", ",", "J32", ",", "T1"}], "}"}]], "Output",
 CellChangeTimes->{{3.819727019171832*^9, 3.8197270437564077`*^9}, 
   3.819728792807263*^9, 3.819729502162056*^9, 3.819730507840884*^9},
 CellLabel->"Out[9]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "a", "]"}]], "Input",
 CellChangeTimes->{{3.819727038383844*^9, 3.81972704696681*^9}},
 CellLabel->"In[10]:="],

Cell[BoxData["9"], "Output",
 CellChangeTimes->{3.819727047296259*^9, 3.819728799621559*^9, 
  3.81972950470704*^9, 3.819730507849934*^9},
 CellLabel->"Out[10]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"VertexConnectivity", "[", 
  RowBox[{"g", ",", "start", ",", "goal"}], "]"}]], "Input",
 CellChangeTimes->{{3.819727049319991*^9, 3.819727058019623*^9}},
 CellLabel->"In[11]:="],

Cell[BoxData["9"], "Output",
 CellChangeTimes->{3.8197270583360786`*^9, 3.819728800317339*^9, 
  3.8197295054949903`*^9, 3.81973050787859*^9},
 CellLabel->"Out[11]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"VertexDelete", "[", 
  RowBox[{"g", ",", "a"}], "]"}]], "Input",
 CellChangeTimes->{{3.819727061990497*^9, 3.819727067475966*^9}},
 CellLabel->"In[12]:="],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{$CellContext`start, $CellContext`F201, $CellContext`Q, \
$CellContext`F202, $CellContext`P, $CellContext`F203, $CellContext`F204, \
$CellContext`F205, $CellContext`F206, $CellContext`F207, $CellContext`C21, \
$CellContext`C211, $CellContext`C212, $CellContext`C213, $CellContext`H21, \
$CellContext`FH211, $CellContext`IH2111, $CellContext`goal, $CellContext`L21, \
$CellContext`D1, $CellContext`FE22, $CellContext`FE221, $CellContext`K3123, \
$CellContext`MR, $CellContext`FG21T1, $CellContext`FG21T2, $CellContext`G211, \
$CellContext`X, $CellContext`K31, $CellContext`Y, $CellContext`FJ311, \
$CellContext`FJ312, $CellContext`J311, $CellContext`FJ32, $CellContext`J321, \
$CellContext`R201, $CellContext`Z, $CellContext`AQ, $CellContext`U1, \
$CellContext`F208, $CellContext`U11, $CellContext`RE, $CellContext`U2, \
$CellContext`U21, $CellContext`TY}, {{{1, 2}, {2, 3}, {1, 4}, {4, 3}, {3, 
       5}, {1, 6}, {6, 5}, {1, 7}, {1, 8}, {1, 9}, {1, 10}, {10, 11}, {12, 
       11}, {10, 12}, {13, 11}, {1, 14}, {14, 11}, {11, 15}, {1, 16}, {17, 
       18}, {1, 19}, {19, 11}, {11, 20}, {13, 20}, {1, 21}, {1, 22}, {23, 
       18}, {24, 18}, {1, 25}, {1, 26}, {27, 28}, {28, 18}, {11, 29}, {13, 
       29}, {30, 18}, {1, 31}, {1, 32}, {33, 18}, {1, 34}, {35, 18}, {36, 
       37}, {37, 18}, {36, 38}, {38, 18}, {40, 39}, {39, 41}, {41, 42}, {42, 
       18}, {40, 43}, {43, 44}, {44, 45}, {45, 18}}, Null}]]}, 
    TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1: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
AknpZ8tdpgwavZhoC8Ei6BoevMDRicF/ANkvqs4=
       "], {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.012478444145574133`], 
         ArrowBox[{1, 2}, 0.08485342019953365], 
         ArrowBox[{1, 4}, 0.08485342019953365], 
         ArrowBox[BezierCurveBox[{1, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 
          62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 6}],
           0.08485342019953365], ArrowBox[{1, 7}, 0.08485342019953365], 
         ArrowBox[{1, 8}, 0.08485342019953365], 
         ArrowBox[{1, 9}, 0.08485342019953365], 
         ArrowBox[{1, 10}, 0.08485342019953365], 
         ArrowBox[{1, 14}, 0.08485342019953365], 
         ArrowBox[{1, 16}, 0.08485342019953365], 
         ArrowBox[BezierCurveBox[{1, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 
          88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 
          19}], 0.08485342019953365], ArrowBox[{1, 21}, 0.08485342019953365], 
         ArrowBox[{1, 22}, 0.08485342019953365], 
         ArrowBox[{1, 25}, 0.08485342019953365], 
         ArrowBox[{1, 26}, 0.08485342019953365], 
         ArrowBox[{1, 31}, 0.08485342019953365], 
         ArrowBox[{1, 32}, 0.08485342019953365], 
         ArrowBox[{1, 34}, 0.08485342019953365], 
         ArrowBox[{2, 3}, 0.08485342019953365], 
         ArrowBox[{3, 5}, 0.08485342019953365], 
         ArrowBox[{4, 3}, 0.08485342019953365], 
         ArrowBox[{6, 5}, 0.08485342019953365], 
         ArrowBox[BezierCurveBox[{10, 104, 105, 106, 107, 108, 109, 110, 111, 
          112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 
          125, 126, 127, 128, 129, 11}], 0.08485342019953365], 
         ArrowBox[{10, 12}, 0.08485342019953365], 
         ArrowBox[{11, 15}, 0.08485342019953365], 
         ArrowBox[{11, 20}, 0.08485342019953365], 
         ArrowBox[{11, 29}, 0.08485342019953365], 
         ArrowBox[{12, 11}, 0.08485342019953365], 
         ArrowBox[{13, 11}, 0.08485342019953365], 
         ArrowBox[BezierCurveBox[{13, 130, 131, 132, 133, 134, 135, 136, 137, 
          138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 
          151, 152, 153, 154, 155, 20}], 0.08485342019953365], 
         ArrowBox[BezierCurveBox[{13, 156, 157, 158, 159, 160, 161, 162, 163, 
          164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 
          177, 178, 179, 180, 181, 29}], 0.08485342019953365], 
         ArrowBox[BezierCurveBox[{14, 182, 183, 184, 185, 186, 187, 188, 189, 
          190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 
          203, 204, 205, 206, 207, 11}], 0.08485342019953365], 
         ArrowBox[{17, 18}, 0.08485342019953365], 
         ArrowBox[{19, 11}, 0.08485342019953365], 
         ArrowBox[{23, 18}, 0.08485342019953365], 
         ArrowBox[{24, 18}, 0.08485342019953365], 
         ArrowBox[{27, 28}, 0.08485342019953365], 
         ArrowBox[{28, 18}, 0.08485342019953365], 
         ArrowBox[{30, 18}, 0.08485342019953365], 
         ArrowBox[{33, 18}, 0.08485342019953365], 
         ArrowBox[{35, 18}, 0.08485342019953365], 
         ArrowBox[{36, 37}, 0.08485342019953365], 
         ArrowBox[{36, 38}, 0.08485342019953365], 
         ArrowBox[{37, 18}, 0.08485342019953365], 
         ArrowBox[{38, 18}, 0.08485342019953365], 
         ArrowBox[{39, 41}, 0.08485342019953365], 
         ArrowBox[{40, 39}, 0.08485342019953365], 
         ArrowBox[{40, 43}, 0.08485342019953365], 
         ArrowBox[{41, 42}, 0.08485342019953365], 
         ArrowBox[{42, 18}, 0.08485342019953365], 
         ArrowBox[{43, 44}, 0.08485342019953365], 
         ArrowBox[{44, 45}, 0.08485342019953365], 
         ArrowBox[{45, 18}, 0.08485342019953365]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.08485342019953365], DiskBox[2, 0.08485342019953365], 
         DiskBox[3, 0.08485342019953365], DiskBox[4, 0.08485342019953365], 
         DiskBox[5, 0.08485342019953365], DiskBox[6, 0.08485342019953365], 
         DiskBox[7, 0.08485342019953365], DiskBox[8, 0.08485342019953365], 
         DiskBox[9, 0.08485342019953365], DiskBox[10, 0.08485342019953365], 
         DiskBox[11, 0.08485342019953365], DiskBox[12, 0.08485342019953365], 
         DiskBox[13, 0.08485342019953365], DiskBox[14, 0.08485342019953365], 
         DiskBox[15, 0.08485342019953365], DiskBox[16, 0.08485342019953365], 
         DiskBox[17, 0.08485342019953365], DiskBox[18, 0.08485342019953365], 
         DiskBox[19, 0.08485342019953365], DiskBox[20, 0.08485342019953365], 
         DiskBox[21, 0.08485342019953365], DiskBox[22, 0.08485342019953365], 
         DiskBox[23, 0.08485342019953365], DiskBox[24, 0.08485342019953365], 
         DiskBox[25, 0.08485342019953365], DiskBox[26, 0.08485342019953365], 
         DiskBox[27, 0.08485342019953365], DiskBox[28, 0.08485342019953365], 
         DiskBox[29, 0.08485342019953365], DiskBox[30, 0.08485342019953365], 
         DiskBox[31, 0.08485342019953365], DiskBox[32, 0.08485342019953365], 
         DiskBox[33, 0.08485342019953365], DiskBox[34, 0.08485342019953365], 
         DiskBox[35, 0.08485342019953365], DiskBox[36, 0.08485342019953365], 
         DiskBox[37, 0.08485342019953365], DiskBox[38, 0.08485342019953365], 
         DiskBox[39, 0.08485342019953365], DiskBox[40, 0.08485342019953365], 
         DiskBox[41, 0.08485342019953365], DiskBox[42, 0.08485342019953365], 
         DiskBox[43, 0.08485342019953365], DiskBox[44, 0.08485342019953365], 
         DiskBox[45, 0.08485342019953365]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.819727067953204*^9, 3.8197288010218573`*^9, 
  3.819729506341056*^9, 3.819730507938242*^9},
 CellLabel->"Out[12]="]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Bug in Weights", "Section",
 CellChangeTimes->{{3.8665595979038053`*^9, 
  3.866559600968639*^9}},ExpressionUUID->"b7cc79d2-4b80-451e-b48b-\
3f3239594892"],

Cell[BoxData[
 RowBox[{"\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"RandomWeightedMixedGraph", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"vertices_", ",", "edges_"}], "}"}], ",", "threshold_", ",", 
        "randomFunction_"}], "]"}], "/;", 
      RowBox[{"0", "<=", "threshold", "<=", "1"}]}], ":=", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"replaceCount", ",", "randomGraph"}], "}"}], " ", ",", 
       RowBox[{
        RowBox[{"randomGraph", "=", 
         RowBox[{"RandomGraph", "[", 
          RowBox[{"{", 
           RowBox[{"vertices", ",", "edges"}], "}"}], "]"}]}], ";", 
        RowBox[{"replaceCount", "=", 
         RowBox[{"Floor", "[", 
          RowBox[{"threshold", " ", "edges"}], "]"}]}], ";", 
        RowBox[{"randomGraph", "=", 
         RowBox[{"Graph", "[", 
          RowBox[{"Fold", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"EdgeAdd", "[", 
              RowBox[{
               RowBox[{"EdgeDelete", "[", 
                RowBox[{"#1", ",", "#2"}], "]"}], ",", 
               RowBox[{
                RowBox[{"First", "[", "#2", "]"}], "\[DirectedEdge]", 
                RowBox[{"Last", "[", "#2", "]"}]}]}], "]"}], "&"}], ",", 
            "randomGraph", ",", 
            RowBox[{"RandomSample", "[", 
             RowBox[{
              RowBox[{"EdgeList", "[", "randomGraph", "]"}], ",", 
              "replaceCount"}], "]"}]}], "]"}], "]"}]}], ";", 
        RowBox[{"Graph", "[", 
         RowBox[{"randomGraph", ",", 
          RowBox[{"EdgeWeight", "->", 
           RowBox[{"(", 
            RowBox[{"Map", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"#", "->", 
                RowBox[{"randomFunction", "[", "]"}]}], "&"}], ",", 
              RowBox[{"EdgeList", "[", "randomGraph", "]"}]}], "]"}], 
            ")"}]}]}], "]"}]}]}], "]"}]}], ";"}], "\n"}]}]], "Input",
 CellChangeTimes->{
  3.866559603740308*^9, {3.866559735629257*^9, 3.866559782847856*^9}, {
   3.866559816250323*^9, 3.866559851941145*^9}, {3.8665599521854444`*^9, 
   3.8665599591513405`*^9}, {3.8665599955970993`*^9, 3.866559997284591*^9}, {
   3.8665600613651323`*^9, 3.8665600684477196`*^9}, {3.8665601083897142`*^9, 
   3.8665601151464615`*^9}, {3.86656018156808*^9, 3.866560185718728*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"38bb22ad-3f9a-4ce3-a17d-bd2778e4a200"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"RandomReal", "[", 
    RowBox[{"{", 
     RowBox[{"1", ",", "5"}], "}"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "54"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.866559632136095*^9, 3.866559650826559*^9}, {
  3.8665597031862135`*^9, 3.8665597177458215`*^9}, {3.866559906380462*^9, 
  3.8665599396251664`*^9}},ExpressionUUID->"71731e92-6190-4b53-bc69-\
277e33c94e64"],

Cell[BoxData[
 TemplateBox[{
  "Table", "nliter", 
   "\"Non-list iterator \\!\\(\\*RowBox[{RowBox[{\\\"RandomReal\\\", \
\\\"[\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \\\",\\\", \
\\\"5\\\"}], \\\"}\\\"}], \\\",\\\", \\\"#1\\\"}], \\\"]\\\"}], \
\\\"&\\\"}]\\) at position \\!\\(\\*RowBox[{\\\"2\\\"}]\\) does not evaluate \
to a real numeric value.\"", 2, 42, 5, 19443120556376979017, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.866559911315129*^9},
 CellLabel->
  "During evaluation of \
In[42]:=",ExpressionUUID->"ac9dac1c-c9a6-4cea-82bb-891631ba8423"],

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{"\[ScriptCapitalG]", ",", 
   RowBox[{
    RowBox[{"RandomReal", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "5"}], "}"}], ",", "#1"}], "]"}], "&"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "54"}], "}"}]}], "]"}]], "Output",
 CellChangeTimes->{3.8665599120070453`*^9},
 CellLabel->"Out[42]=",ExpressionUUID->"0b79d1c1-e6b0-4b11-a168-2dedd0505737"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Thread", "[", 
  RowBox[{"EdgeList", "->", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"randomFunction", "[", "k", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", 
       RowBox[{"EdgeCount", "[", "randomGraph", "]"}]}], "}"}]}], "]"}]}], 
  "]"}]], "Input",ExpressionUUID->"b2c11055-734b-4b4a-83e2-327cbc5fb847"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RandomReal", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "5"}], "}"}], ",", "#"}], "]"}], "&"}], "[", "54", 
  "]"}]], "Input",
 CellChangeTimes->{{3.8665599794445496`*^9, 3.866559986292*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"e236ad7d-0e64-44e2-91b9-f52af7fb7807"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2.379355171206746`", ",", "4.483271118729053`", ",", "2.555791186666778`", 
   ",", "4.7330956087652325`", ",", "3.813355342247374`", ",", 
   "2.451702852527756`", ",", "4.295371978215662`", ",", 
   "4.0243652029939465`", ",", "1.4431027055235788`", ",", 
   "1.3556521314180419`", ",", "4.135968126884218`", ",", 
   "2.1630498078551046`", ",", "2.619951199558882`", ",", 
   "4.511947067978161`", ",", "2.0209317817444488`", ",", 
   "2.264925347805552`", ",", "1.0025363074976212`", ",", 
   "3.2210062654573663`", ",", "1.8255612145096825`", ",", 
   "4.01603446873124`", ",", "2.7288340729132754`", ",", "4.349307052296685`",
    ",", "2.923170081074127`", ",", "3.027592976026159`", ",", 
   "1.2128748156187719`", ",", "1.0597478126739919`", ",", 
   "4.520968533150698`", ",", "1.0809050827648603`", ",", 
   "2.9693011082525347`", ",", "1.0424459867966664`", ",", 
   "4.455235193370499`", ",", "2.105125918314969`", ",", 
   "2.5117954840446197`", ",", "2.8844589294322`", ",", "2.3959866863114163`",
    ",", "2.069812008862802`", ",", "4.308199607822689`", ",", 
   "3.8592269069251497`", ",", "3.9057625715782143`", ",", 
   "3.248283070105699`", ",", "2.831657738877759`", ",", "4.31984310770883`", 
   ",", "2.931767064446947`", ",", "1.5929614177338784`", ",", 
   "3.6745738314867715`", ",", "4.6363792119609615`", ",", 
   "2.8327673252954026`", ",", "1.9545532671244077`", ",", 
   "1.9467629056349267`", ",", "3.4060161622512766`", ",", 
   "3.3753510311921824`", ",", "2.3177399395707283`", ",", 
   "1.0936777495928576`", ",", "3.498593795281945`"}], "}"}]], "Output",
 CellChangeTimes->{3.866559986573246*^9},
 CellLabel->"Out[43]=",ExpressionUUID->"6d399696-5a89-4b6b-a411-bf8dcf482f33"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Fixing all the edge weights", "Section",
 CellChangeTimes->{{3.866560002235055*^9, 3.8665600568241525`*^9}, {
  3.866560205527134*^9, 
  3.866560211088371*^9}},ExpressionUUID->"f75ee31f-6913-4b57-8923-\
d9d1bf4f72b3"],

Cell[BoxData[
 RowBox[{"\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"RandomWeightedMixedGraph", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"vertices_", ",", "edges_"}], "}"}], ",", "threshold_", ",", 
        "randomFunction_"}], "]"}], "/;", 
      RowBox[{"0", "<=", "threshold", "<=", "1"}]}], ":=", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"replaceCount", ",", "randomGraph"}], "}"}], " ", ",", 
       RowBox[{
        RowBox[{"randomGraph", "=", 
         RowBox[{"RandomGraph", "[", 
          RowBox[{"{", 
           RowBox[{"vertices", ",", "edges"}], "}"}], "]"}]}], ";", 
        RowBox[{"replaceCount", "=", 
         RowBox[{"Floor", "[", 
          RowBox[{"threshold", " ", "edges"}], "]"}]}], ";", 
        RowBox[{"randomGraph", "=", 
         RowBox[{"Graph", "[", 
          RowBox[{"Fold", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"EdgeAdd", "[", 
              RowBox[{
               RowBox[{"EdgeDelete", "[", 
                RowBox[{"#1", ",", "#2"}], "]"}], ",", 
               RowBox[{
                RowBox[{"First", "[", "#2", "]"}], "\[DirectedEdge]", 
                RowBox[{"Last", "[", "#2", "]"}]}]}], "]"}], "&"}], ",", 
            "randomGraph", ",", 
            RowBox[{"RandomSample", "[", 
             RowBox[{
              RowBox[{"EdgeList", "[", "randomGraph", "]"}], ",", 
              "replaceCount"}], "]"}]}], "]"}], "]"}]}], ";", 
        RowBox[{"Graph", "[", 
         RowBox[{"randomGraph", ",", 
          RowBox[{"EdgeWeight", "->", 
           RowBox[{"(", 
            RowBox[{"Map", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"#", "->", 
                RowBox[{"randomFunction", "[", "]"}]}], "&"}], ",", 
              RowBox[{"EdgeList", "[", "randomGraph", "]"}]}], "]"}], 
            ")"}]}]}], "]"}]}]}], "]"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"RandomWeightedMixedGraph", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"vertices_", ",", "edges_"}], "}"}], ",", "threshold_", ",", 
       "randomFunction_", ",", 
       RowBox[{"k_", "?", "IntegerQ"}]}], "]"}], "/;", 
     RowBox[{"0", "<=", "threshold", "<=", "1"}]}], ":=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"RandomWeightedMixedGraph", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"vertices", ",", "edges"}], "}"}], ",", "threshold", ",", 
        "randomFunction"}], "]"}], ",", "k"}], "]"}]}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"RandomWeightedMixedGraph", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"vertices_", ",", "edges_"}], "}"}], ",", "threshold_", ",", 
       "randomFunction_", ",", "array_List"}], "]"}], "/;", 
     RowBox[{"0", "<=", "threshold", "<=", "1"}]}], ":=", 
    RowBox[{"Array", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"RandomWeightedMixedGraph", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"vertices", ",", "edges"}], "}"}], ",", "threshold", ",", 
         "randomFunction"}], "]"}], "&"}], ",", "array"}], "]"}]}], "\n", 
   "\n", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"RandomWeightedMixedGraph", "[", 
       RowBox[{
       "graphDistribution_", ",", "threshold_", ",", "randomFunction_"}], 
       "]"}], "/;", 
      RowBox[{"0", "<=", "threshold", "<=", "1"}]}], ":=", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"replaceCount", ",", "randomGraph"}], "}"}], " ", ",", 
       RowBox[{
        RowBox[{"randomGraph", "=", 
         RowBox[{"RandomGraph", "[", "graphDistribution", "]"}]}], ";", 
        RowBox[{"replaceCount", "=", 
         RowBox[{"Floor", "[", 
          RowBox[{"threshold", " ", 
           RowBox[{"EdgeCount", "[", "randomGraph", "]"}]}], "]"}]}], ";", 
        RowBox[{"randomGraph", "=", 
         RowBox[{"Graph", "[", 
          RowBox[{"Fold", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"EdgeAdd", "[", 
              RowBox[{
               RowBox[{"EdgeDelete", "[", 
                RowBox[{"#1", ",", "#2"}], "]"}], ",", 
               RowBox[{
                RowBox[{"First", "[", "#2", "]"}], "\[DirectedEdge]", 
                RowBox[{"Last", "[", "#2", "]"}]}]}], "]"}], "&"}], ",", 
            "randomGraph", ",", 
            RowBox[{"RandomSample", "[", 
             RowBox[{
              RowBox[{"EdgeList", "[", "randomGraph", "]"}], ",", 
              "replaceCount"}], "]"}]}], "]"}], "]"}]}], ";", 
        RowBox[{"Graph", "[", 
         RowBox[{"randomGraph", ",", 
          RowBox[{"EdgeWeight", "->", 
           RowBox[{"(", 
            RowBox[{"Map", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"#", "->", 
                RowBox[{"randomFunction", "[", "]"}]}], "&"}], ",", 
              RowBox[{"EdgeList", "[", "randomGraph", "]"}]}], "]"}], 
            ")"}]}]}], "]"}]}]}], "]"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"RandomWeightedMixedGraph", "[", 
      RowBox[{
      "graphDistribution_", ",", "threshold_", ",", "randomFunction_", ",", 
       RowBox[{"k_", "?", "IntegerQ"}]}], "]"}], "/;", 
     RowBox[{
      RowBox[{"0", "<=", "threshold", "<=", "1"}], "\[And]", 
      RowBox[{"k", ">=", "1"}]}]}], ":=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"RandomWeightedMixedGraph", "[", 
       RowBox[{"graphDistribution", ",", "threshold", ",", "randomFunction"}],
        "]"}], ",", "k"}], "]"}]}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"RandomWeightedMixedGraph", "[", 
      RowBox[{
      "graphDistribution_", ",", "threshold_", ",", "randomFunction_", ",", 
       "array_List"}], "]"}], "/;", 
     RowBox[{"0", "<=", "threshold", "<=", "1"}]}], ":=", 
    RowBox[{"Array", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"RandomWeightedMixedGraph", "[", 
        RowBox[{
        "graphDistribution", ",", "threshold", ",", "randomFunction"}], "]"}],
        "&"}], ",", "array"}], "]"}]}], "\n", "\n"}]}]], "Input",
 CellChangeTimes->{{3.8665602143119802`*^9, 3.8665602681137476`*^9}, {
  3.866560350902775*^9, 3.8665604009496174`*^9}, {3.866560500366765*^9, 
  3.866560574905794*^9}, {3.8665606786406713`*^9, 3.8665607080782304`*^9}, {
  3.8665607397670774`*^9, 3.8665607744339266`*^9}},
 CellLabel->
  "In[109]:=",ExpressionUUID->"c627857e-901c-47ae-8869-b69c525e1cd2"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Constraints", "Section",
 CellChangeTimes->{{3.866561035470435*^9, 
  3.866561036722001*^9}},ExpressionUUID->"04b8a6c1-48fe-40a2-974f-\
3fb1c87f028f"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsnQW4FdXXh2lBkFBAQKSVBunuki6RBklBQqSVRkBACUFQpFMJUUFAaSVE
QkoBKSWULmkQ5nv/sx72M9/MOYd74d7LPbB+D9xnzp49e3au9e6ZPTNpm79d
q3W0KFGidInNn1rNepTq3LnZu7UT8qNOxy5t3+zYqmXFjl1bvdmqc8Hm0QnM
wp/x/P/f9lGVSqVSqVQqVaRXnvwFCxQuUrhYiWIlS5csU65M+YrlK1auWKX6
k/nvtEqlUqlUKpUq0itfwcKFihYrWqJUidLlSpd/tfyrlV+tXK1y9VpP5r8L
KpVKpVKpVKpIr/yF7AuwpcqUKlO+TIWKFSpVrVS1RtWatZ/Mf5dVKpVKpVKp
VJFeBQoXLVK8ZPHSZUuXq1Du1Ur/uwBbrWa1WnWezH/XVCqVSqVSqVSRXgWL
2EsIypQtU+7VcvYK2CrVa1Wv/fqT+e+mSqVSqVQqlSrSq1DR4sX+R7D2M1yV
qvxvCUGN2jVeq/tk/rutUqlUKpVKpYr0+h/Blixdsmz5shUqVahc9X9LCGq+
VrNOvSfz338qlUqlUqlUqkgvJVjnv7sqlUqlUqlUqkivwsVKFC9VptT/HuOq
/GqVav9bBFurTq3X6z+Z/x51a6hUKpVKpVKp7i8lWCVYlUqlUqlUquCSEqzz
n6VSqVQqlUqlivRSglWCValUKpVKpQouKcEqwapUKpVKpVIFl5RglWBVKpVK
pVKpgktKsEqwKpVKpVKpVMElJVglWJVKpVKpVKrgkhKsEqxKpVKpVCpVcEkJ
VglWpVKpVCqVKrikBKsEq1KpVCqVShVcUoJVglWpVCqVSqUKLinBKsGqVCqV
SqVSBZeUYB8ngjUfCw5htJDHfLD8HDp0aIsvnT179sESfHht3bqVDFy5ciVU
Rx05coSjDh8+HIY5OXfunM/KOXjwoInzkPWvUqlUKtXjKiXYYCHYsWPH5ra1
YcMG714gZ+LEiRkzZowSJUrMmDFr1qy5Z88en+msXLmyWLFiUWwVKVJk+fLl
PqPt3bu3du3asWLFItpLL700YcKEB+CoevXqRfGlmTNnhjapsFLUqFHJwC+/
/BI42pkzZ4DJ3377TX526NCBo5o0aRKGOfnyyy99Vg7Vzt4bN2706tUrWbJk
hCRMmPDNN998hNivUqlUKlVkkxJsUBDskSNHEiVKJISzbNkyb4TRo0cLu+bJ
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
GIJds2aNM01Q1ifBWvewX5QyZUrZtWjRIuv/P2blfZuWvO3BqcaNG8sl2TAh
WPM2LZfu+3SeSqVSqVRPiJRgg4hgp02bNmHCBPPI//Tp0/m5bds2+bl58+ZW
rVrlyZMHWB01apR5bh3sIZrAz1dffTXBI3lbKemwTZqW/QS9NxpnD22GV65c
yYHChD61adOm9u3bk+fatWuPGTPGrCjYvXs3B3799dcmpisETOUn+ZSfa9eu
5edPP/0kPxcsWFChQoVixYqB4n/99ZfkXwhWtmUFxZEjR958803ODpGePHly
1qxZ7JI3MwD/vXv3zps3b40aNajJ9evXs8v58bLly5c3bdqUY+vXrz9lyhSz
omDjxo3ENG/ivXDhgpzR+zatgwcPyi4I2bXrxIkT3vp3Nr1KpVKpVE+4lGCD
iGBVKpVKpVKpVJYSrBKsSqVSqVQqVbBJCVYJVqVSqVQqlSq4pASrBKtSqVQq
lUoVXFKCVYJVqVQqlUqlCi4pwSrBqlQqlUqlUgWXlGCVYFUqlUqlUqmCS0qw
SrAqlUqlUqlUwSUlWCVYlUqlUqlUquCSEqwSrEqlUqlUKlVwSQlWCValUqlU
KpUquKQEqwSrUqlUKpVKFVxSglWCValUKpVKpQouKcEqwapUKpVKpVIFl5Rg
lWBVKpVKpVKpgktKsEqwKpVKpVKpVMElJVglWJVKpVKpVKrgkhKsEqxKpVKp
VCpVcEkJVglWpVKpVCqVKrikBKsEq1KpVCqVShVcUoJVglU9jK5cufKos6CK
IAVo62vXrv33338RmZnwk3bp+yq8mztimuDu3btheCIq5Pr162GVmkoVEinB
KsEGi+7a8oa4AiNMf/zxR9OmTRs3bhyqo6ZPnz5r1qywykOAOnlU1RKkmjhx
4ty5c/3thVi6du2aL18+n7vGjBmTLFmyy5cvh2cGI0JHjx5t06ZNlSpVHnVG
wkYMgffee2/z5s1hmKZp7odhvxm2fO46dOhQixYtXnvttQdOPITatm1b9erV
qZ+HTwp2nTx5cvr06fft2/fwqYWr6BITJkxw2sarV68ePnw4hIczQE6ePCnb
o0ePfmwmrcErJVgl2GDR6tWr33333dy2GjVq1KlTp5YtW7IdJUqUvXv3Rnx+
INgMGTKQk1Adhe/Lnj17WOVh+/bt+KACBQpQD3Xr1m3Xrt3bb7+dJ0+eGDFi
rFy5UuLcvHlz5syZrVq1+vTTT9kOq1M/ZoofPz7V6G8v3NK8efMsWbL43NWx
Y0c64WNAsGfPns2VK1f58uUfdUbCRpgF2oXWCdtkGWIk+zAEmyJFiqxZs/rc
df78+YIFC9asWfOBEw+hgLGUKVOGCcGiDz/8kDqJ/AQ7ZMiQXbt2OUP69euX
KFGiW7duheTwYsWKNWzYULZJp3fv3nqh4NFKCVYJNriEec+WLZszpEOHDr/+
+usjyQy+LLQEe+zYsRMnToRtNl577bUkSZI4jfDQoUMXLVrExunTp7G6VapU
yZw5My6mSZMmYXvqx0ZHjhw5depUgAjTp0/3SbDWPVJ6DAgWDR48+LEhWLRn
z54wvyNPmg9JsIGNAPP0CCBYxFnCimD//fffyE+wP/zwQ/v27V2BV69e/fPP
P0OYgvMaLHrnnXfWrFkTRrlTPYiUYJVgg0vNmjVzXSvbvHkz+PFIMvMABBse
6tOnzwsvvOAMOXDgwI4dO+7evfvGG2+wQQh8C8TGiBHDaYFVIZcSrEr08AQb
WEqw4SGMYdasWf/5558wTPPgwYM5c+bUG1uPUEqwSrDBJRfBYpdOnz79qDJz
X4K9fv169+7dwzsbLoI1dYJp/fvvv034gAED8DLHjh0L7/x4RZZGjRoV8vVm
kVBKsI+lmPx++OGHoTokbAn2xo0b3bp1c4YowYaHli9fXrVq1TBPtlatWt99
912YJ6sKoZRglWCDS06ChYsWL148ceJE83PGjBnY5NatW8+cOdOsUGLjxx9/
ZNdff/3VqVMnUMSy3dDAgQOvXr2Ky27VqtW8efOIBooQgZ+bNm2y7GWBn332
2TvvvCNrSrHP/HzzzTf3798vKbsIlvh9+/bt0KHDgQMH+Em0l156KWnSpJ/Z
gic5xc6dOydNmmQOAXHHjRsneV66dKnJ8/nz5wnHL3z//ffkp127dkePHvVX
Jy6C3b59e//+/b3R2rdv73P1HacYPnw4xZSfs2bN4nCAU37++uuvZA8OJz94
W0Ju375NEQYNGtSlSxdzTWPHjh1E69Gjx9ixY12PJFMKagkHR7LUA9WyatUq
qZMJtsz2uXPnqHn5uX79eo4FCz/66COpn3Xr1vks/oIFC+SQr776ip/8ldQE
42lo2hQqMIRJo1O6Q4cOff3119QtG1T7tm3bpk2bZtI8c+ZM7969O3bsyF4J
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
xcJ4v3dACzLWmO/IDIXm40A6NoaXNEmndu3a5BzfQbsziGgXeh2jhg7jWheh
UoJVgg06Ybicl5uYDkMp2DQTSAhObdmyZc6ZMjBDCDFd13k4yudXCCEEEhFL
6O8zhd6XaePWW7ZsiXmXB0PwLzgC78LLc+fOkbhcqXMl7k0TSMby49d8GtUA
B4oOHDjAubCr8gIHb2SSdd6LNLtkA9LAZ+FrMLwbNmxwXU9gL+SJv/PeTAzw
pnEgAWcKNbneVCCifV3LDkXwG+whF2CdlWauwIj81afZIAV6i7MnUDOkjLv3
91pI8gNBLVmyxBmBQPAeJyjvvzV3ZqkoeZEaHQCUxT2ZFSzbt2+nLahMn2eh
bnHEAa6xePshUAcSuN4FaoRv5XSuRarOqqDpiSAf16AIQnTeaEbSDbyQTw04
XwgMUM2ePdvZuESAi2hxJ5nTDcg/dUhNMtC80E4En09eh+Ql9szgKJrEvO8Q
Y7DTAbyvqjMib9LWLr6FWjmLvwO9J3KFMFPmcPN6WMsG40mTJsm7PkQQLJQI
JFPtXgtAE6+05XMhhL+K4ozS7vJSaMu+h+K9VOgvBYCQiRhwRQ+vUqUKc1if
K51OnjzJWQTszTsTfNpSc2PF/AT/zGAXMVoJJEFnINkjRGbrPlM2g93nXp+l
o61dL499AGGu582b53OkB+6NDBNMjWVfVKdW5RYhE3ZmJT4fOnjCpQSrBKsK
Qy1evLhdu3YGWbdt22aeTFc9CQIma9eu7YS3fPnyBX6GS6UKINc62EcuJtT1
6tWTRy9FrhULKlWESQlWCVYVhqpVq5ZZtGbZBOtcS6Z67PXDDz8kTZrUXNO+
e/cuBOvvmT6V6r6KbAS7Y8eO2LFjm8cH6OEQrPeFWipVBEgJVglWFYZaunRp
4sSJJ06cuGXLFmCmdu3a3iWdqsdY169fz507N+3+yy+/0Ad69Ohhvm6mUoVW
8kRPy5YtnR9OfbS6fft2OVvr16+X1bPmywUqVQRLCVYJVhW2Onv27OzZsydM
mLBkyZJQfalQ9dho5cqVdIBp06b5W/KqUoVE06dPN2/O97k4/FFp48aNZImp
uvdrXCpVhEkJVglWpVKpVCqVKrikBKsEq1KpVCqVShVcUoJVgg0W3b17d/Xq
1a4vcEUGXbt2zXzl0ykyvHHjxjFjxoQ2wRs3bowbN877ETGRvAMn5KmdPn26
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
zZs3OwlWLtSHU5ZUKpVKFRmkBKsEG1xyEWzIH9h50gj25s2b4QeWToUrwWbP
nl0JVqVSqVReKcEqwQaXnAQLvr799tuyfeXKlS1btsyYMUNuo58+fZqfn332
mfnutotgCZ8wYQIR5IPmktq6dev4uW/fPsLlq/dXr15ds2aNOYo433zzzfTp
02WvhGzYsOHWrVv79+/nqGnTpoXwu7EHDx4k/vbt203IuXPndu3adePGjTlz
5rCLbDjjnz9/HlAkfPHixf5WEVy4cGHjxo1SOmqpaNGiVMKOHTu8Mcnwt99+
S+a///77+fPny0Tg6NGj1MmkSZOc3w67ePHi1KlTv/vuO+dk4dKlS3PnziUz
1MYLL7wgBEsEzkUKEydOpCzekxJh1apVn3/+uXkmi5DVq1dzyKxZs65du+aM
fPnyZTIPHvft25eNM2fOWPa31BcsWMB5Z86cSdOYyIEJlrP89NNPn9mSr/Zw
7BZf+vPPP527OB25Im8cSD6lBmhuSuEtnUqlUqkiUkqwSrDBJQg2adKkrVu3
BlEyZcqUP39+CYdMRowYESVKFACJn7///jtwy8+tW7dKBCfBwjM1atTgkK+/
/jpVqlQCsZUrVyY+dErMuHHjQmWLFi1io2nTpnLUr7/++s4773Dq559/vlGj
RhJYvnx5jvrkk086der03nvvxY8fv2XLloGLcP369eHDh5P/MmXKxIoV68SJ
EwSCgtGjRyewS5cupFO4cOF48eIZut62bVvp0qX5+9tvv1WsWNHnk1yULkaM
GP3797fsB6xS2SK3EKArJvCcOnXqNGnSjB49mvqMHTs2wEkGGjduDPpOnjw5
c+bMIDrANnv27Pbt29erV498gqxyOHOEkiVLbtq0CWivVauWeZJrypQpNWvW
JAXmESVKlHCd9MCBAz169CA/GTJkKFKkiARSad27d+eQPn36dOjQwRmfaoFs
weMmTZqwsXfv3kOHDlWoUIFZBpw5YMAAinDkyBGJHIBgmdqQK7j3r7/+gkUT
J07MlARMXbhwIYdQNHoIfYbtbt26yYvQf/jhhyRJkgDtHJstW7YVK1ZwokKF
CnFq9j777LPUmH59UqVSqR6tlGCVYINLrmuwDRs2dO7NlSuXECzasmWLT4KF
XoA3AEneMgqOjhs3zrKvrREfArxz545JEMg0BMupYTY2xo8fnyVLFgmEnTgK
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
L2/evJ6enhDUVatWIcFUqVLlzJkT+ooVCxUq1LlzZ5E4Zps2bYr7+x9//LF5
8+Zhw4Yh37Fjx6qk4unTp9OmTStcuDCWxIb4+PgMHjwYf3/55Zf+/fuLZZAg
fLVMmTLu7u5nzpwRkffv30epUAzz+9CGQOO/+OIL7Hl7JJ4wifX29rZHYZTs
3bt31KhR9s7FHuB0nT17tl2zkBKLfwoLJRb/+DRYQj5aaLA0WH2Be5abm9u2
bduUkYMGDfrmm2/iWgWa5+/vjzvjlClTZGRISEjatGnLlSsH08NP3bt3F/Hb
t2+vVasWctGmM2fOnKFDhypjfv/9d6y7adMm1ZKQxixZsjRq9P/PKJQBgvr5
559DYpVLwpYLFCiATMVs2bJl69atK6YjIiKyZs3apEkToanQy4wZMwYEBIhf
Dx06lDp1apM6NH78eJRKmjM4efKkMNh79+5he319ff38/D799FPsNFQHxDJT
p04NDAw0vQd1yLVr13LlypWAllj78ejRI1SX7FdNwBG/dOmSnRJ/9eqVq6tr
WFiYmWVev3595MiR58+fJziXHTt2oF5jlcQSQj5aaLA0WH2Be1zFihWVMf/9
9x9cpWTJknGt4u3tvWDBAtwWd+3aJSMhipMnTxbTe/fuTZMmjWx6rVSpklRK
ybNnz/LlyxcVFaVKOWfOnO7u7spILFOzZs0KFSooDXbRokUowNKlS7XFCwoK
Wrx4sZiuXLmyNFjQpk0brBUaGipmYcXSYEGJEiXgtDExMaoE165dqzLYly9f
njhxAhMQ9ePHj4vInj17YrF///1XbmCRIkXu37+vLaFOSW4Si0rE8OHD7Zo+
Kl/2S3/NmjUtW7Y0s8Djx4+xt8+fP5+YXCixhBALocHSYHXE27dvVXr55MmT
v/76q3Xr1mYMFhw9ehT3xMOHD8uYYsWKKR/BN2/eXOrl7Nmza9SooXpAv3z5
cqVbCuCuUMrPP/9c2aVh2rRpGzduVBrs8+fPoVL58+dX9YnVojLYXr16odiy
26TKYKtVq5Y2bVrZk1aiNdgjR45o80IhsdiWLVtkjK+vr02aYS3vMGnvd5re
s8SaeeMJ50Du3Llv3bqlXcWS1S3BEoNVZWFVdrGxsd99993du3fjWsAmBmsw
SqwYLAsSq/zPSiTW7t7E7CtCyHuABkuD1RGwsm+//VbO4p4Cx8M9zlqDFaso
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
eHgI54E4DR061MvLC65V3MipU6dUHW75JleC6dOnjxyLYPjw4bKhFYdj5syZ
HTt2NJgaJPbVq1dyLIK7d+96GxFHBwdOHBRRc4mMjBSzZ8+efX9bRQhJImiw
NFhCPgxgoZBPk+1vY8aMOXz4sME4EEHnzp2VP1k4HixJPLdu3erevbs2HgY7
cuTIEydOYHrx4sXLli1T/jp79uz9+/e/pyISQvQDDZYGS8gHg/KbXEpEo1xo
aKi/v//Vq1dlfExMzJQpU95f+T561q5de/LkSVXkq1evLly4YDB+ksDX1/fZ
s2fyp+jo6OnTp7/XIhJCdAINlgZLyIeEmSfI586dEy2xkuvXr7PP5HvGzAHa
tWuXasQJ2bGZEEJU0GBpsIQQQggh+oIGS4MlhBBCCNEXNFgaLCGEEEKIvqDB
0mAJIYQQQvQFDZYGSwghhBCiL2iwNFhCCCGEEH1Bg6XBEkIIIVZx5cqV58+f
a+Pv3LmjGhKNEDtBg6XB6pEnT57cu3fP5skiTaRs82QJIeQDo3v37uPHj9fG
d+7ceeHChXbNevfu3aGhoXL27du3Z8+etXBgZ1zkw8LCxPSaNWsuX75skyK9
fYeZGGJzaLA0WN3x5s2b2rVrh4SEyBhcJRYsWGB+raNHj5ocSh3pnDlzRkwf
O3asSpUq0dHRNiztx0mCr9tXrlzZt2+fbQtDCLE5QUFBTk5OqsgXL17kzJnz
4cOH9sv39OnTQ4YMUcbASFOkSLFy5UpLVm/fvn2RIkXkbNOmTW1ywUepatas
WbRo0cqVK48cOXLcuHENGjRAqey6KwgNlgarL6BG2rr/8uXL06VLZ2atVatW
pUmTRvv90NWrV6dNm3bSpEkyZtasWd26dfuAK87vp1nAwcGhZ8+e9+/ft2qt
gwcP5siRo2PHjnYqFSHEVkBWv/vuuzt37igjd+7cWb58eftl+uTJE0dHx5iY
GFV8aGhoAtpgwfHjx1u2bGmTS+KFCxegrOvXr5cxuAwmPlliBhosDVZfnDx5
slChQsqYq1evotZfsmTJuFbxN4Jry8aNG5XxfYyorjmgcOHCJ06csG2xkw+D
Bg2qXr26vXO5ffs2Khq5cuVq0aLFxYsXLblBTJw4ceTIkTgcI0aMsHfxCCGJ
p0OHDuPGjVPGdOrUacyYMfbLEZeIoUOH2jbNSpUqmXnug2tXSEjI6tWrp74D
9yCTSy5atChDhgzPnj2TMUeOHLFtUYkKGiwNVl/Ur19/yZIlchaXF19f30aN
Gpkx2MjIyKNHj0KNDh8+rIpHBRzxhw4dUsYPHz68efPmNimt6N6gyjdpeT8G
K4iOjp4wYcKPP/7o7Oy8fft28x6Lw/H8+XMcjjlz5ryf4hFCEkNQUJCrq6uc
ffHiRY4cOSIiIuyU3Zs3b3LmzGnzNyDWr1/v6empjcf1CpevbNmylS1b1kcB
LmUm00EiuNDZtmzEPDRYGqyOePTo0TfffKN8hIQqOSrIrVu3NmOwBmMnWK3B
GoyPkLQGe/PmzTRp0rx8+dKSIqHGPX78+MGDB3fu3FlVN4ePwa6Rvp+fH2ru
CW7XxQa6uLiIBuSoqKguXbqo2j2swhKDxXXbzc1N3Imw0zw8PJTvTVjL69ev
161bV6ZMmUKFCqH2oWyjUEGDJURHQFlz5colGyeHDh1aoUIF1TK4Kv7999/e
3t6zZ89W/fTWApTLb9iwoWDBgqpEwsLCvLy8kHu8pcWNY8iQIdpOSg8ePEiX
Lp2qwyqy7tSpU82aNS0Ucly7smTJIjqkYd0BAwZg51iyIkkMNFgarI6ACJUu
XVrOnjp1SjxRsq3BguzZs+/fv9+SIrVp0yYwMBATu3btatKkifInXBKhi0gf
zjlt2rSLFy9akqCWnj17Nm3atECBArgwtm3btlevXo0bN05YUgYLDBamjWXy
588fEBCAu0OrVq0qVaqEe0eCc5TgXtagQYM8efIMGzbMpMfSYAnRFw0bNkTl
VDRO/vDDD6pH/Fu2bHF2dsY/O6rAX375pWrd/v37FzfLmjVrlMvjutSuXTtl
TGRkJPQVFu3v7x9vUXEVrVOnjvI1LsmPP/64bds2ZcyKFStcXV3fvHkTb7KC
ffv24dpVv3597IdatWrhQmfhiiQx0GBpsDoC5tO+fXsxLbv0w+tgWSVKlDDz
jpK1Botr8oQJEywpkoODg5+f3+vXrzGtHevg/PnzSH/nzp2WJBUXT58+jY6O
Tpcu3cCBAy30aiWqNg0kUq1aNTMNHcgOfxcsWIDKgq+vb2xsbGIKL8EuWr9+
vfmWWBosIfpi2bJl4hE8/sELFiyovAZGRUVlzpz58uXLuMIMHjy4atWqicyr
devW2k6wSBy54Aof7+rQ3WbNmnXo0EH7U9myZVVvB1epUgX6bUnLsKBv376o
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
6NChFSpUUC6A06NDhw69evXSrov9PHbs2NKlS1v+OmTPnj3z5MmjTAH/7Ow/
8DFDg6XB6oh169bhiidnITbioVIiDdbJyUnVgzR79uz79++3RZFtxv379yGK
uEHAoKKjo728vJo1azZq1CiD8eYOidI2feD+AneFm02YMKFSpUra/gOCx48f
qx4FArhK7969lTFhYWHIEb6k7W27dOnSUqVKKWOcnZ2nT5+esC0FFy9ehKsU
KVIEmxweHt60adNatWqJtnfMpkqVSrsKNs3X1xe7BXfSYkYs769Yr169iRMn
KmNghrg5IiOtro8ePRo6rYwpUKCAsoOKCrsarEEhsV999RWs0lbJli9ffsWK
FcoYJA51x5mGf0PUhnr06IEzStk+aXMGDRoEi86QIQMOJewlICBA++qQeXLn
zq2quOEcLm4WVQ8inEiqNLUxHzMNGzYsU6aMaDv94YcflE/5X758if9HXBlU
/y8C1BDxD25V/9jly5enTJlS1hZxZE2mTD4eaLA0WB0xbNiw9u3bi2kYi6Oj
Y0xMDO5urVq1KlGihJlXZswY7NatW8uVK6d6hQfXZNUr9klObGws7gjYkGzZ
svXq1Uvpqzdv3syYMaOqE+zTp08LFy4se1xg3V9++WXGjBkWZlenTh3li28y
TWQk382XBAUFQTOUMbivdenSRc5a+81T8Vhw7dq1hQoVgpcqN+3QoUN58+ZV
FeDu3bu5cuXas2ePXD1LliybNm2ycGNRLYKVqSKxV9OmTRsVFaWKnz9/Pvak
MgbnIbQ2ro1dvHgx7uxmWvkSD6RLSGzq1Klt1SSVJ08eVSdScVC6du2KOhRq
FtYmaO05IHLEP2aOHDn69OmzZs2aBGwFLgva09gqaLDmWbZsmXjd7/Xr1wUL
FtSO9+Lg4GByoJi2bdtOmjTJktNAcuXKFZzk4sETrv9I2R5jKhIdQYOlweqI
Fi1aSIMdOHCg9ruZcbX7xWWw169fh36oXqc1JEuDleTOnVt1U4Zr4S6vWgz7
SvVk3M3NrV+/fhbmAoPVjk6zaNEi7BntwvEabP78+eP95uncuXNVycK6v/zy
S5VbwmBV7b2431WpUsXPz08ZCc2YOnWqhRsLg5W9oCUjRoww+SZ+vAaLvWR+
SyG0FhbMciCx2FdFihQRQzEkHhisHKhByf79+5FReHi4Kv6tZpROVYyXl1e8
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
WrXo6GhlsjRYQoguoMHSYAkhScXOnTv79u0rpuGTZcuWDQsLE6NpnTt3bujQ
oaJPLCSzfPnyqnUdHBwMxnevtNIbGRkJgxXTISEhTk5OshdB69atxZBc4PDh
w97e3lu2bJESGxUVVbNmTZtvJiGE2BwaLA2WEJJUKN/kunXrVsaMGWVXAZjn
999/HxwcjOk9e/bAVJUrXrlypW3btpiAmv75558+Pj6qsQiGGwkMDOzfv7+y
Y+3y5cunT58upkePHl20aFFlN9rNmzcj0o4bTAghNoIGS4MlhCQhXbt2vXz5
ssmfRowYIb504Ovre/jwYeVPI0eOlE2pBuOYAzt27JhmRDmalpaYmJhGjRrF
NZasn5+fqlMBIYQkT2iwNFhCSBLy+PHjoUOHapXy9OnTW7duNRh7F3h7eyt/
evLkyZAhQxKcI5INCgrSxl+8eHHWrFkJTvb/sXfW8VJU7x9XUJBUBERAulEk
pKQ7FAFFEZTuBukOAQFppPMSEhLSSHcI0lKCdIMgHV9wf+/XPi/Pa34zu8ty
7164i8/nj33Nnpk5c/J53ufMmRmVSqV6llKCVYJVqVTPV7/99pu8rNWjqlat
Kp/iMlq5cqXHd8b6r5kzZ1q/MytaunRpWOJUqVSqZyklWCVYlUqlUqlUquCS
EqwSrEqlUqlUKlVwSQlWCValUqlUKpUquKQEqwSrUqlUKpVKFVxSglWCValU
KpVKpQouKcEqwapUKpVKpVIFl5RglWBVKpVKpVKpgktKsEqwKlXE0e3bt593
ElQq1ZP1559/3rt3zxl+8eLF06dPP/v0qP6DUoJVgg1G3bp168qVKwGPljiJ
OeDRqvwRJd+vX7+ECRM6d+ETO3bseOrUqWefKpVK5VFt2rQZNmyYM7xZs2bT
pk0zf//555+QkJC7d++akMePH1s/iOxbJ06cMKZ+1KhRd+7cCUOSPYs4bZ9s
VgWLlGCVYINOGMBy5crt3LnThGAkp06d6vss52ePCIGLOnTo8Pvvv0vIrl27
ihcv/gJ/F9756VI/deTIkW3btgU2MTZRrdWrV48aNapz14QJE1566aUZM2aE
awJUKpX/Wr16daFChWyBDx48SJIkyfXr100INLtkyRLrMYREjhz53Llz/lzl
/fffb9iwoWwzkq1Xr16ojZg3devWzZkRVVBICVYJNriE+XKO/X/66aeYMWP6
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
lKZ3M/a0PfU/c+ZMiNFmWxYuXMiI0uO12rVrxwDTGY7Bp6vS0zH+dS0yC6Ww
HhgKjrF+SfzMmTPiHdCiRYtc7pfExooVSwetQSElWCXY4BJg5nFxVKB0586d
FClS+PnN7giiTZs2lS1b1vw9efIkbsLjKghvz+r6eGj3xRNVjLdaunTpb7/9
BvdC2kWKFHneiVKpgljwp0fk8/ObXF988YXNXrVp04YhrfNIBq1P/CYX/dr6
SKaPb3J5U+7cuWV8rYrgUoJVgg06HTt2rFSpUs61BGEXKFi8ePGItn7giSpR
osT169f//vtv+bt79+4aNWp4PBIy3+Fdtht5L6qSJ09unfDBUfbr1+/5JUel
emHFoLhly5b79u3zdsDDhw+HDBliM+Znz54tVKiQ82Dw9dNPPw0Py2+9NMZB
vzAbLFKCVYINRm3btu1pH2LyRxs2bLh582bAow1X7dy5s0CBAhMmTLh8+bKE
9O3bd+HChc83VRFZc+fOTZo0aa9evcaOHdupU6cePXqow1KpwkmPHj3q2bOn
/89CNmrUCHz1aN4HDhxofbpBpVKCVYJVBbUOHz7cunVrg6+ocOHC+hiCb/3z
zz87duzYvn170A1YVKqg01OtULp48aLVmtniCVyiVC+ClGCVYFUvkq5du+Zt
CYFKpVKpVC+MlGCVYFUvjE6ePNm7d+8dO3Y874SoVCqVShW+UoJVglW9MDpx
4oTzE1QqlUqlUr14UoJVglWpVCqVSqUKLinBKsGqVCqVSqVSBZeUYJVgVSqV
SqVSqYJLSrBKsCqVSqVSqVTBJSVYJViVSqVSqVSq4JISrBKsSqVSqVQqVXBJ
CVYJVqV6UbVp0yb9DKVKFR4aP378gQMHnOGrVq1asmRJuF76n3/+uXr1atjj
uXLlStgjUT1HKcEqwQaj1q9fv3nz5oBHS5zEHPBoVc9FVatWfemll5zfd8D3
JUyYcODAgc8lVSrVi6Fhw4a1adPGGV6iRIlwtaLga+/evS9dumRC7ty506pV
q1OnTvlz+u7du1u2bPn48WO2N27cOGrUqICk6vz58yD9b7/9tvtfbdu2jZD7
9+8HJH6VRynBKsEGnU6cOFGgQIFbt26ZELaLFCni+6zWrVvPnTvX465atWrt
37+fjdu3bxcsWFC2VU/U77//fu7cuac65ejRo/ny5YscOXKePHl+/fXXcEqY
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
LPOorFmzzpkzxxm+detWK4IuWbLEt4/Yv38/IJciRYqOHTt6O/Krr76yrmG+
cuUKhf/EFEKJslb5iQQLNtuQ2BvB5siRIxQES2oHDhz4wCIGFCNHjkyVKpUs
SP7iiy/EDzKS4tJXr141R5ppHwjWLD9QqYJdNGz6CMy2dOlSRnPWXfTHXLly
Mayj1/z5559hvxYE68TgwYMHm5sgTxSGffr06c5wjwSbM2fOGp70yy+/OGNI
kCBBhHUZL7CUYJVgg0hDhw4tU6aMMzzUT3K5vKwiwNDNnz8/jKkND509e7ZY
sWLOxWAw+e7du81fkKlv375PfDJry5YtuBhzs9uqhQsXWosLTvO4MBiAXLZs
Wb58+d577z04E9r0cbn+/ftbbwL26dOHivNx/OXLl7t06QISnzp1yh+CrVOn
ToYMGawxBJxgW7ZsaYsKiKWoixYtOmTIkJCQELntKATr8cXCSrCqF0xt2rQB
3kA+YNUanj59+hYtWvg48fTp03t96q+//rIej7mwGSu6W/bs2Rlf37lz54l3
/BlRvvzyyx6fKYNgbWyMsWrYsKHvCI02b95Mf7c94aVvgn0GUoJVgg0irVy5
MlWqVM5wG8EyyrZ9LOZpCfaNN944c+ZMgFIdMEGk4NyJEyegoEuXLl25cuXn
n3/258Ru3bo1b97cNiWLd+jRo8fq1avTpk1LzPv27XvaN3tjt9OlS1eoUCEg
1p9XN5w8eTJ69OjfffcdvmnQoEExYsTw/WG1IkWKCEz+/fff/hDs8OHD2aaR
yC78Y6AI9t69e2SQXaTf+CkAlSL9888/69atayvbu3fvvvnmmx999JF5DMSM
L6i7mTNnPrGsVKpgET0uf/78yZIlsz28iXGoV6+ebFvH10Zjx471OMlpZPu2
1/fff//5559bQ+j4cePGpW926tTJECx2gHOdADljxozChQt7BN3EiRPv2rXL
GoJ1zZgx45o1a/wpgdatW9veo+VyPyprvlq7adOmMmXKeFvkpgq1lGCVYINI
169fjxYtmpMtbQSbNWtW0MXcBGfQ3a9fP0IYvzsfOHUSLFarYMGC4fpZmVCo
RYsWX331lVBc3rx5ga6yZcvKnOeNGzc2bNhgPRh/YX1pTM6cOcmj9SZXhQoV
ataseeHCBex8woQJodCqVauaLN+8edP67lxo2eP3brgoQ4OnKii4MWrUqC+5
ZRaEeBPuj7RBmEOGDGHk8sknnwwbNmzr1q1JkiRhm2ol8fPnzycqXBtADi5+
+OGHMWPG7N69OyHt27dnF/mC+a3RAupvvfUWkdOQiARMffnllzdu3IgfhE6J
gfYjvobL0d6GDh1KywHyT506lTx5csAbxKXJjRo1irz37NkT50UrmuQW3lyo
deLEiZEiRUqfPr0gMbh7//59xlBEyKX9/AKmShXxRdeIHz9+vnz5bOFt2rSJ
FSsWg25YLiBPNtE9EyRIYA1hYE5/rFatmvU1feXLl6fjc13b6RUrVsQROKPl
3ESJEjnfOYBNSJEiBYZXHhT1KEwovZ7hKiNTzMWkf/XFF1907tzZHIYNIUm5
c+f2P7Mqf6QEqwQbXGrQoEH//v1tgZgg65dQwLwFCxZY927+V2Yez+jixYuE
WzEMOImAz9qARuauNJYca2mWlmEqrVPTCxcuBJys71K4e/du5cqVrZ8PmDlz
przxyeV+Q9TIkSPNdAFcV6dOHfOmViAZCPS4eCN0In4KnPp64rQtAxbQcdas
WRyJN+nWrRtobaoSELX+lWe+CAEmcZcUF+A9Y8YM53PH7JJTKEbKULYpLlzY
vn375K9MGXFdSobiNWuMucrw4cNJ1bJly6TNnD59ukCBAviv99yCWs1KifXr
18PSFPvJkydd7lowqd20aVOgylOleu5q2LDh4MGDbYF0vR9//BFLtXbt2oC8
XpseBwRab9wwnmWEa3stNh25adOmjExtp8eOHdv2ei7RgAEDOnXq5PGK2JMe
PXowqmUoHeVfAczmgMuXL2/2InmBnkn53LlzM2bMGIpcq3xICVYJNrgE/6RM
mdL50uxACarJkiVLcL3KDySzTnHgLAoXLmxbQgaFgmf+xMbp06ZN+/777+Uv
tnfo0KG4CeeRDx48mORTVhv+ogoG/uabbwz/y6u6cHzPN1Uq1bPUunXrns0L
tFesWFGjRo0nHsYYc/Xq1dYQ/mbKlMnjDaNcuXLZrKVTeIT7/8qfJ2SdWrJk
iTdOVoVaSrBKsEGn0aNHf/vtt+ERM2BcpEgRH/eMIqbq1KljfXnL5cuXbd+6
atq0qccXDngTuGt9CqlUqVIeWfT27dvVfcpM877Asn0b9/Dhw2nTptXP8ahU
4SEQtGbNmh6nUo26dOkyfvx4G6x27drV49uzJ0+ebHsALTw0b9685s2bh/qj
hypvUoJVgg06YZpatGjh24iFTkOGDPH4ppSIrGvXrhUtWnTfvn1mJdikSZOG
Dh1qPeapgOrevXt58uQx9n/37t21a9detWpVGL9g+6Jq5MiR77zzjgD/9evX
gf8I+C0MleqFEaNpaNDHbTibubt69WqPHj0qV67svLN27ty5tm3bPoMPiOuQ
NpykBKsEG4yCr56B2QkKLV++PFmyZNZ3f9WoUcP5wJr/2rlzp3xASgTVZ86c
2eOTXCqXe9HFmjVrKLG6det269bN9tSYSqUKuBhN+9/RLl++3KBBA493kbZv
365sGdRSglWCVQW1gHnruiy2vb0xxk916dLFuoQMQguuVcEqlUql+i9ICVYJ
VvUiacuWLWF8kUKtWrUi2pvEVCqVSqWySQlWCVb1wmjdunXy5tJQx1C7dm2P
331QqVQqlSpCSQlWCValUqlUKpUquKQEqwSrUqlUKpVKFVxSglWCValUKpVK
pQouKcEqwapUKpVKpVIFl5RglWBVKpVKpVKpgktKsEqwKpVKpVKpVMElJVgl
WJVKpVKpVKrgkhKsEqxKpVKpVCpVcEkJVglWpVKpVCqVKrikBKsEq1KpVCqV
ShVcUoJVglWpVCqVSqUKLinBKsGqVCqVSqVSBZeUYJVgVSqVSqVSqYJLSrBK
sCqVSqVSqVTBJSVYJViVSqVSqVSq4JISrBKsSqVSqVQqVXBJCVYJVqVSqVQq
lSq4pASrBKtSqVQqlUoVXFKCVYJVqVQqlUqlCi4pwSrBqlQqlUqlUgWXlGCV
YFUqlUqlUqmCS0qwSrAqlUqlUqlUwSUlWCVYlUqlUqlUquCSEqwSrEqlUqlU
KlVwSQlWCValUqlUKpUquKQEqwSrUqlUKpVKFVxSglWCValUKpVKpQouKcEq
wapUKpVKpVIFl5RglWBVKpVKpVKpgktKsEqwKpVKpVKpVMElJVglWJVKpVKp
VKrgkhKsEqxKpVKpVCpVcEkJVglWpVKpVCqVKrikBKsEq1KpVCqVShVcUoJV
glWpVCqVSqUKLinBKsGqVCqVSqVSBZeUYJVgXzDdu3dvwoQJPXv2fN4JiaC6
ePFi27Ztly9f/rwT8v/0119/rV27NoAR7tq1q0yZMv/880+oY7hx4wataOrU
qQFMlU0rV66sVq2abN+6dev7778fN27cE8+6cOFC69atV69eHR5JevTo0U8/
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
vP3229QBd5V/ATkUKOtnQq0icHwEi9rRpGyHIthVq1bJTkxJqPH7RhiCldtM
6gOdOnXSl53yEx3N8zCjEiys9eabbwY+REl/ZDiG6f2rCAIJdv78+YRTjVp0
VdQYnmD3799PqMF/ZEk23I7etPuYEucEy6/0ZWk4TZNhmvzUpUsXNatI7AmW
8FuwYEG5lWNXEUQilmAtwd6YQmgiDOpznQMGDHjsscf0VzCACKPPh5I9YQxZ
e0asrlChgj51SzkcuW7dOj2XAEtmAVEIWaR+mUqdMWOGPihEgiapmc9hkegJ
4yb3ksiI80RpEhYl6ONLpHiTT7Jnz54sWTIzNqqcPXtWJ3L//e9/J0+efNSo
UeSCwMcZgC4OFrAkU4haRo4c6Z/kGTNmjHz1BjBLmzatfESACFy2bFkBD1JS
zpw5hU9IiyRlWW3ouJO3QKb5nUpUetttt0nC5aJp0qTxYPa4ceO4ipZct25d
WVfsF1oHAOtXJs1J77Vr1/KvORWsQpXIrTly5NBZdPbcd999qAtehaCoIdsA
2I4dO/r27Qs00nxSFen4jjvukMlkKKJ69er6oArXvf322+WVkuiHn2T1qcw/
Y1CYrVWrVqgCluC6DAqwNdrGjowFSIIoU1aZfvvtt2bSNGXatGkpUqSgAoAN
XgFswBiOuwBGlsSI/rGmrOJDM9SEkRdMQoVxMJwHferbFVTQHgXSOtUY5z70
0ENQBH5IksUcnEiqFbPSBLBT/AoC5MTChQujJdqFxoTqoV9KUDtCBQpLHImG
xfewPlcB3hgZsa2DtZYtW+p40y9+gkUtjBqA6pyGYEHzmBgJlvhAnw38vAVK
IAjgmeaH0sqVK4fdYTMUiMWpEgzMKJXKlyxZElvjWuID+vUQLsEggu5P8xmC
AV36AV94UocMAjzSTUBQuR+EfijWXzcPwTJ0wsMxBN7VsWNHve/juG/YwNmI
XdiXETqMpO9MEFGClWeRzMijUr58+YoVK+IqeBTNmTp16rJlyzAx5zKwkmNo
HfFTZtdRAhrmWiiKGEIH5yxsYT7y75eqVasqzkmn8FO6rIPV1e9t2rTBIvqR
aDpF4NvJ/ARLZ0exACSeSUcwb1tIowBaaJaBrcejQhEseYQoPXHiROwoj6Ft
3bqVqqq2e/fuTeswOk3AhYYPH075DKVTpUpFAKeGWI1tVESro/tuy/UqlmAt
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
80xclRaeYM+ePeuhAkuw141s3rx56tSpV3RK3BLs+fPnwU5zT+QEe/LkyW7d
upl7LMHe4GIJ1hJsYpGvvvoqffr0WbNmHTt27Pjx42WnEOzBgwc7d+7cpEmT
2bNn6/GXLl2aPn36Cy+8wAFhaIrcxzGtWrUaMmSI3oCjwP79+w8YMIAIuWXL
Fj340KFDTz/9NDgxceJELjd48GCi39GjR+Fq/n3ttdcAKjmsV69ep06dIj+y
f9CgQeYLE/773/++/fbbFP7kk09OmDDhwoULsv/IkSMkC/Dvvffe46zWrVvv
3btXzzp27Njw4cOff/55Knbu3DnHpZqZM2du27btyy+/bNmyJaesX7/ecdd3
denShchM+ejqs88+c9wbZAMHDqSlnTp1CqUN0GXKlClUjEvPmTNHHtHdv38/
hdx9991cgg3PubRF1pI1b96cXzds2OBcJtgffvjh/fffp1ZPPfXUzz//rKew
jar79u0LF2GjwJr89ttvI0eOHDFiBIo9ffr08ePHqRjlk+wo9pNPPnn55ZfZ
3rVrF0VxrQYNGvCrfN6IMpcvX/76669T1Xbt2r366quOu2SOy9H8rl27yo1C
DgPkKIcCn3vuOeopwL9y5cqmTZuiup07d2p9MM3QoUNRIPqnyf4Ks/Odd96h
vZiD9rZp0+bzzz/XX9Hk2rVrUSzOQyH69DRnLVmyZOHChfIvNXnxxRfZiXtT
H6qKHmR/rly5UqVKNdYVWXWArfv06dOzZ89x48apC3nk+++/79evHwaCfvUl
EosXL0Ytt912G0W98sornlNwuXz58qVIkUKuJU/tCcFSbZpAxV566SV9fBuH
p9Uolp4IHfnrwAF4II7N8JP+wulvvPGGaXf2jxo1ipLpg+ZDbUqwtILuRmXw
AVTBpdUZOFcIduvWrRidwqmG6aKHDx/GQygc82nvplGTJ0+WKzZs2FAJFseg
IT/99BOmpChxAHaiYTn4gw8+kA6O8Ct1wFg0jYN79OgR5ga0jCg5bNq0aVIC
ewhW1I0II2NDzIpiqQD+o84joUa65Pz5882n5jEoHYTT6UoSEP744w/K/PTT
T/UYegrVxk/kxSAEqJtuuglTUnOCjBxDe1EOToLXafnYmspwXTw51Crojz/+
mFMoCiTGkdhAUYRc+hqewE/8S0No77fffosLccqBAweKFClCHcS7pCMIweLq
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
nJkxYwae47hraDm9bt26nE6xcooQLGTbunVrmmli+fHjxykN2hw6dKh85gDV
rV+/Hg2j3meffdaT9xFMfPjwYXNPgQIFZNhiSvPmzTNmzIgO8+fPT2mhOJb9
+HP//v25FtpQ55H9ooQuXbqg4cBzFy1ahHtwWOAiivPnzzME27x583fffUfD
OVJ1Iqfj6lyU8jG9ahvzbdiwAcc7efIkeuYsZQlO+f777/mX9mJxfqLXmIso
vvnmG/RJgXPnztXSsA7+gHvw67lz5/SrB1SGEug+HMO/hAjU1aBBA5oDyjou
T3744YcEAcddlSFx491339V/X3nlFapN23EG/O2ZZ54Bpfx64ACUQOSRf+ns
xISzZ8/SwakAmjlw4AD7UX6lSpWow6hRoyhcXoXBubSFwolLqFFKYHxKL6NX
0nOpAI0SB6AEjmQnapFmojF6CkfScejgHszzCzrHG/Gxbdu2yR7KpNX8XbVq
FbWlv5gPLeK0s2bNwoicQncLJFgiZ/LkyStUqECjMKvsFIL96quv6Mv0C3PM
iNrxWK61cOFCx+1fTZo0QS3EFkrAATzlo8ZbbrmFcRy/6gBECJZWEFEpCmfW
4ynwxRdfRFE9evTwx2RaSjnZsmWrX78+G5JK6N0cT3hhfNGvXz/xdoIY8Rl/
M+cKiCF4JqogGGIUlEbsLVasGEXhJNI6YiwdR0/Bghr88RPdv2fPHjILzsm5
NIFLm696wAfotlyIiKQ7LcH6xRKsJdhEJCbBEqk6duxI8iJuwxUEE3YS7WG2
e++9V4C2adOm+gwO3EJyJNFkyJBhyJAh7FmxYkXOnDnLlSs3Z84ceXp06dKl
SZMmJYzLKWBb8eLF9+/f77hj7dy5c5PrKfa333574IEH0qdPTzIiDpODUqdO
DaUE1nnTpk1ly5aVt6B88cUXnPXBBx847nIpiChLliwE7VDfKoJgS5Ys+ZQr
1apVo+1+gqUVWbNmDbUSEm1wdRIiyYUg+f/snXf8T+X7+CtEVmRlr+yQkS0i
JNkzI2VUsiJ7hRKFlL1lK1vKyiZlRGZlRUbJjLLS+T5/5/q5HvfnnNfr5b2M
t+7rj/fj9T7nPve6rvu6nvd97nNOjBgx8JyO6yHJc9y4cVSbbIk1HNy4cSM9
qWEIP0wPO66zfe655wgH+NuSJUt6NjaI4J8TJEigqAPm0Vj8eZs2bUa48thj
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
qDFjxuiC5KoHXnFxcWbFWsuGTIzYb74MaLRz504OT34Cfv81evRoBcj0JiVY
JVhVutKTTz4pt1lFM2bMcL45pUq1Dh8+3Lx5c+/1lvujY8eOxcbGLl++/Hc5
u0p1P8W8u1ixYuaGyNWrVyFY55qByejkyZN169b1PuP9O4rBO2fOHNeyhKr0
ICVYJVhVutLKlSuLFy8+efLkRYsW8X/w4MFJ3RlX3am2bduW1KdI76lOnTqV
OXPmgIAAvQCrehj0008/MVusX78+RmzBggVhYWHez6slpb179/4ugzQpHT9+
PFOmTA0aNNALsOlQSrBKsKr0poSEBFhr8+bN5is8qgytW7dubd261fs8tkr1
oEqegceI7dmzJ0NP3Bi8W7Zs0csI6VNKsEqwKpVKpVKpVBlLSrBKsCqVSqVS
qVQZS0qwSrCqtNKJEydkOfd7odOnT7vWxlSpVCqV6qGVEqwSrCqt1KxZMx8f
H/meUZqrbdu2JC7f6FGpVCqV6iGXEqwSrCqtJJ+mSsm3ElKhXbt2LVq06B4l
rlKpVCpVxpISrBKsSqVSqVQqVcaSEqwSrCrVev/99+/dV6p19XuVSqVSqZKS
EqwSbMbS7du3165du2TJkvXr1zvDd+3atcTWDz/84Iy8cuVK+ZY6PxFHwtet
W8euc93sAwcOnDx58tKlS2+99Rbpy816dg8ePEiIPH0aHx//+eefc6Asbzh+
/PjMmTMTQhzzpaePP/7YpHnq1Klz585dvnz57bff5qgrV66Yn+DeDz74gMBE
v3N68+bNbt26FS5c+KAts5K2M/EzZ87s2LHj6tWrq1atWrZsmTx8e/bsWdL8
8MMPnQswsk0I4fv27TOB27ZtI4RjU/hJcZVKpVKp0pWUYJVgM5BgwpCQkM2b
N0OV2bJle/XVVwm8fv16hw4dFi1a9NVXX8XExBQsWHDnzp2Eg53PPPPMH/7w
h9jY2IEDBzZs2NDX13fhwoV9+vTp3r17lSpVcufOLWgaFhbGT+Hh4V26dGnU
qBGHNG7cGCglQQLZ/eSTT4i2cePG1q1bs8sZt2/fXrNmTbaDg4Pbt29/4sSJ
w4cPlypVqnTp0pLVl19+OUuWLFFRUX379u3fv3+RIkVq1aolLMpJW7VqBbse
OnSoaNGiZLJu3bqcyxRz+fLlZcuW9fPzI+XOnTuTk2PHjlWoUKFYsWISYd68
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
z4sWLUomAiP9lVdeKVeuXJkyZZKPxnj5+uuv0zqD/1tF5nM2aSgGeKLmXXU3
UoJVgn0IhfWOjIxs0KAB/nrgwIFxcXF3n+Y777wzYcKEhg0bQlneqwcJCQkV
K1YMCAjo37//li1bTDhmLSoqqlatWiEhIX369AkMDMStjxs3jhS+//77zp07
FyxY0M/Pj6xGRETUrl0bnyLrbn322WfBwcH58uXLli1bx44dw8PDq1Wr9tpr
r8n6sakTnmXUqFHOkG3btrVt27ZFixZku3v37k2aNCGCoOyaNWuef/75pCCW
bAwYMCBnzpypzoxLOCz5wtoDTLA0aPHixe/oqO+++45GKVSokOxu3rw5V65c
BlfuSAAM/Y2NL7/8MqnFjZ2i6YcOHUqLCMEePXq0UqVKdevWTcm5aM1Zs2Zx
rBJs6rR3795u3boFBQX17NmT/4xENlq3bj1lypQDBw64ImN2du7cyYZZbiV5
gmVSDByuW7eOZNM859i33LlzJxPh9ddfX7ZsGb0r+b7Br/Qf7FJaZ9Dq2rWr
fMTQaPXq1cnbVYZhokvZYMPNkxgYLgypfIVHlVZSglWCfTiFRfLx8enUqVPa
JtuuXTvsamxsrCscG5g1a9YSJUqYZWDRV1999cQTT7Rs2dL5ZNo333xDtJkz
Z8rujBkzzBdjgZzatszisRhb6EXeBTt58mSRIkW6dOmSOojds2dP48aNr1+/
LrsgNEk9/vjjH330keEZ3Ap0TaDsQkomn15t2rQpDQlWzv4AEyzCcd8pwVr2
R4oNwaKmTZumjmDpaSNGjLijQ5jLGIJFkydPTiHBWvbzmUqwdyNGvSzKx3+Z
SMKcNMHgwYPnzJljooFMxYoVI2T48OHz5s2TwOQJlmkyLUtq92KVv2PHjiV/
4ZTp/BdffPGb6WBIP/nkk4sXL6Zd1v5X06dPHz16tDNk48aN2bJlM4bRq0OH
DlWuXDkkxM0PjAt/f388ggl58803IyMj0zbDD7mUYJVgH1r5+vp269YtbdMc
NGhQhQoVnn76adcKA8HBwR06dChZsqQJwUcAHo0aNfI+OogBHzt2rGzDJzh6
5vKyu379enajoqJkd9SoUY8++qg58JVXXuHXtWvX3mm2YdQaNWqYa9E3btyo
U6cOII27ccXEVxq/BnhDs/JdWq+UYO9UqSPY9957z0mwTIhSR7BBQUF3SrDM
pJwES/dTgr17YRn279//zq/64IMPkorZs2dP899yMG14eLiZ5NI95FIqo9Xw
XjIEu3XrVgh27ty5Q4cOxQikeemSV0JCAmY5JQR7L3TixAlMtNMgx8fHly5d
OpmnoWigl19+OXv27EwcnOGMZYahn58fHsEEYmarVKmye/fue5H5h1NKsM6/
/wFCSc+b
    "], {{0, 486.04212365071635`}, {550.8477401374785, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{119.98960000000002`, 119.98960000000002`},
    SmoothingQuality->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{550.8477401374785, 486.04212365071635`},
  PlotRange->{{0, 550.8477401374785}, {0, 486.04212365071635`}}]], "Input",Exp\
ressionUUID->"c05aad49-449d-49a6-8c73-ad8cdfa34e19"],

Cell["\<\
I need to find the edges and arcs and separate them. I think it would be \
faster to do this by finding the parts of the adjacency matrix that are not \
symmetrical.\
\>", "Text",
 CellChangeTimes->{{3.86656112301025*^9, 
  3.8665611779967365`*^9}},ExpressionUUID->"2a7c73c7-8953-4e65-b4ba-\
e92b89063718"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"undirectedgraph", "=", 
  RowBox[{"RandomMixedGraph", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"15", ",", "35"}], "}"}], ",", "0"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8665611815401297`*^9, 3.8665611828097024`*^9}, {
  3.8665612245617094`*^9, 3.8665612325435505`*^9}, {3.866561649906413*^9, 
  3.866561654563979*^9}, {3.866561692835253*^9, 3.8665617056683097`*^9}},
 CellLabel->
  "In[133]:=",ExpressionUUID->"73450b7c-7982-4589-8f8f-85650a5f1b20"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}, {Null, 
       SparseArray[
       Automatic, {15, 15}, 0, {
        1, {{0, 4, 10, 16, 21, 23, 27, 30, 35, 39, 45, 50, 56, 63, 69, 70}, {{
          3}, {6}, {10}, {14}, {3}, {5}, {7}, {9}, {12}, {13}, {1}, {2}, {
          4}, {8}, {11}, {13}, {3}, {6}, {8}, {10}, {12}, {2}, {9}, {1}, {
          4}, {12}, {14}, {2}, {8}, {13}, {3}, {4}, {7}, {10}, {11}, {2}, {
          5}, {10}, {14}, {1}, {4}, {8}, {9}, {12}, {13}, {3}, {8}, {13}, {
          14}, {15}, {2}, {4}, {6}, {10}, {13}, {14}, {2}, {3}, {7}, {10}, {
          11}, {12}, {14}, {1}, {6}, {9}, {11}, {12}, {13}, {11}}}, 
         Pattern}]}, {
      EdgeWeight -> {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}, 
       GraphLayout -> {"Dimension" -> 2}}]]}, 
    TagBox[
     GraphicsGroupBox[
      GraphicsComplexBox[{{2.9388748608244626`, 0.}, {3.004907102398626, 
       2.05169365008188}, {2.220182120986251, 0.9490972802514819}, {
       2.5109798552028937`, 0.21412802395799213`}, {3.968423861608401, 
       2.7668369024786132`}, {3.521693373262562, 0.11251340403484034`}, {
       1.932047159244647, 2.1868171004934744`}, {1.7348034002802568`, 
       0.9106762127451661}, {3.694082603269802, 1.8083783589419065`}, {
       2.875276906137194, 0.7519857100979936}, {1.3671660412769557`, 
       1.3714379619757684`}, {3.3552180243846754`, 0.9864279369141076}, {
       2.409804754080043, 1.5808342127653685`}, {2.8639696309224503`, 
       1.0993201155937184`}, {0., 1.5611352440289306`}}, {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
         ArrowBox[{{1, 3}, {1, 6}, {1, 10}, {1, 14}, {2, 3}, {2, 5}, {2, 7}, {
          2, 9}, {2, 12}, {2, 13}, {3, 4}, {3, 8}, {3, 11}, {3, 13}, {4, 6}, {
          4, 8}, {4, 10}, {4, 12}, {5, 9}, {6, 12}, {6, 14}, {7, 8}, {7, 
          13}, {8, 10}, {8, 11}, {9, 10}, {9, 14}, {10, 12}, {10, 13}, {11, 
          13}, {11, 14}, {11, 15}, {12, 13}, {12, 14}, {13, 14}}, 
          0.03680371177047734]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.03680371177047734], DiskBox[2, 0.03680371177047734], 
         DiskBox[3, 0.03680371177047734], DiskBox[4, 0.03680371177047734], 
         DiskBox[5, 0.03680371177047734], DiskBox[6, 0.03680371177047734], 
         DiskBox[7, 0.03680371177047734], DiskBox[8, 0.03680371177047734], 
         DiskBox[9, 0.03680371177047734], DiskBox[10, 0.03680371177047734], 
         DiskBox[11, 0.03680371177047734], DiskBox[12, 0.03680371177047734], 
         DiskBox[13, 0.03680371177047734], DiskBox[14, 0.03680371177047734], 
         DiskBox[15, 0.03680371177047734]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{
  3.866561234355133*^9, 3.86656165495857*^9, {3.866561699968053*^9, 
   3.86656170627966*^9}},
 CellLabel->
  "Out[133]=",ExpressionUUID->"f59322dc-eafa-4df9-8517-d594a0658c27"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AdjacencyMatrix", "[", "undirectedgraph", "]"}]], "Input",
 CellChangeTimes->{{3.866561238058934*^9, 3.866561246513466*^9}, {
  3.8665616601585407`*^9, 3.866561667742654*^9}},
 CellLabel->
  "In[134]:=",ExpressionUUID->"69b23903-0de9-4d6c-9c9b-90d2284fde65"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["SparseArray",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             RasterBox[CompressedData["
1:eJxTTMoPSmVmYGDgh2IQ26p8d9wspXP2c4wXbTH/ccX+xSLFx4GrXtkPV/Gd
3QauO7e8sL/hvnxdzbS39icjcv/Ff30/ai+VzcGlnlRxWofDQNlLa/dTK74G
Kp0MVD4aqPgabO4f6vYOVPkz1MuxoZ5uB1s6HOrmD7Z4Gaj0Odjia6i4Z6ik
n8HWTxls7aWhEm5DxZ1DJf0PNvUDVV8Mlfp9sPlrqKSr4do+GSrl/2AzHwDt
BIYl
              "], {{0, 0}, {15, 15}}, {0, 1}], AspectRatio -> 1, Axes -> 
             False, Frame -> False, FrameLabel -> {None, None}, FrameStyle -> 
             Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], 
             FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
             Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], 
             Method -> {
              "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
               Automatic, 
               "DefaultGraphicsInteraction" -> {
                "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                 "Effects" -> {
                  "Highlight" -> {"ratio" -> 2}, 
                   "HighlightPoint" -> {"ratio" -> 2}, 
                   "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
               "DefaultPlotStyle" -> Automatic, "DomainPadding" -> 
               Scaled[0.02], "RangePadding" -> Scaled[0.05]}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Specified elements: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["70", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"15", ",", "15"}], "}"}], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             RasterBox[CompressedData["
1:eJxTTMoPSmVmYGDgh2IQ26p8d9wspXP2c4wXbTH/ccX+xSLFx4GrXtkPV/Gd
3QauO7e8sL/hvnxdzbS39icjcv/Ff30/ai+VzcGlnlRxWofDQNlLa/dTK74G
Kp0MVD4aqPgabO4f6vYOVPkz1MuxoZ5uB1s6HOrmD7Z4Gaj0Odjia6i4Z6ik
n8HWTxls7aWhEm5DxZ1DJf0PNvUDVV8Mlfp9sPlrqKSr4do+GSrl/2AzHwDt
BIYl
              "], {{0, 0}, {15, 15}}, {0, 1}], AspectRatio -> 1, Axes -> 
             False, Frame -> False, FrameLabel -> {None, None}, FrameStyle -> 
             Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], 
             FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
             Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], 
             Method -> {
              "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
               Automatic, 
               "DefaultGraphicsInteraction" -> {
                "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                 "Effects" -> {
                  "Highlight" -> {"ratio" -> 2}, 
                   "HighlightPoint" -> {"ratio" -> 2}, 
                   "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
               "DefaultPlotStyle" -> Automatic, "DomainPadding" -> 
               Scaled[0.02], "RangePadding" -> Scaled[0.05]}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Specified elements: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["70", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"15", ",", "15"}], "}"}], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Default: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Density: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0.3111111111111111`", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Elements:\"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"\"", "SummaryItem"]}]}, {
               TagBox[
                TagBox[
                 GridBox[{{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "3"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "1", ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "6"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "1", ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "10"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "1", ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "14"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "1", ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    ItemBox[
                    "\"\[VerticalEllipsis]\"", Alignment -> Center, 
                    StripOnInput -> False]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"], "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  SparseArray[
  Automatic, {15, 15}, 0, {
   1, {{0, 4, 10, 16, 21, 23, 27, 30, 35, 39, 45, 50, 56, 63, 69, 70}, {{3}, {
     6}, {10}, {14}, {3}, {5}, {7}, {9}, {12}, {13}, {1}, {2}, {4}, {8}, {
     11}, {13}, {3}, {6}, {8}, {10}, {12}, {2}, {9}, {1}, {4}, {12}, {14}, {
     2}, {8}, {13}, {3}, {4}, {7}, {10}, {11}, {2}, {5}, {10}, {14}, {1}, {
     4}, {8}, {9}, {12}, {13}, {3}, {8}, {13}, {14}, {15}, {2}, {4}, {6}, {
     10}, {13}, {14}, {2}, {3}, {7}, {10}, {11}, {12}, {14}, {1}, {6}, {9}, {
     11}, {12}, {13}, {11}}}, {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
     1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
     1, 1, 1, 1, 1}}],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8665612469310074`*^9, 3.866561668433885*^9, 
  3.866561709835436*^9},
 CellLabel->
  "Out[134]=",ExpressionUUID->"3482d66f-311a-47b6-a797-191a09cd9c5c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"AdjacencyMatrix", "[", "undirectedgraph", "]"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.866561238058934*^9, 3.866561246513466*^9}, {
  3.8665616601585407`*^9, 3.866561676284753*^9}},
 CellLabel->
  "In[135]:=",ExpressionUUID->"78f7b9d0-f368-47df-b248-cb8ea7fe10b8"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "1", "0", "0", "1", "0", "0", "0", "1", "0", "0", "0", "1", 
      "0"},
     {"0", "0", "1", "0", "1", "0", "1", "0", "1", "0", "0", "1", "1", "0", 
      "0"},
     {"1", "1", "0", "1", "0", "0", "0", "1", "0", "0", "1", "0", "1", "0", 
      "0"},
     {"0", "0", "1", "0", "0", "1", "0", "1", "0", "1", "0", "1", "0", "0", 
      "0"},
     {"0", "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", 
      "0"},
     {"1", "0", "0", "1", "0", "0", "0", "0", "0", "0", "0", "1", "0", "1", 
      "0"},
     {"0", "1", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "1", "0", 
      "0"},
     {"0", "0", "1", "1", "0", "0", "1", "0", "0", "1", "1", "0", "0", "0", 
      "0"},
     {"0", "1", "0", "0", "1", "0", "0", "0", "0", "1", "0", "0", "0", "1", 
      "0"},
     {"1", "0", "0", "1", "0", "0", "0", "1", "1", "0", "0", "1", "1", "0", 
      "0"},
     {"0", "0", "1", "0", "0", "0", "0", "1", "0", "0", "0", "0", "1", "1", 
      "1"},
     {"0", "1", "0", "1", "0", "1", "0", "0", "0", "1", "0", "0", "1", "1", 
      "0"},
     {"0", "1", "1", "0", "0", "0", "1", "0", "0", "1", "1", "1", "0", "1", 
      "0"},
     {"1", "0", "0", "0", "0", "1", "0", "0", "1", "0", "1", "1", "1", "0", 
      "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", 
      "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[
   SparseArray[
    Automatic, {15, 15}, 0, {
     1, {{0, 4, 10, 16, 21, 23, 27, 30, 35, 39, 45, 50, 56, 63, 69, 70}, {{
       3}, {6}, {10}, {14}, {3}, {5}, {7}, {9}, {12}, {13}, {1}, {2}, {4}, {
       8}, {11}, {13}, {3}, {6}, {8}, {10}, {12}, {2}, {9}, {1}, {4}, {12}, {
       14}, {2}, {8}, {13}, {3}, {4}, {7}, {10}, {11}, {2}, {5}, {10}, {14}, {
       1}, {4}, {8}, {9}, {12}, {13}, {3}, {8}, {13}, {14}, {15}, {2}, {4}, {
       6}, {10}, {13}, {14}, {2}, {3}, {7}, {10}, {11}, {12}, {14}, {1}, {
       6}, {9}, {11}, {12}, {13}, {11}}}, {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1}}]]]]], "Output",
 CellChangeTimes->{3.8665616767118454`*^9, 3.8665617122185183`*^9},
 CellLabel->
  "Out[135]//MatrixForm=",ExpressionUUID->"3eab7195-edde-447b-95bb-\
83affdfcfc41"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"randomMixedGraph", "=", 
  RowBox[{"RandomMixedGraph", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"15", ",", "35"}], "}"}], ",", "0.5"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8665617163006535`*^9, 3.8665617290297155`*^9}},
 CellLabel->
  "In[136]:=",ExpressionUUID->"200cadf4-e8d8-4ac6-95eb-1943ffc6dede"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 
      15}, CompressedData["
1:eJxTTMoPymNmYGBgAmJ+KMYGGHGwCQFy9RFrLiMOc/GJ0wPgsoeRgDwu/eS6
m17+HaxguPkfOV1jSyOk5DdCeYhagFBeINUsWpUptAS0DmNaAErdO9T8iw4A
n8wB+Q==
      "], {
      EdgeWeight -> {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}, 
       GraphLayout -> {"Dimension" -> 2}}]]}, 
    TagBox[
     GraphicsGroupBox[
      GraphicsComplexBox[{{1.3004539154754176`, 0.9407913364085508}, {
       3.1039773357815728`, 1.650736360241153}, {2.6711628943126517`, 
       2.256961501504307}, {3.219461104185492, 0.}, {3.5882968156154558`, 
       1.1632794653499094`}, {2.161506871384599, 0.07120240512471654}, {
       2.1869453395318583`, 0.4344459292815186}, {2.5837686689121995`, 
       0.8547082342617682}, {0., 1.3780650829967862`}, {0.06250535028660575, 
       0.3453645950576155}, {3.716082064554927, 0.7404075755772577}, {
       2.989531016529962, 1.192862283038383}, {3.060152243907053, 
       0.47024376545522817`}, {1.9002159834725807`, 2.1189952808126247`}, {
       2.2893212663861155`, 1.3081664744409802`}}, {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
         {Arrowheads[0.], ArrowBox[{1, 7}, 0.035163609554276026`]}, 
         {Arrowheads[0.], ArrowBox[{1, 8}, 0.035163609554276026`]}, 
         {Arrowheads[0.], ArrowBox[{1, 10}, 0.035163609554276026`]}, 
         {Arrowheads[0.], ArrowBox[{1, 14}, 0.035163609554276026`]}, 
         {Arrowheads[0.], ArrowBox[{1, 15}, 0.035163609554276026`]}, 
         ArrowBox[{1, 9}, 0.035163609554276026`], 
         {Arrowheads[0.], ArrowBox[{1, 6}, 0.035163609554276026`]}, 
         {Arrowheads[0.], ArrowBox[{2, 3}, 0.035163609554276026`]}, 
         {Arrowheads[0.], ArrowBox[{2, 11}, 0.035163609554276026`]}, 
         {Arrowheads[0.], ArrowBox[{2, 13}, 0.035163609554276026`]}, 
         {Arrowheads[0.], ArrowBox[{2, 14}, 0.035163609554276026`]}, 
         ArrowBox[{2, 8}, 0.035163609554276026`], 
         {Arrowheads[0.], ArrowBox[{2, 5}, 0.035163609554276026`]}, 
         ArrowBox[{3, 15}, 0.035163609554276026`], 
         {Arrowheads[0.], ArrowBox[{3, 14}, 0.035163609554276026`]}, 
         {Arrowheads[0.], ArrowBox[{3, 12}, 0.035163609554276026`]}, 
         {Arrowheads[0.], ArrowBox[{4, 7}, 0.035163609554276026`]}, 
         {Arrowheads[0.], ArrowBox[{4, 13}, 0.035163609554276026`]}, 
         ArrowBox[{4, 6}, 0.035163609554276026`], 
         ArrowBox[{4, 11}, 0.035163609554276026`], 
         {Arrowheads[0.], ArrowBox[{4, 5}, 0.035163609554276026`]}, 
         {Arrowheads[0.], ArrowBox[{5, 11}, 0.035163609554276026`]}, 
         {Arrowheads[0.], ArrowBox[{5, 12}, 0.035163609554276026`]}, 
         {Arrowheads[0.], ArrowBox[{5, 15}, 0.035163609554276026`]}, 
         ArrowBox[{6, 13}, 0.035163609554276026`], 
         ArrowBox[{6, 15}, 0.035163609554276026`], 
         {Arrowheads[0.], ArrowBox[{6, 7}, 0.035163609554276026`]}, 
         ArrowBox[{7, 12}, 0.035163609554276026`], 
         {Arrowheads[0.], ArrowBox[{7, 8}, 0.035163609554276026`]}, 
         {Arrowheads[0.], ArrowBox[{8, 12}, 0.035163609554276026`]}, 
         {Arrowheads[0.], ArrowBox[{8, 13}, 0.035163609554276026`]}, 
         ArrowBox[{8, 11}, 0.035163609554276026`], 
         {Arrowheads[0.], ArrowBox[{11, 12}, 0.035163609554276026`]}, 
         {Arrowheads[0.], ArrowBox[{12, 13}, 0.035163609554276026`]}, 
         ArrowBox[{12, 15}, 0.035163609554276026`]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.035163609554276026], DiskBox[2, 0.035163609554276026], 
         DiskBox[3, 0.035163609554276026], DiskBox[4, 0.035163609554276026], 
         DiskBox[5, 0.035163609554276026], DiskBox[6, 0.035163609554276026], 
         DiskBox[7, 0.035163609554276026], DiskBox[8, 0.035163609554276026], 
         DiskBox[9, 0.035163609554276026], DiskBox[10, 0.035163609554276026], 
         DiskBox[11, 0.035163609554276026], DiskBox[12, 0.035163609554276026],
          DiskBox[13, 0.035163609554276026], 
         DiskBox[14, 0.035163609554276026], 
         DiskBox[15, 0.035163609554276026]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.8665617299593744`*^9},
 CellLabel->
  "Out[136]=",ExpressionUUID->"29adabb2-426b-43d1-9b21-5499d72c816f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AdjacencyMatrix", "[", "randomMixedGraph", "]"}]], "Input",
 CellChangeTimes->{{3.8665617313531075`*^9, 3.866561735924261*^9}},
 CellLabel->
  "In[137]:=",ExpressionUUID->"4edf6532-414a-43fa-94cd-da34d5feb8b7"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["SparseArray",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"], 
               ImageSizeCache -> {
                10.869016023673117`, {0., 10.869016023673117`}}], Appearance -> 
              None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             RasterBox[CompressedData["
1:eJxTTMoPSmVmYGDgh2IQe2e3gevOLS/sb7gvX1cz7a39yYjcf/Ff39tble+O
m6V0zn6O8aIt5j+u2L9YpPg4cNUrksVpbf5QEccVDqPhM7DhP1DpdqibP9ji
a7CZM9jUD/V0MppfRsVHxUfTM7XaV4Ot/Bzq5dtoehtY/w629u1QER8q5cNQ
KQ+HSvocaemfWuE/VPpTg82coT7+Q63yZLCVP7jEAXdpbrQ=
              "], {{0, 0}, {15, 15}}, {0, 1}], AspectRatio -> 1, Axes -> 
             False, Frame -> False, FrameLabel -> {None, None}, FrameStyle -> 
             Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], 
             FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
             Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], 
             Method -> {
              "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
               Automatic, 
               "DefaultGraphicsInteraction" -> {
                "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                 "Effects" -> {
                  "Highlight" -> {"ratio" -> 2}, 
                   "HighlightPoint" -> {"ratio" -> 2}, 
                   "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
               "DefaultPlotStyle" -> Automatic, "DomainPadding" -> 
               Scaled[0.02], "RangePadding" -> Scaled[0.05]}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Specified elements: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["53", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"15", ",", "15"}], "}"}], "SummaryItem"]}]}}, 
             AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
        GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"], 
               ImageSizeCache -> {
                10.869016023673117`, {0., 10.869016023673117`}}], Appearance -> 
              None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             RasterBox[CompressedData["
1:eJxTTMoPSmVmYGDgh2IQe2e3gevOLS/sb7gvX1cz7a39yYjcf/Ff39tble+O
m6V0zn6O8aIt5j+u2L9YpPg4cNUrksVpbf5QEccVDqPhM7DhP1DpdqibP9ji
a7CZM9jUD/V0MppfRsVHxUfTM7XaV4Ot/Bzq5dtoehtY/w629u1QER8q5cNQ
KQ+HSvocaemfWuE/VPpTg82coT7+Q63yZLCVP7jEAXdpbrQ=
              "], {{0, 0}, {15, 15}}, {0, 1}], AspectRatio -> 1, Axes -> 
             False, Frame -> False, FrameLabel -> {None, None}, FrameStyle -> 
             Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], 
             FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
             Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], 
             Method -> {
              "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
               Automatic, 
               "DefaultGraphicsInteraction" -> {
                "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                 "Effects" -> {
                  "Highlight" -> {"ratio" -> 2}, 
                   "HighlightPoint" -> {"ratio" -> 2}, 
                   "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
               "DefaultPlotStyle" -> Automatic, "DomainPadding" -> 
               Scaled[0.02], "RangePadding" -> Scaled[0.05]}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Specified elements: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["53", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"15", ",", "15"}], "}"}], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Default: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Density: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0.23555555555555555`", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Elements:\"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"\"", "SummaryItem"]}]}, {
               TagBox[
                TagBox[
                 GridBox[{{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "7"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "1", BaselinePosition -> Baseline, ContentPadding -> 
                    False, FrameMargins -> 0, 
                    ImageSize -> {{1, 300}, Automatic}, StripOnInput -> True],
                     LineBreakWithin -> False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "8"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "1", BaselinePosition -> Baseline, ContentPadding -> 
                    False, FrameMargins -> 0, 
                    ImageSize -> {{1, 300}, Automatic}, StripOnInput -> True],
                     LineBreakWithin -> False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "10"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "1", BaselinePosition -> Baseline, ContentPadding -> 
                    False, FrameMargins -> 0, 
                    ImageSize -> {{1, 300}, Automatic}, StripOnInput -> True],
                     LineBreakWithin -> False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "14"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "1", BaselinePosition -> Baseline, ContentPadding -> 
                    False, FrameMargins -> 0, 
                    ImageSize -> {{1, 300}, Automatic}, StripOnInput -> True],
                     LineBreakWithin -> False]}]}, {
                    ItemBox[
                    "\"\[VerticalEllipsis]\"", Alignment -> Center, 
                    StripOnInput -> False]}}, DefaultBaseStyle -> "Column", 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"], "SummaryItem"]}}, AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  SparseArray[
  Automatic, {15, 15}, 0, {
   1, {{0, 7, 13, 17, 22, 25, 28, 32, 36, 36, 37, 40, 45, 49, 51, 53}, {{7}, {
     8}, {10}, {14}, {15}, {9}, {6}, {3}, {11}, {13}, {14}, {8}, {5}, {2}, {
     15}, {14}, {12}, {7}, {13}, {6}, {11}, {5}, {11}, {12}, {15}, {13}, {
     15}, {7}, {1}, {4}, {12}, {8}, {1}, {12}, {13}, {11}, {1}, {2}, {5}, {
     12}, {5}, {8}, {11}, {13}, {15}, {2}, {4}, {8}, {12}, {1}, {2}, {1}, {
     5}}}, {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
     1, 1, 1, 1, 1, 1}}],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8665617363833184`*^9},
 CellLabel->
  "Out[137]=",ExpressionUUID->"461e5698-9091-400e-985d-1ae31d68a5d3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SymmetricMatrixQ", "[", 
  RowBox[{"AdjacencyMatrix", "[", "randomMixedGraph", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8665617388864517`*^9, 3.8665617417157764`*^9}},
 CellLabel->
  "In[138]:=",ExpressionUUID->"8dbbd73a-f7bc-4c31-b678-cc7f1cedd150"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.866561742029853*^9},
 CellLabel->
  "Out[138]=",ExpressionUUID->"ce2d59c4-0286-4a60-beba-48728cb36d71"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Head", "Section",
 CellChangeTimes->{{3.866561836106992*^9, 
  3.8665618366140223`*^9}},ExpressionUUID->"400dea35-f5e4-4044-9c6f-\
e1c6973898e6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EdgeList", "[", "randomMixedGraph", "]"}]], "Input",
 CellChangeTimes->{{3.866561838647194*^9, 3.8665618421109533`*^9}},
 CellLabel->
  "In[139]:=",ExpressionUUID->"265e3a9c-ebb3-4829-bc7a-cf4ef26bee64"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"1", "\[DirectedEdge]", "9"}], ",", 
   RowBox[{"1", "\[DirectedEdge]", "6"}], ",", 
   RowBox[{"2", "\[DirectedEdge]", "8"}], ",", 
   RowBox[{"2", "\[DirectedEdge]", "5"}], ",", 
   RowBox[{"3", "\[DirectedEdge]", "15"}], ",", 
   RowBox[{"3", "\[DirectedEdge]", "14"}], ",", 
   RowBox[{"3", "\[DirectedEdge]", "12"}], ",", 
   RowBox[{"4", "\[DirectedEdge]", "6"}], ",", 
   RowBox[{"4", "\[DirectedEdge]", "11"}], ",", 
   RowBox[{"4", "\[DirectedEdge]", "5"}], ",", 
   RowBox[{"6", "\[DirectedEdge]", "13"}], ",", 
   RowBox[{"6", "\[DirectedEdge]", "15"}], ",", 
   RowBox[{"6", "\[DirectedEdge]", "7"}], ",", 
   RowBox[{"7", "\[DirectedEdge]", "12"}], ",", 
   RowBox[{"7", "\[DirectedEdge]", "8"}], ",", 
   RowBox[{"8", "\[DirectedEdge]", "11"}], ",", 
   RowBox[{"12", "\[DirectedEdge]", "15"}], ",", 
   RowBox[{"1", "\[UndirectedEdge]", "7"}], ",", 
   RowBox[{"1", "\[UndirectedEdge]", "8"}], ",", 
   RowBox[{"1", "\[UndirectedEdge]", "10"}], ",", 
   RowBox[{"1", "\[UndirectedEdge]", "14"}], ",", 
   RowBox[{"1", "\[UndirectedEdge]", "15"}], ",", 
   RowBox[{"2", "\[UndirectedEdge]", "3"}], ",", 
   RowBox[{"2", "\[UndirectedEdge]", "11"}], ",", 
   RowBox[{"2", "\[UndirectedEdge]", "13"}], ",", 
   RowBox[{"2", "\[UndirectedEdge]", "14"}], ",", 
   RowBox[{"4", "\[UndirectedEdge]", "7"}], ",", 
   RowBox[{"4", "\[UndirectedEdge]", "13"}], ",", 
   RowBox[{"5", "\[UndirectedEdge]", "11"}], ",", 
   RowBox[{"5", "\[UndirectedEdge]", "12"}], ",", 
   RowBox[{"5", "\[UndirectedEdge]", "15"}], ",", 
   RowBox[{"8", "\[UndirectedEdge]", "12"}], ",", 
   RowBox[{"8", "\[UndirectedEdge]", "13"}], ",", 
   RowBox[{"11", "\[UndirectedEdge]", "12"}], ",", 
   RowBox[{"12", "\[UndirectedEdge]", "13"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8665618426284075`*^9},
 CellLabel->
  "Out[139]=",ExpressionUUID->"6cc5ea4a-9444-48a0-9f49-52b72df32529"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{
   RowBox[{"EdgeList", "[", "randomMixedGraph", "]"}], ",", "_DirectedEdge"}],
   "]"}]], "Input",
 CellChangeTimes->{{3.8665618456116667`*^9, 3.8665618574580793`*^9}},
 CellLabel->
  "In[140]:=",ExpressionUUID->"b45a049b-fedd-4be8-8d85-a705d2431937"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"1", "\[DirectedEdge]", "9"}], ",", 
   RowBox[{"1", "\[DirectedEdge]", "6"}], ",", 
   RowBox[{"2", "\[DirectedEdge]", "8"}], ",", 
   RowBox[{"2", "\[DirectedEdge]", "5"}], ",", 
   RowBox[{"3", "\[DirectedEdge]", "15"}], ",", 
   RowBox[{"3", "\[DirectedEdge]", "14"}], ",", 
   RowBox[{"3", "\[DirectedEdge]", "12"}], ",", 
   RowBox[{"4", "\[DirectedEdge]", "6"}], ",", 
   RowBox[{"4", "\[DirectedEdge]", "11"}], ",", 
   RowBox[{"4", "\[DirectedEdge]", "5"}], ",", 
   RowBox[{"6", "\[DirectedEdge]", "13"}], ",", 
   RowBox[{"6", "\[DirectedEdge]", "15"}], ",", 
   RowBox[{"6", "\[DirectedEdge]", "7"}], ",", 
   RowBox[{"7", "\[DirectedEdge]", "12"}], ",", 
   RowBox[{"7", "\[DirectedEdge]", "8"}], ",", 
   RowBox[{"8", "\[DirectedEdge]", "11"}], ",", 
   RowBox[{"12", "\[DirectedEdge]", "15"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8665618578057256`*^9},
 CellLabel->
  "Out[140]=",ExpressionUUID->"4d32ac28-3a6d-477d-b673-fa7f644ef064"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{
   RowBox[{"EdgeList", "[", "randomMixedGraph", "]"}], ",", 
   "_UndirectedEdge"}], "]"}]], "Input",
 CellChangeTimes->{{3.8665618456116667`*^9, 3.866561870107608*^9}},
 CellLabel->
  "In[141]:=",ExpressionUUID->"228b06d7-ca1c-4afd-955d-7efd774aa6dc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"1", "\[UndirectedEdge]", "7"}], ",", 
   RowBox[{"1", "\[UndirectedEdge]", "8"}], ",", 
   RowBox[{"1", "\[UndirectedEdge]", "10"}], ",", 
   RowBox[{"1", "\[UndirectedEdge]", "14"}], ",", 
   RowBox[{"1", "\[UndirectedEdge]", "15"}], ",", 
   RowBox[{"2", "\[UndirectedEdge]", "3"}], ",", 
   RowBox[{"2", "\[UndirectedEdge]", "11"}], ",", 
   RowBox[{"2", "\[UndirectedEdge]", "13"}], ",", 
   RowBox[{"2", "\[UndirectedEdge]", "14"}], ",", 
   RowBox[{"4", "\[UndirectedEdge]", "7"}], ",", 
   RowBox[{"4", "\[UndirectedEdge]", "13"}], ",", 
   RowBox[{"5", "\[UndirectedEdge]", "11"}], ",", 
   RowBox[{"5", "\[UndirectedEdge]", "12"}], ",", 
   RowBox[{"5", "\[UndirectedEdge]", "15"}], ",", 
   RowBox[{"8", "\[UndirectedEdge]", "12"}], ",", 
   RowBox[{"8", "\[UndirectedEdge]", "13"}], ",", 
   RowBox[{"11", "\[UndirectedEdge]", "12"}], ",", 
   RowBox[{"12", "\[UndirectedEdge]", "13"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8665618704204435`*^9},
 CellLabel->
  "Out[141]=",ExpressionUUID->"945403c6-a5ca-4562-aee4-137877b07749"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"SimplifiedModel", "[", 
       RowBox[{"g_", "?", "GraphQ"}], "]"}], ":=", "\[IndentingNewLine]", 
      RowBox[{"Block", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "res", ",", "n", ",", "m", ",", "a", ",", "b", ",", "u", ",", "v"}], 
         "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"n", "=", 
          RowBox[{"VertexCount", "[", "g", "]"}]}], ";", 
         RowBox[{"(*", 
          RowBox[{"I", " ", "understand", " ", "this", " ", "line"}], "*)"}], 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"m", "=", 
          RowBox[{"Transpose", "[", 
           RowBox[{"IncidenceMatrix", "[", "g", "]"}], "]"}]}], ";", 
         RowBox[{"(*", 
          RowBox[{"I", " ", 
           RowBox[{"don", "'"}], "t", " ", "understand", " ", "what", " ", 
           "this", " ", "line", " ", "is", " ", "for", " ", "I", " ", 
           "understand", " ", "what", " ", "the", " ", "incidence", " ", 
           "matrix", " ", "represents", " ", "and", " ", "what", " ", "the", 
           " ", "transpose", " ", "of", " ", "a", " ", "matrix", " ", 
           "represents", " ", "but", " ", "I", " ", 
           RowBox[{"don", "'"}], "t", " ", "understand", " ", "what", " ", 
           "this", " ", 
           RowBox[{"does", "."}]}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"a", "=", 
            RowBox[{"UnitStep", "[", 
             RowBox[{"m", "-", "1"}], "]"}]}], ";", 
           RowBox[{"(*", 
            RowBox[{
            "remove", " ", "negative", " ", "values", " ", "from", " ", 
             "directed", " ", 
             RowBox[{"edges", "/", 
              RowBox[{"arcs", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
           RowBox[{"b", "=", 
            RowBox[{"a", "-", "m"}]}], ";"}], 
          RowBox[{"(*", "constraints", "*)"}], "*)"}], "\[IndentingNewLine]", 
         
         RowBox[{"res", "=", 
          RowBox[{"LinearOptimization", "[", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"Total", "[", 
              RowBox[{"u", "+", "v"}], "]"}]}], 
            RowBox[{"(*", 
             RowBox[{
             "I", " ", "understand", " ", "this", " ", "objective", " ", 
              "function", " ", "and", " ", "the", " ", "linear", " ", 
              "optimization"}], "*)"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"u", "+", "v"}], " ", "\[VectorGreaterEqual]", "1"}], 
              RowBox[{"(*", 
               RowBox[{
               "I", " ", "understand", " ", "this", " ", "as", " ", 
                "saying"}], " ", "*)"}], 
              RowBox[{"(*", 
               RowBox[{",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"a", ".", "u"}], " ", "+", 
                  RowBox[{"b", ".", "v"}]}], "\[VectorLessEqual]", "1"}], ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"a", ".", "v"}], " ", "+", 
                  RowBox[{"b", ".", "u"}]}], "\[VectorLessEqual]", "1"}], ",", 
                RowBox[{
                 RowBox[{"Total", "[", "u", "]"}], "\[VectorGreaterEqual]", 
                 "1"}], ",", 
                RowBox[{
                 RowBox[{"Total", "[", "v", "]"}], "\[VectorGreaterEqual]", 
                 "1"}], ",", 
                RowBox[{"u", "\[VectorGreaterEqual]", "0"}], ",", 
                RowBox[{"v", "\[VectorGreaterEqual]", "0"}], ",", 
                RowBox[{"u", "\[VectorLessEqual]", "1"}], ",", 
                RowBox[{"v", "\[VectorLessEqual]", "1"}]}], "*)"}], ",", 
              RowBox[{"u", "\[VectorGreaterEqual]", "0"}], ",", 
              RowBox[{"v", "\[VectorGreaterEqual]", "0"}], ",", 
              RowBox[{"Sum", "[", 
               RowBox[{
                RowBox[{"u", "-", "v"}], ",", 
                RowBox[{"{", 
                 RowBox[{"k", ",", 
                  RowBox[{
                   RowBox[{"Select", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"First", "[", "#", "]"}], "==", "1"}], "&"}], 
                    "]"}], "[", 
                   RowBox[{"Cases", "[", 
                    RowBox[{
                    RowBox[{"EdgeList", "@", "randomMixedGraph"}], ",", 
                    "_UndirectedEdge"}], "]"}], "]"}]}], "}"}]}], "]"}], ",", 
              
              RowBox[{"{", 
               RowBox[{
                RowBox[{"u", "\[Element]", 
                 RowBox[{"Vectors", "[", 
                  RowBox[{"n", ",", "Integers"}], "]"}]}], ",", 
                RowBox[{"v", "\[Element]", 
                 RowBox[{"Vectors", "[", 
                  RowBox[{"n", ",", "Integers"}], "]"}]}]}], 
               "}"}]}]}]}]}]}]}]}]}]}], "]"}], "\[IndentingNewLine]"}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"VertexList", "[", "g", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Position", "[", 
        RowBox[{
         RowBox[{"Total", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"u", ",", "v"}], "}"}], " ", "/.", " ", "res"}], "]"}], 
         ",", "0"}], "]"}], "]"}]}]}], "*)"}], "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.8665619797631454`*^9, 3.8665620676445284`*^9}, {
   3.8665621015033717`*^9, 3.8665621788844004`*^9}, {3.8665623858119345`*^9, 
   3.8665624477997265`*^9}, 
   3.8665625981326976`*^9},ExpressionUUID->"f3285e79-f284-4954-9e63-\
fcedd3f2890b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SimplifiedModel", "[", "undirectedgraph", "]"}]], "Input",
 CellChangeTimes->{{3.86656207046673*^9, 3.8665620770372267`*^9}, {
  3.866562110170314*^9, 3.8665621133379607`*^9}},
 CellLabel->
  "In[154]:=",ExpressionUUID->"ddcca4b3-51bd-49e0-a1f4-a6665547646a"],

Cell[BoxData[
 TemplateBox[{
  "LinearOptimization", "ubnd", "\"The problem is unbounded.\"", 2, 154, 19, 
   19443120556376979017, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.866562124099141*^9, 3.866562180500842*^9}},
 CellLabel->
  "During evaluation of \
In[154]:=",ExpressionUUID->"46739c59-d5ff-4280-87f4-068bc45aa3d1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"u", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
      "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
      "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
      "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
      "Indeterminate", ",", "Indeterminate", ",", "Indeterminate"}], "}"}]}], 
   ",", 
   RowBox[{"v", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
      "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
      "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
      "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
      "Indeterminate", ",", "Indeterminate", ",", "Indeterminate"}], 
     "}"}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8665620773674927`*^9, {3.866562113663086*^9, 3.8665621814469585`*^9}},
 CellLabel->
  "Out[154]=",ExpressionUUID->"f11efeeb-d7cd-4846-99d5-4a23343a9230"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Names", "[", "\"\<*Degree*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8665622212460203`*^9, 3.866562225741795*^9}, 
   3.8665623995564795`*^9},
 CellLabel->
  "In[156]:=",ExpressionUUID->"e6db30ef-4f0f-475f-89f1-5594261fa27a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Degree\"\>", ",", "\<\"DegreeCentrality\"\>", 
   ",", "\<\"DegreeGraphDistribution\"\>", ",", "\<\"DegreeLexicographic\"\>",
    ",", "\<\"DegreeReverseLexicographic\"\>", 
   ",", "\<\"MeanDegreeConnectivity\"\>", ",", "\<\"MeanNeighborDegree\"\>", 
   ",", "\<\"SplineDegree\"\>", ",", "\<\"VertexDegree\"\>", 
   ",", "\<\"VertexInDegree\"\>", ",", "\<\"VertexOutDegree\"\>", 
   ",", "\<\"$MaxRootDegree\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.8665622260362387`*^9, 3.8665623998986845`*^9},
 CellLabel->
  "Out[156]=",ExpressionUUID->"6281cd6c-4243-40d9-81e5-7e871edde198"]
}, Open  ]],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsnQeUFUXThslBQBAFFJAcBAUURFCygoLknLOABAlK5iOJIDlLEDALgkpU
CQoKCEqSIDmDAZTkJyqCyvzPP3Wo09/MvXcvu5ddWPs9Z/fM7enpUF1d9XaY
npxtutVpnyhBggQvpOBfndZ9Kjz/fOt+ddPxo37XFzp26NrumSpde7br0O75
km0SE1iTfzn5+//rOg0a16xTv1rNOpWr1ahUuWqFSk+VrfDEY2XKXbWwsLCw
sLCwsIguglEsx8LCwsLCwsLCIrqwFMvCwsLCwsLCIuKwFMvCwsLCwsLCIuKw
FMvCwsLCwsLCIuKwFMvCwsLCwsLCIuKwFMvCwsLCwsLCIuKwFMvCwsLCwsLC
IuKwFMvCwsLCwsLCIuKwFMvCwsLCwsLCIuKwFMvCwsLCwsLCIuKwFMvCwsLC
wsLCIuKwFMvCwsLCwsLCIuKwFMvCwsLCwsLCIuKwFMvCwsLCwsLCIuKwFMvC
wsLCwsLCIuKwFMvCwsLCwsLCIuKwFMvCwsLCwsLCIuKwFMvCwsLCwsLCIuKw
FMvCwsLCwsLCIuKwFMvCwsLCwsLCIuKwFMvCwsLCwsLCIuKwFMvCwsLCwsLC
IuKwFMvCwsLCwsLCIuKwFMvCwsLCwsLCIuKwFMvCwsLCwsLCIuKwFMvCwsLC
wsLCIuKwFCsWcDVseCLHVSGDhdy6iEZdrly5ssXFjh07Aj4Vfpq3uiRDa6yF
idiU1b9HAy0sblHEY4q1adOmGddw4sSJ0JGxPDjTdu3aFXVRoUKFYcOGXbhw
ISIl+fTTTxOEgXLlyhG5cePG8rNHjx4RyT1MUHfJlwsJefXVVyXkwQcfjM2S
3AhkzJhR6vLRRx9FGXnr1q21a9dOmjSpNs3tt9/+zDPPHD161Iz20ksvyd0n
n3wydIL169eXmL169YpRNeIIHTt2DKix+fPnr1Sp0vz5863jVrz88ssBZZUz
Z046+PTp0yMoqz///FMSR1dDx6QLS8wOHTpEKncLC4soEV8p1q+//qpeFXzy
ySchImP0Bg4c6LeKd9555/bt22NeGEuxrgvHjx8veg20Y0TSDJNioQkQJ5Nc
mUiSJAl0QiNbiqVo1arVP//8E/F8V65cKWpQo0aNiCd+gxCMYimeeuqpS5cu
RSQvS7EsLG5yxFeK1bVrV9OshaZYc+fO1Zi5c+cuVqyYOtlMmTJdvHgxhoX5
+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
DSK6devWtWvXerY97927V0L0LMczZ85oMQJ+jIzcKQNuHaog3yiUbUsmcBCT
J08uV64c0fLly1epUqUpU6aYW7Mc9+ts1atXh6vkzZtXZ7cc1zV36dKFmkp9
g32jcOXKlVWrVr377rsLFy6MTzl79uybb77p14RggOxNmDABn8Xj0GAyatCg
gXkel2Dbtm2SJmrmEYKE6/lOn376qYSon9qxY4eELF261Hz2vffek3DzHXx8
MZRMW5kxwrx58zyFQc54xlq1aqlwypYtO3HiRA/ZhkpBdeBUEke+URilQHCa
UirIeZSRHXfJDzpE+lB3/rdp02bXrl2eODQKYw3qogWuWLHinDlzPJqwefNm
WGimTJngyXJCBVKVwsgnCwUaKFuPBFBKs6cLEB0ti9rDEyDJtDUdXLVaqCYy
kZ+yci1AcyQQXQpRd+3dy5YtCy2ly5cva77m+EKB0Hr37o1k0qdPX7BgQX+7
Iyt5fNasWSjA0KFD5aSUMmXKyIyfgi4sMWVvgII+3r59e20CbIK5Nctxaao8
aA4uYJ4SeOrUKQ2k0f2BFhb/csRvimVhYWFhYWFhESewFMvCwsLCwsLCIuKw
FMvCwsLCwsLCIuKwFMvCwsLCwsLCIuKwFMvCwsLCwsLCIuKwFMvCwsLCwsLC
IuKwFMvCwsLCwsLCIuKwFMvCwsLCwsLCIuKwFMvCwsLCwsLCIuKwFMvCwsLC
wsLCIuKwFMvCwsLCwsLCIuKwFMvCwsLCwsLCIuKwFMvCwsLCwsLCIuKwFMvC
wsLCwsLCIuKwFMvCwsLCwsLCIuKwFMvCwsLCwsLCIuKwFMvCwsLCwsLCIuKw
FCve45dffnnjjTeee+65OnXq1KxZ88UXX9yxY4feXbp0afLkyRcsWBCHJbx5
MHPmzKRJkw4aNCiuCxIHWL58+W233fbMM89EGfPEiROZMmUqVKiQ/Bw9ejQq
9O23397gAgbAhg0b0qRJg2LHcr5LlixJlixZv379rvfBP/74Y9GiRZ07d27U
qFH79u1nzZp19uzZG1FC8MMPPwwYMECuL126NHbs2Pfff5+ePmXKFDPaihUr
sA/cmjt3bjjJXr58uUqVKr/++qv83L9//5AhQyJbctC6det06dJpLiZOnTpV
oECB7NmzRzzTmxCHDh2icw0dOjSuCxL36Nq16+bNm+l0W7ZsieuyXAcsxYrH
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
PqVFPTxxFi1aRLjOPB84cACmx4N+/Tl69OiQIUPkmlorxQJjx44lEbiZ/KS3
mk68WbNmiRMn5nFJv2DBghH3yJZiefDII48Eo1gMGCdPnhzD9E2KFb9hKZZF
QIRJsQYNGvTSSy9FPHesaMCtXPRKhtV0f/zU0GvQobEf8DFGxOvXr69SpUrN
mjWjzJdMdbwsiCHFwm4nTJjw0KFDnnDMVLJkySK7w7Z+/frhr7FCTXH3/nDE
lTZt2vPnz/tv4dZlI1mlSpWu90vBkcVvv/2WOnXq119/XX7SyunSpQt/GxI+
6+67747G3rwY4vjx4/Qp3ZF+9uxZfqLA15XIxIkTW7Ro4Q+HX40fPz4CpbyG
H3/8MVu2bDovFIxigQcffPCee+4R1gfvhaKfPn06YJq//PKLXHgo1ty5c0lc
51Q9FKt3797c3bRpk/wsVarUwoULY1K1FStWTJgwwQyxFMuDEBSLEaulWOHD
Uqx4jNWrVw8ePLhjx46m592/fz8mGneMzdRA3A1kqV27di1btpR1AaFYly5d
GjVq1NNPP80jAc0mRthjdbG0ffr0uf/++8MZab7zzjv0Zf/cyzPPPEPJPYHL
ly8vUqSIub4WJSh8z549uXjuueeipFjLli3DcefNmxf6wYMSKBTrm2++adKk
CXJ48803Nf53333HLQbmnTp1CriJHXTt2rVAgQL+cGqHeBE7JHb06NGIS94n
mj9/Ptdff/01drVRo0YyUcM1cfr374/fEUdz9erVGTNmdOvWjVLhGvDdlA2r
VaZMGf2EPXSxX79+FKB169bSFhcvXhwxYgStLBuBPGQS7N27l1LxSAgp4SWR
0s8//ww/JGVKe/DgQcclDI0bN9aZpd27d5coUUIa6/3333/sscfgAPr2IjqD
kNu2bYv3RAKyCokmdO7cWSIcPXqU+uKIqY5/8WvlypWU88iRI/Lz888/5yd+
03E5bZcuXdq0aWPuzoKMVa5cuUKFCr/++uuHH36IB0+ePDkSg64Qp2/fviKK
kydPov/lypVD4Gg+Ywek9Oyzz3pypweRCz1Ifr722muI/TcXKAMCoSsFFB1N
ljJlShUCpUqcODGCgmXBUhApOgB/kBVtGA7CoYmhjsTRRCpWrLhgwQKKRwV5
auzYsY77ftbtt9+upBFeRDgCpJCIGm2h3ama4+5ZokaIGo1FK/CVXNerV88/
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
mN2/DTfVTnILi3gAS7Es3n77bfmoVpQYNmyY53hni5sE0IM2bdoEfIMg5pg8
eXKWLFlif7cJlRo0aFDatGmj/LhkTAB/Q7HTp08fa5uO/vnnn759+wbcjnhd
gBbqAV8xxIkTJxo1avTII49EJDULCwuBpVgWlSpV8n9BPiAyZsz4+OOP3+jy
WEQDe/bsSZIkieejY5HCunXr9HzpWMbs2bPJ+oZSLMf9Jia5xBrF+v333+GN
nk9EXS+uXr3aunVr88s7McFvv/1WrVo1PSHcwsIiIrAUy+LixYthujCihfg+
r0Xc4vTp0+ah35FF4sSJ44RiHTp0KBYolnz/OjZfnTt37pznG0/XC/mq3aOP
PhqpIr366quWYllYRBaWYllYWEQJS7FuKvzxxx+FChXq3Lmz/7tU0YalWBYW
EYelWBb/Nvz9999Tp04N9tkdvHnLli1jt0Q3Hd5//33z87WOpVg3Gfq5mDx5
ctKkScN/6ocffujQoUOwu5GiWNA/elCUH9WysPg3wFKs+ArMac+ePXfs2DFn
zpyaNWs+88wzZ8+e/fnnn3v37s3Pvn37yqLS1atXN23aJB+md9zvFIwdOxa/
9vHHH9d0sXHjRrlF/E8++US/lXP69GmMPM++9dZbtWrVatOmDSHnzp3r378/
T5G1nOj+2muvdevWTb43DUaMGNGuXbtx48bJTzJq1arVmTNnRo0axVPPP/88
llm+4spPovm/sOO4J/2SLBmRr3lUqRwaT9atW7fetWuXBEKoZs6cOXDgwLZt
277++uukzwX+tGnTpi+++KJnf/iePXty5cqVOnXqF13IV+ypyNtvv012OI4h
Q4ZI4Lp160iTQsq3fhYsWEC+pCnp8MgbLjZv3ly/fv1Zs2aZuZDCxIkTEebK
lSsbNGjAU/opYcf1UC+//DIp03ASQhu98847VA2xTJo0SdJHYi+99FLz5s2X
Ll3quHtpkMmSJUsk/ldffTVy5EgCpbm7du36yy+/SGqXL1+GYc6YMaNLly6f
f/455dcvCAvICPlUq1YNCUjizjWKhbRJrVGjRtu3b1et+PDDDynV3r17mzRp
MmbMGGkgSoLEEPULL7wgItq5cycJ1q5dWz7uTN1FVdQXf/TRR+PHj+/Vqxfs
7rQLWl8oFnr7yiuvEJkm0K82e7Bt2zZapEePHkhG1ea7776jmvXq1VM1lkBK
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
z5GRJO9o6dy5c2vWrHnu3LlKlSqVKlWKQM/N6dOnw6jSpUtT/82bN4m577//
fqdOneAYVuM5M+OAWGvWrOnVqxdibdq0qR6kgmYir1y5csnJ5qBBGNKsWTNZ
4LR582b+hSHYwvHjx2lL3kGjBg6h05AucPrpp58GDRpEh+vXr0/Kg1g9P31l
UG+88QaaqYcjh0gwijqx9OTJk9Or0B9EEILKlFASGEIf9Fhnpeeff969iI6u
AlfQh3r16qEP0nOBWLCoYcOGOXLkgJ+iAJYNjXAypH6NGjVCqTwzGsBP69at
4Ric/P777y37g2IMRJTw008/teyF/TSaL18+Gh03bpzn6OA/uQBKKAZy5swZ
bh4+fBjdS506dZUqVbjwFASeASVHCTU7kwO+sXoMGcnCasyKm7NmzcL8QZhI
FtXFppAy3rVPnz7cuXz5srtybqJ1jAWVloSRqkbbhA/HJdIuCiluAUYxTJhJ
/+GA1EBowJEyrldeeeXq1auWff4yJXHs69evxzuhhzyOetNVmcDHllFarBve
Ikea4HH1AEQBTAOfgNWvXLkSXfI8uhHdLlGiRLFixTy57SaEiyYUKVKEFvfv
3y93QIxYEz4cDufOnRv7RU/0kT179sjQsPS8efP6EMunOKUJEyYkTpxYgwV2
h8PBLrp06YKxWDZawFds2bKFmwQajBE7ItDjndBbQTh4AC4kQM+fP18Ply9b
tixmbtlfMKVNm1Zi5bJly7p16xZoJofI26JFC7xciP03IRajAJsJqlm+fPlj
jz2GR8KWKUDwoqRngmzZVklUEgyGAWKt8orQTW6IxahTpkwpUEEJEDJixAiG
7G4Rp/fBBx+4awbM4FvEYTIQHJRALNjepk0bWQmMn3zooYeATzh2/GSWLFmQ
EU0fOnQoQ4YM8orTsg+fLVOmjGSCdACeEE0s+2NAghHOB1ZIaP773/9ObJKn
cNrABkevYCxZPAw8aZM4TEb3+OOP8/fs2bPAQjAYyiDlCZ1EBMvGA4888si6
descFeJXs2XLJuh64MCBPI6jBg/LB/gnTpxIkSIFOBnVgqtEHxoVD+8gms6T
Jw+/yr+EG0KhruQJMotFiwR9wvTq1auTJk1KxOEmOl+gQAGCGtDrk08+QcpE
DQK0yPrYsWOPPvooY9mxY4eCf1CQ58IhE2JhNaACuYa3YBsuCHNiL5gYeF5+
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
Tz75FHfkQyyffPLJp78CrVmzJu5O1PLJJ5/c5EMsn3zyyaf7npYsWSL7N/rk
k0/xRj7E8sknn3zyySeffAo7+RDrL0Ux2BQ0AVI8jCJQE9Ft+v5geGwoYXLg
fzbd7V7ENyVMWYSL4nl0d5GZ8dl0uNq6v3UvCPkQ6y9C169fHzFiRP/+/e92
R2JFP/30U69evcL4XaSbTp482apVK/enZ7iI5cuXh/7p35UrVwYOHDh8+PBw
d9BJdOw///lP8CN6Lfv7/QULFsSno7t48WK3bt1kg+4ERTt37qxatar7lL3Q
6fTp0yjDPQTSMP9Ro0aZ2/aGSIcPH964cWMCHynKv3DhQvOA0TgljGjFihVR
nmQdF3Tu3LkOHTrIEVdxTQcPHjR3SI4x4Qd69OgRrcNe7yfyIdZfhPbt25ch
Q4Y33njjbnckVrRjx45HH31UD4SNC5o4ceIDDzzg3qH93//+d7ly5eBhiPVs
3rxZTmELdwf/fyLq7d27F3/70ksvNW7cuH79+nXq1Fm0aFEgENW1a1fGJScY
xg8tXbo0SZIk7vOv7zqBNGBFbCBWs2bNqMFxFHVc04ULF15//fVOnTqRAoBd
GUX79u3btWtXoECBKHeHo0BERASPR7fRChUqJEqUKLw74IWdyLwqV678+OOP
x7iGzz//vHv37q1bt4a3ZEadO3eGt5hV4cKF3XtcXL16tXz58jii2PU6JiRn
rM+ePTse2hIz8YRYAwYMQAPhFdpIFhl8954NGzYkTZpUTgD/C5IPsf461KZN
m3sdYkH40jiFWEQTcJTnITjLli0LHWJBNWvWjCOIdf369bZt2+bIkYMu6U0C
DXCrRYsWno+cPXt28eLFcdGZIFSkSJEECLHOnz8fS4j13XffhXJMUlzQ6NGj
6fyePXv0DgE3lO8EgYUxgFgHDx6Mh01ZY08YQmwgllDVqlUBTuZ59M2bN/c8
kHHFihV3BWKRQD377LPxA7Fu3bpFihRoFmvr1q3o4ZgxY0KpCkTqQywfYt33
5EOsEClLliyeAXTdunXRglgNGjSIC4h17dq1559/PmfOnOaWR0Lc0dOlEwKV
LVv2voRYd5Hef/99Om8eAfzPf/4zlIOx2rVrFwOIda9QWCDWyy+/nClTJvPO
woULPY/C3LBhw12BWFD+/PnjB2JZ9hEegSDWN998gx7qgdfByYdYPsS6/+j2
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
uPsnT8manTSl71CYGBB9luXZYaktEEn/sdxAL+yEcA6hzO24a7bszw8dr6pD
oblz58qOKxAhkvQk0FJt0wkoo+RFIdg1xBd/YSeUwXzTFzMydSB08jQcOBPc
/PUplCHEWBCoLQcF2npU/XzsCcP3TPoQQSCLToDkQyyffPLJJ5/imlauXOl4
/Z06dWrPl7yByLEWy6f4p7Nnz0ZGRv7xxx9btmxJmTKlrsfzKRD5EMsnn3zy
yae4pkmTJhUpUkQnoM6fP58nT54gpzC4yYdYd51mz579wAMPrF+/XjYLvdvd
uQfIh1g++eSTTz7FNV27dq1atWrVq1efOnXqxIkTO3ToYH7UGSXt3Lnz8ccf
r1Gjxtdffx38w2Gf4o5u3boFsurYseO8efNCPBzzL04+xPLJJ5988il+6Pz5
8wcOHDCPFg2RvvnmmwN36G6txfLJp+iSD7F88sknn3zyySefwk4+xPIpvBSu
LxDjrun/2XTXu/GXpdjz5/bt23eLyXHRbpwqZOxr/uOPP6KsxFEgwZpAgu2Y
T/cr+RDrfqXIyMi2d+js2bMxqGHu3LlaQ5THYFn2BgI9e/acOXNmDNqKJV25
cqV///66r04gwsF+/fXXL7300sWLF+OiG/C5Q4cO7h2NokV08rZNIS51oJh7
13TzJ8+woq3EZ9C5fPly7969zZ2lo0u//vpr9+7dH3zwwREjRoSxY6HQb7/9
Rs/1qNmwEMzfv39/3bp1dWOuMBLSnz17tnmWcXSJ7sHn1KlTm/uCOuiXX36Z
OHGi7h7JQJo3b+7+lj9m9N13323YsCEsKvr999/jx3QrqtOnT69du9ZHXNGl
UPC2lnS7l7/g8i0fYt2vhFccNGjQfpscu9/cuHHDsRaCOzicOXPmXLp0SW8C
GOTxvHnzOo7V8KRVq1YlTpxYN82OT1qxYkXy5MmjDLtEyfbt2z/wwANxBLGA
l1S+ePHi6D547tw5OlayZMlChQrVr1//DZuI5nXq1Pn44489Ny/6v//7vzFj
xlSrVg3EWL58+apVq1KDbBJLYOVfqoqIiKC2F198kTirO8wMGzasTJky/Joh
Qwb5tWvXrqbc4462bt2aJk0az8MKQ6QWLVr8+OOPhw8fNo8UiR/as2fPk08+
6TglLZZEDHr99ddlP/kwViuEjRcuXNhxcm60aMCAAaQkKKfn4UpCW7ZsyZQp
U8uWLeVfAHCQs5+iS7Vr16a2GOwi5aZ3333XPN+qUaNGeg6UTyESKVK5cuUm
TJhAPgtebdeuHeJ28HDhwoV4JHE+5A41atRo2LChbvOOTyPQ3I2+3zXyIdb9
SkCsWbNmue8TTEuXLq0n6Vj2HphFihQpVqwYPidlypTuCSu8dCgQCypVqtRd
gViWfRxeKDMbP/zwQ9xBLMs+SyUGEEuoW7duYFQT/V6/fr1x48b58+d3bAa4
efPmLFmyAI10b0nSw3HjxvG4bEX4888/P/roo61atZJfp02blipVKt2lX440
ktMDSTOJ8o8//ngoE5WxJ/MojejSTz/9lCtXrvD2J1pEZAkvxLJse4wjiGXZ
R/bEBmKBnUJZWE60VYiFQiZLlixcEAssbZ6PGRsivUqfPr1CLDnVIiw1/0UI
RwFekgNrAN4o7ahRozxLogPZsmXT013nzZtHWJGd/H/99dcSJUrE7K3KPUo+
xLpfyRNirVmzRtJM8lO9uWzZMtH5ffv28ZMcP2rSPQGxqlWrdq9DrPHjxz/0
0EOOm2CnChUqPPPMM3IInWWLKUWKFOAxdw1vvfWWHqNToECBjh07yjXusXDh
whkzZpR5ezmhUo+BvnnzJgCsatWq8fDeJDYQi/j41FNPhbc/0aLhw4eHHWIB
hhMmxJKz5EKBWEB9hVgQyhkuiBVeypw5cwI5t+5epMmTJ8sxRtadrd2DuHoS
XvMNdfny5dOmTSuHWfztb3+rXbv2X+cVrQ+x7lfyhFh79+69ffs21jFjxgz3
I7/88guhVs42NemehlgAEvNE6ehCLFyBeQyig65cueI4zz3sEMuypUaf5fBl
0BHiyJIli+fZKJcuXSIyyrUJsSx7qoFK9u/fb7kglmUflcudBA6xYGwCh1jB
tcWTwgix3K3HBmIdOHDAh1g+CZGFYXp67mR0IVbPnj0pr4eE4iTlAPS/AvkQ
636lQC8KA0Es/HO7du1w0e446wmxKLZ9+/bp06fPmTNHTxMTiIU9zps3b9q0
aY6jYC9fvkxY5/6WLVukFfDPHhcJItKf5DgqwAx95lnzTC7SohUrVtCHhQsX
lihRwgGxaIL7adKkmTRpEvXImgGFWKdOnaK2BQsWmPtL88i6detmzpwpyz/4
qXnz5unSpZOeOE6LoJ9PPPEEfOYnXRokEOv69euRkZEff/yxTj1J5Zs2baK3
K1eu9AQzgSAWiAj/li1bNusO3AIvuYs5yDGLVbly5YwZM2qFJsTi14iICDCq
Zz1Hjx6lz/DKXK8FJOCOiV1B5ocPH1bRy0HPbhKIdfbsWdGE8+fPm7+ePHmS
tmCd+wwyoOOoUaPAlnBb/TPsFa1wLIrmPjqGvD777DN5PcqvqApyOXLkCOWR
snzHxwX/6lHdBw8eRDqyXOT333/nPhqiyu+AWDxOu3RApEx5lOHhhx8WbZGc
XRa0M6j58+ebR1JiGrNnz6bp5cuXB4JYPMsoYJQe0scdxj7dJkcqhEw7deqU
JEkSaV3W7wnE4qlt27bRluM893/9618iWfcRkGfOnKHDdGz37t3UJquUScEQ
Lo+g4ea65eAQi1yAqnhq0aJF8l3GuXPn3FYvlq4/ySHa9FyX7nBNZ+AhP9Fn
nJu5ASkiwGxphZ67OSlkQixHzf/4xz9u3LjBs9RMPaal8+v69eupmWTK1DF0
mMLy4kwIOIqOUWbjxo2ojcPGGZ1oKU6AB83FhNzcvHkzPgf1Q9ySPYn0addU
ALmP3XEfWZirNJHI0qVLRdZz587V+eolS5bwrx4oyX2gzmmb6Aa/iiGgG/zL
s56uCaOoVauW/htdiPX/2DvrMKuK/48LiiKCiAJKipTSpUiDpEhIpzQsSC7d
tSBd0g3SXdIpSHdLdy65wJLL3t/rd+dhnvM9N9jde+/G5fP64z7nzD1nej7z
njlz5pQvX/6zzz7T9b9NmzbNmzfXPuuVWl6JSCxvJbQSSz1ABPWNeCN2JVb3
7t1pJrT9gQMH6heOkFjVqlXz9fVl2JIzZ046RC1g6FDoAhA2O3fuLFq0KNKF
mGCgkiRJkiFDBozqsmXLUBF09Oqb77Tib7/9FkuCaeLfsmXL0h1jo5IlS6ZW
K9FJFSxYENOErWvWrBkxN0ksrG6NGjVwL1myZOPGjTdv3mx5I7HoK318fIgk
0oJYqetPnDjRrl07rkQ4cYvF+mTq+++/p8vAkSBMnzft1KlT7Nixs2bNyr+o
KeWIxGrUqBGdDp5nzJgRnaNMFuYXmzN79myESrly5cg926JxJLGAnp1oWKxf
ISH+Y8eOtXuZES2xiMCmTZu4i9DVX0aJxb9onlixYtld0ty1a1eliAoVKkTp
kAqsOvlM7uFClNRXcelQokWLRk6Sam5B7mJR7X4wF4lVqVIlgibH8ubNi3zV
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
Hh+jxCpWrBg6yvhvly5dKA51HD4Si46PfhN14UhioYX0npwakhlCiUXXT5VA
TmuJZbE2hzRp0sSOHdt2h9uQS6zx48fT4mxDNGKUWE2bNk2dOrVx/RXjIP5V
8smRxKI5o0CMwkyt71IP3JFMxBbTgS1C8MSIEePIkSOUgn4l1hJiiYVwQmxg
ow4ePFi4cGF9jYkwSKxkyZLZnZV6+fLl7NmzqQ8URNgklip3uxJr27Zt/KXX
B1qs41Bcpk+fbrHq9p9++olmbnzFz2JPYmEzMcJEsly5ci5KLLJOt3SLSKzQ
IBLLWwmbxKI92k6z20osOlklw2jpP/74I01euTuZxaKRGpen0gDpJdWxMrbD
hg3Doj548IBxLt2lngDHGOKP0fBarCtzjHP7FpclFuaIHqFOnTpEADvsdomV
KVOmKlWqOPJHQX9KPpjeESDTyGF6Va2p1q5di7dqPYaJ5cuX6wcurkusggUL
5smTR4tbDp48ebJ06dK8efOqZ3B0i2GQWOoBsYI+97vvvqNOIq3JZ7vLtzSm
WawvvvjCuIC8UaNGGHZ17GmJRVagnZDi9+/fX7dunSOJRXVKnz69MZJQr149
qo12tCux8J9AqTCoBTpcJbEoNfXcB4mCeENUmPIn5BJrxowZBOpkZbjFZhbr
vf/dqBPBQASUfHIyi8Vdxn3ehg8fTsvSdqBkyZIISPXQjbxq2LChHlgpQiix
yC6kAlGi5RqNjIkwSCyGgZSyyZ8tW7YgZpRJpL2HTWKRHP2g0O4slnEkomax
1CopSr9Tp040XvV2sMYksagt1atXb926NbZ63LhxLkosLPxb12Ix4N20aZM6
di6xiDkGTR17+nNmEY5ILG/FucQaMWKEOqV6+/r6qpHamjVrECr6ubzGrsTS
Sqxnz556i0tHEovx6fvvvz9z5kz1Fx0Tlnb//v3aw4oVK2Ks1HOHJk2aYDz1
OvmHDx/SmebIkUO9eLLVCiMg+imMg5rIwqskSZIgzEyRVxJL2UC1vbkjieXv
70/3NHnyZEw0PSmdJuHSO9DhYgmJDLfYjo6Jg3oqofdOdySxCCh69OiYTfpW
Iq/z3whhcb1xZQLGH7OcK1cu05t3xPPjjz/WizcUFy5cyJIli1owg4ElQ4wd
nxG13SWa1u6/GrXuC+FHJVGr3MkEjK16t4iSjRMnzvr161XajcvwLE4lFuiZ
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
6vjEiROIDZSbOh01alTMmDE3bdqkTmfPns2/169ft1hzrGHDhl999dW5c+fU
vyNHjhw7dqybU+uUp0+fIoNd9ARZWKNGjVCpLLLX9XAFQRAEjUgsL+aff/5B
txhdDhw4kCxZsh9++MHRLb///vukSZPol7UCUeTNm3fr1q2eiqjF4ufnN2DA
AKPLTz/9hK4zXYb8QFClSpXq+fPnyuWXX35JnDix7dQWNGvWTGm2K1euGCXW
o0ePYseOnS9fPnW6YsUKLbHg0KFDnDZv3lxfnClTpvv377snneEIkim0KksQ
BEFwIyKxvJjixYuvWbNGnwYGBvr6+tarV8+JxKJf3r9/P53y3r17je5jx44t
X768h+KJXkqRIoUWOQq7EgtmzZpF9KZNm8bx+vXrOe7du7ddb1+8eKFm3kwS
C7788suMGTOqY5PEunHjBqe//fabvhipNnr0aFcSGFEEBQVpldW6deuIjo4g
CMK7hUgsb+XmzZtfffWV8dFPt27dzp8/36BBAycSC+xKrNu3b0ePHt35gvMw
s2HDBgSP6UGkI4l17tw5olelShWOGzZsyPFbp9dMEuvIkSOc9uvXT52aJNaM
GTM4Xb16tb593rx5uXLlCmvi/p8nT54MHz588ODBeFu2bNmCBQv+/fff6J8R
I0bkz5+/ZMmSBw8eVFf6+/sPGjRo6dKlFuuqOS7r3r37nTt3EMZcWbt27QcP
HoQqaJPKMj6KDRtkVPPmzVu1akVCLl++HPIbly1bljx58unTp3N84cKFIkWK
9OjRw8XICIIgRGZEYnkr8+fPpyvXp+vXr1fLq8ImseDrr7/esmWL+yNqsQwY
MKB69eomR0cSC+ERN27cSpUqcVy0aFGi+taX/rTE4mDjxo05cuSoWLGiFhta
Yp05c2bx4sXJkiXr1KmTUZqePXv2008/RSaFOYFz586NESNG8eLFly9ffvLk
SR8fn08++QTFi5Tas2dP7ty5S5Uqpa5EdRCZWbNmWaxiJmvWrEmSJBkzZsyB
AweIOQnXyjDkGJ8YEgdXVNaNGzdSpUpFEjhGaG3bti3k9/r5+XXu3DllypRP
nz5FK06ZMgX1GOaYCIIgRH5EYnkrvXr1atq0qTr29/fPlCnT8ePH6RxRFxkz
ZuTA0XyII4mVM2dO+npPRLVNmzY9e/Y0OTqSWNeuXXv//feVxCpdujRRPXTo
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
WUqXLl2oUKGQREmItIjE8laGDh1avnx5W/eQLHeHjh07lilTxuiCxFq8eLHb
4veOgVht3br1559/bjLjGH+y2ugyd+7cNWvW2PqATDpy5EjVqlURV3QTCC0n
wW3YsCFXrlz6dO/evalTp3YtBYIQldi1a1fx4sWp+canhBarxPrtt99MF1er
Vm348OE0UuN7iHZ58eJFwoQJTcMiBRLL9J7gX3/9RYMNYYT//PPP5s2bG13Q
craDMiFqIRLLW1m9evV3331n626SWOvXrx82bJjF2oP7+/urdwbv3r2bI0cO
03Ml5IHz2RXBCdOmTTtw4ADqaNOmTVjyhQsXhur2Y8eO/fTTT+nSpWNg/vjx
47deT0+ROHHirl27UmRbtmzJnDkzPUtY4y4IUY/AwMCkSZPWrVvX+JQQpk+f
nj9/fqPL7du3P/3002vXrnGl3qV53bp1LVq0sN3vd/fu3V9//bXd+S7kkGkQ
+vDhQ4xwSDb+PXPmTNq0aQMCAoyO9erVS5kypTq+detWnz59zp49+1avhEiF
SCxvBVthd02mSWJly5btvffeO3ny5MWLFz/44INy5cr17du3VKlS+/fvN961
Y8eOXLlyyaYNYQCr6+Pjo+x8mzZtkiVLhuXUbx4hgbDD+mLGyBhbW0+w0suX
L+ffkIe7atWqjz766D0rGTNmfPDggWvpEIQoBg0tevTopg3Sr1+//sUXXxi1
04gRI2gpzZo1Y/hjvJeG06RJE5Of3bp1s3W0WHdTYRBq+871nj17UqdO3alT
p6tXr9qNpJqdTp8+fYUKFYyN9M6dOxUrVsQmY3st1jku4mOa8RYiPyKxvJg6
deqMHj3a5HjgwIHNmzfr040bN+pRHgM09MCaNWts94f5/fffbT+iKoSEffv2
6c1tGC/37t17wYIF6hTz++233+pTjCrWu0CBAu4K+vLlyxTokiVLQjLxJQhe
BqYsR44ctu6//PKL8VPRu3bt6tmzp3EfLYt1kSR6xvTuIWTJkmXlypW2fjIC
crTnw/3799u1a0dLT5cuXfI36ItfvXq1+A1bt27Vd82ZM0c5qpeFb9y4weDX
+Ck0IUogEsuLwWjQrkO4htMJjL8yZsz47Nkzt8RK0JClxYsXR1mpU5Qthtr2
dSeL9cHfGqeE9guGguD1BAYG2t1XaufOneXKlXvr7Yw9x40bZ3S5cOFC/Pjx
nzx5YnsxHpre4bUlICDg0htsny8IXolILO/mjz/+MG3VElpQaKVKlXrrF1uE
MHDq1CnTytumTZti/22vRIyVcArGP7xiLQhRnlatWjm3aVOmTOnQoYNpfDp1
6lTTO4OK3bt323UXBJFY3k1wcHDt2rVd6X8HDRo0Z84cN0ZJ0HTq1GnTpk16
NSz2PE+ePKHaqFAQhDDw8OHDli1bOnmAbpoWfvHixYQJExgQ2c4+PX36FK/s
Tm0JgkgsrweVFapl0kK4kSVLloYNG+olsmfOnKlbt27ERkkQ3hFQWUeOHAnh
xSiocuXKmVbOK/bs2RPy7+MI7xoisQQhovD39zfOWQ0bNiy0mzkIgiAIkRaR
WIIQSahVq5Y8JRQEQfAaRGIJQmSgSZMmtp8aFARBEKIuIrEEQRAEQRDcjkgs
QRAEQRAEtyMSSxAEQRAEwe2IxBIEQRAEQXA7IrEEQRAEQRDcjkgsQRAEQRAE
tyMSSxAEQRAEwe2IxBIEQRAEQXA7IrEEQRAEQRDcjkgsQRAEQRAEtyMSSxAE
QRAEwe2IxBIEQRAEQXA7IrEEQRAEQRDcjkgsQRAEQRAEtyMSSxAEQRAEwe2I
xBIEQRAEQXA7IrEEQRAEQRDcjkgsQRAEQRAEtyMSSxAEQRAEwe2IxBIEQRAE
QXA7IrEEQRAEQRDcjkgsQRAEQRAEtyMSSxAEQRAEwe2IxBIEQRAEQXA7IrEE
QRAEQRDcjkgsQRAEQRAEtyMSSxAEQRAEwe2IxBIEQRAEQXA7IrEEQRAEQRDc
jkgsQRAEQRAEtyMSSxAEQRAEwe2IxBIEQRAEQXA7IrEEQRAEQRDcjkgswTmP
Hj26fv26o3+3bdvG78uXLydOnLhkyRK711y9evXOnTueil9UIDg4+N9//+3d
u3dERyREXL58+d69eyG58sSJE8+fP/d0fCID1OF27dplzJixfv36s2bNiujo
2OfFixdjxoxZtWqV7V9BQUErV64cOXJk+McqAnn16tXx48dfv35t99+bN2+2
bdv21q1b4RwrExiHHTt29OzZU58SZyxqeMZh8uTJ2bJl8/PzC89AnUOpkQ+U
YERHxFVEYgnOOXjwYIoUKWrYo3jx4pkyZeKav/76K1q0aI4MeOLEibNmzRq+
sY5cYCsSJEhQuHDhiI5IiPjiiy9y5cr11stQYhS6j49POEQpYjlw4ED16tV3
7do1ZcoUkjx79uyIjpF9Zs6cGT16dCJp+9fixYtjx47duHHj8I9VqDh8+HDX
rl1LlixZvnz52rVrM3C7fft2mH0bNmzYe++9t2HDBtu/kKOVK1fm32vXrrkQ
XzdA7UqYMGH+/PnV6bFjx4hVhw4dwi0CZPKKFSvWr1+/YMGCcAv0rVBq5AMl
GNERcRWRWIJzMM5og5MnT/5nBRuO9VPHc+bMqVatmrqMQZAjiTV69GiuDMco
R0awmVFFYo0YMWLhwoVvvezZs2fdu3ffvn17OEQpAqEvLliw4N27d9Vp8uTJ
aRERGyUnZM6c2a7EApptZJZYAQEBGBOGbPPmzQsKClIuEyZMSJ069caNG8Pm
J0Mb2t39+/ft/nv+/PnIILGgS5cuWmI9fvy4c+fO6K5wCz1ZsmSOJvoiEH9/
/3bt2p09ezaiI+IqIrEE50ybNm3dunX69P33369Xr546vn79ev/+/dVx7ty5
37XHEKFi4MCBUUViCUaWLVv2888/69OoK7EaNmwYaSXWxYsXv/nmm3z58iGr
TH/17duXMZonAsV8RRKJNXToUC2xwpkLFy6QCZFQYnkNIrGEUGGUWEZEYjkn
5BLrzp07J0+e9HR8BCNqSaFd/Pz8RGJ5FPr3vHnzfv7553anm+bPn3/ixAm3
BISaOn/+vD4ViWWxPqaMJBLryZMn4Tl3F26IxBJChXOJRVPdv3//1q1bjaug
cTx9+rQ+PXXqFBccO3YsODjY1p9Xr179+++/XODv72/04eDBgzgePXrUdBc+
v3z58saNG7t27VJ/PX78+PLly/izY8cOvcz+zJkz3H7u3Dl9Iy16qxUOlMul
S5e4V7nbTlDfunVLXc81Rvfbt28/e/bs6dOn/LV9+3aTsVJ34d6nTx8tsYKC
gnbv3o277XsEJPC7776jlyQaOg9JF9nF9ZggJ8bwxYsXXHP16lW7/xIot+PV
xYsXuUx1Zzju27ePU+PyWhyN5XXlyhXuevDgAZft3bvXmP/cZcwoyohsx2eu
JBTl+N9//3GqCoLIK0OqIsnFnFLceK4uxgVPuExVEnJVOZKB5Jh6fmQXVb5H
jhwxRu/mzZuqyAIDA40XE2ccDx8+/NoKRZMkSZInVkzZy43dunUrWrTokzck
TZrUKLEIjkDx7dChQ+peSuGJPUgF2aWOVbpMAV24cIEE7tmzx1TKBKE0Blmq
+yCupCwIl+w1+qMkFhVSJdxYrCaJpYveKGwoazKNiof78ePHVWbiyCmtw1Hm
W96UMpE3lhGpUAWtSpNWaffehQsX0sv37dvXif9GVLWxhZzXf+kSJ1DVwKk/
KVOmJCx1pcUgsVSTV/XBNjhdxNQxi7WkqD+0U/UX9/IvZacuxmcuw50LqLTG
1drcSAmqtm8qYpPEIv+1h+qU0BkF6NLUpe+ksa9evXrGjBkPHz50kpP4TCTJ
hEePHpEQVdzcq2y4rgAKIqwqG7+mMSD12Zjt+lQ/8LWtG1QJMociIDcIhdr1
/fff0xK5i9qrriFWxgQqO4BXxuV5WGNcMP46q5XlxzHCX2RQiMQSQoUTieXr
6/v777+XKFGCbih79uyqzq9fvz5Tpky//fabuqxTp07NmjXDXPzyyy+2w22a
oY+Pz9q1a8uWLRs/fnxlZ2h9NWrUmDt37vLly4sVK1atWjWlPdTijQ8++GDV
qlVfffUVhgLLMHXq1C+//LJHjx6lSpWKESMG3QqWoWPHjoMGDdq4ceMPP/yA
PxbrIo18+fIR0KhRo7JkyYJhbNCgAUnr2bNn+fLlU6VKxTF3KTOIBejfv3+v
Xr24vl+/filSpNi5c6eKcMuWLWPHjr1o0SISyI0ff/xxq1at1F/c1bt37/bt
23NX69ato0WLpiQW9qdAgQLTpk1bsWJF2rRptRSxWFc3/fzzzyTk22+/xeRO
njwZx7t379aqVYu8wmZWqVKF7h7LY8o3wiITKlWqxI3EwWifFaQ3R44cFAr5
QDwpoMSJE2Pna9asSXl99tlnhQoVUuaUUNKnT0++qRurVq0aM2bMNWvWkNXc
SLYMHjxY/TVu3LhEiRKpqUsiSdxI46xZsyisjBkzfvjhh3///Xfnzp1Lliz5
9ddfJ0yYEJWF0WvSpEn06NHpU7iL8lJLjrds2cLppk2biH/p0qW5i7CoANQc
IlmuXDkiSTTq169vW/Gw6lS8iRMnTpo0iUDVk2sKjszHYpP5/H7zzTd0Sep6
TkkdNbBChQrDhw9fsmRJ8uTJqSpkOAWkxZ6CQqdiE3/fN8SJE0dLLNQI5T59
+vSVK1cSSaocHQRZXb16dbVimb9UgQ4ZMuSiFYJGQlP0xlCohJ9++ik1n+LI
li0b2Vi8eHFVyowd8DZWrFgEQTGRdUgCgiCTly5dimAgejQ63V8jsfCHakw9
pHQ4JZLqL6PEouelvEjIzJkzqYRKJzdt2pRMHjhwIA2cKkpYY8eOpcLQGKkS
H330kd1JBuLJ9VQGspqDPHnyqHVrCA9Cp/6QyZRmhgwZSKNxjKMhD8ki4/yS
czAIpI5b6tSpQ/zV7TQ0VA1Bd+3alYRjB+h8+euTTz4hB5CRFC6XEQ0Ket68
eZY3EotWRvRUBaO4TWHRKCgU6tLmzZvJ6nXr1nFM26GALNZhWvPmzckZbAWn
lBEtiwpMiZAPNBbyTUlTmgk1RxVx1qxZKWJC1IM1o8SifdFYUEfqlLKuWLEi
1ZUyxWQpfViwYEFqO00+Xbp0aBXbOHMxOYO1xM44ycn58+dTkcgE8pO6TS1C
H1J7MWi0C6JEgSozjqb68ccfMZVUCSxMvHjxjOqdok+WLBnZoio2uUQ+dO/e
nfZO06YUiD9mn4TgG02MukfmYGpIKaFTVTAvuNBOCXTAgAF4QpZ+/vnndB8q
CIYDjRo1IiAK64svvlA1FjtMbPEcA0u2kzNUbHzACpEEFLVxnB5RiMQSQoUT
iYUBUaae7kwJHot1oETnriUWzVO1DiyDaRUrXTAGUPVxNBZCob0jSNKkSaPf
Q8edHkF3tTRGGjvjX1ru6dOn+WXUg+ah98R/2hd+oqlq166trh8xYgTyiQOa
v+5uMBoWq5UgzseOHbNYx0F//PEHpxgBdZfxGR8dYty4cZWMYeTLZdqOjR49
GrOgjseMGYNJ0Xdh7pQnCAkMo8ooTIFp8QlWFw/1tgCM+3LlyoU5VafqkQqi
xZT5xFM9zOJ6jJutdsXqchc2R40QkSUJEiSgS1XTKZhEAlV9MRcgbLTEQiYZ
38lCIdNvqmN6f/JBPx1WOab7UIKjSqjJK8oUDaPfV0LoKollsVYDLbGoKlQA
Onc12r1y5YqSTOqUYiJv9QhX06ZNG7JaHc+ZM4cO3WJ9LGvMJRQO9USNiFHg
Sirgv+oR6I+Q6BYHOHpQSBeDHNJvF1JnqOdUPI7v3btHcFQbfTxhwgR1GRJd
VSoj5DzXUK/UKYKWZoJmsFhLHBmPxiNdahoBD5EQ9DjqYioMRYkoVaeUjl65
RAIZDiBy1KmWWFQGWoQaawB9fYsWLTggNygLvfUKEpG6pKZuIHXq1LQa2/zh
dmSYPkUQoi5UkaH5kROqm6NwSYUudyPIewpFzSwp1GynxnYHAy5GqSJvVEHQ
oFR2WayyQeckEldXbKQpx9Rn7YmSWOS2OqVuE0NTQLdv30akKaP0zz//qOnE
bt26KYmlIJOVxCKq1AGUgHLHmCRJkoT8sbxpLLqiUgcoYkJUp0aJRQviLyWx
yDQaozI1JJNKgjjcsWMHDVkZECq87dNVmjPCyTaf7WJ8UEhdIsL6oTltjVM1
ZuT4119/pXZR4Tm21cOMcUigUtf4xtCJX4qeolEzaZQCw+Fdu3ZZrG2KARRt
gXqCBVC1BQVOs9Ue0onQ1yiJRZ1n1KY8V8NhGgKFgoJVFoYLUMjIYMYdSEE1
WkRm204Xhz8isYRQEZK1WOq9Y/2uGX2Ellg0Ujqp5cuX2z4lHDZsmH4/UcNY
jLZjnLehu8ToqQEgo3iGTqa9UxjjGHfooh+kc0FOYPrKlSvHIMhitb10+gys
9DDHtDADP7FjRJsWzQBNDawURAYVRzQsVlnIXXomCuOmJBb2kBGZ8SVovRYL
4xArViwMr5JzJkwSCxUaPXp040wXRhUXek/jXVgYrT2wyXZX42CX0DbGbNH9
PmKYQHWvTUesJdbBgwf5S+cwPmuJBcg/XeiqO9PRoNBr1aqlr6TX0O9fI6Ls
SiyLtbfVkgAw2lqH03VypWnDLqw3mWnadY04IJmU1lLQDREB1fOiUZEodFW6
BoZNYtFZ02XQdeq/yBw0oXqKQZ+LXKSXIZRffvmFntdincA0ps7It99+a9xu
q06dOvRu6piEZM+eXf9FxaOGG+9FCyFR1LFpLRaRp7aoYy2x6OzISTq4RlYQ
/6prU73tnj171PWTJ0/OkiWL9oqey7bhq5rDQEO7oFhwUVKE3rlmzZr6L2O5
G6HQ0W9GF1qlr68v+YZX/OpJYyOMO5Ac6iEgEpESZOBAhpPDuhLSTN4qsXST
7927t85GDY2dgqBNoa+0I6MJuxILkBbG/RZIL3ZGRYA0Gl+spnVQl/RlxgeF
yBIlsRYtWkToFCLFRPFxDdoMeYP9wZgYs92IKgJsrN1/TRglFqMYTKvxcV6v
Xr0+++wz1fyxlo5qr8U6jKI4lIZEq6vQqatUSBQp8adKE3/sCe7oNNSs6bm/
SWIBQSuJRcs1DlcVhIXM7tGjB55TM/Ec/UaF/Oijj8qWLauHBhGOSCwhVLgo
sW7dulWmTBnMPrbI1F22adPGVmK1a9cOrWLUY8auFomFfTPdQgekR6bAGN92
3sBitSf8RW+rpshs177SThmSE2HcTSucEV1dunSxOJZYRA93uxILUBQMytAG
2GpTrEwSC1mCwjQu2/j333/1bJsRtWPh4MGDMXTvjsRS70OZJNbly5dxXLly
pdExYcKEautXfKDuUQOph6rvC5vEouwoa2PR0B3oB15UCQqOwtq2bRsJp6yR
LhSro90wTBJL3aKOkVjIQv1X7dq1TbuW0QHRj6tjk8RCGNhKLAqaeNrGIQwS
a9q0adxiXOpGJcSFhFtCLLHQJ8TfKFZ1BNA8jva2paVQakSAOtC3b1+Okc27
d+/W7zhb3CGxLNYqSsyR0+Seqt4hl1jUXoJQ8/YmiYX8iBMnjjp2JLFGjBhh
LHoN2UvRUMEQGLb/YgqaN2/Ov2rKyGKdi2vSpIm9XPwficU11B+jsaUu8a+a
RURi1a1b164nCqQU1RjhhD/KYqCTjRVAg8RKkyaNydGJxCJ7bSWWWk5g6znG
P23atKjQP//800lsww2RWEKocEVi0e7UyIWGQ/Mx2Ye2bdsiXYxTuzT8QYMG
4ZVx0gbDS2NUo9eQSCz6VtsHHOqpBL1thQoVuABzbSuxfvrpJwZKas5Kr7BS
93KLegzkRGJFixbN2Ma1xFJBkw9qhoFOwRgxk8TigFPjNchFisDUH50+fZqE
TJw4UT3me3ckFjmPo37mZbHWGTVnZezp6Kapb+PGjdM1EOVDIdIFWMIqsSZN
mkTQatmzAndG0FrvIdHJgfbt21Pi5CdjbZJmfBxmxCSx6O4rVaqkjk0Si0EH
gkS/o2GxPnzUU16Ujn6sbLGWl54g0hJLFbft1FAYJBbDE+OzNqBbx0W9LhFC
iYUkJt9sN5mkSts1NRoGZXny5KGA/P39BwwYQPsik43Lb1yXWKgLJT9QBURy
6tSpltBIrKVLl9Ldq2OTxKLW6aruSGJhQLB1prWXqgoRK0wK8bf7Miz/Yr70
s3JUky5WE0aJhUHm2LgcESsXP3581WTeKrHQutRMbKZertm6dWuSb/ucN7QS
q1OnTokTJzbWeSLMIPfrr782KXCVOYRIKaCKEfxOIhw+iMQSQoUrEgtroBeK
MABh1GP0QY34GJvoTpD2hZFEtPTp00dfht1QM0gWq8T65JNPTCYIiaWWVykw
C7Fixdq8eTN2Bp/VStfatWurxrhjx4548eIxDFf2Vr+fhd5Qi0s5/v333+lY
9bs5xJP2rnpSJbF0P6slFhQpUoSOT71FRVilSpVCP2AZSLUa1SImkRB6pKlQ
EksZWHQUgSI7iYC+AKVkm/9ckCFDBot12XnSpEnpZG3nBFyRWHq9h7skFvlP
WZAb9FlKYikjH1qJBSQ8VapUKr3knrLS9evXT5kypV5OjBLAGpOKw4cP61mO
OnXqEEmLtbOjbyUCVCTT66IW67MSuxKLok+UKBHjAv1XjRo1mjZtqk+pckho
tU5p79695ICxGptAYqEA1TGFiKbSOxUgsahv+koaF/VZlx3R/v7777WYp3T0
jDEVHpVCuahT8kSvxSK9yCc1cqFLVRO5YZBYFDcxr1atmp76QAHStFVpIrHQ
mfpiRxILFixYQEM2SjUaTsyYMZ3vN06fTjeqWgftl9pCJTdeYCux1AMsVVtC
IrFmzpypp0OzZ8+u3kBBYiGrVFU5cuQIBke/GoPE0q2VVv/rr79qUYfE0qVG
5aGI9Xt5aBK7EgulykiNAlXGh6KnAhNPdSPjBayN8QmmShQ2zWJdp2pcI+cI
o8TCLjGcVINHBbHS7QWJVbBgQee+VaxYkXqus1TN69JGlBDaunWrqnJIrDhx
4pgWSiGxVFjadmmJxY34Q9VSXQMJpKqo+fzmzZsrfxgynD9/nrBU6DR2mom7
tvtwBZFYQgjBPmCiaUF0XnQWxgECvQB2pkSJEnQrWA/qOZe1aNGCxrJkyZLv
vvsuffr0c+fOxSTSQ9FXonOQZLZbFnTt2pVeiWsyZsyo7QM2CpnBX4iu9u3b
M6JRDW337t30kgREJ6haLl0kPT4NExmmV8gTnxw5ctAYGTchCZR1ojfEEuIh
NkGtH1D2lv6acAkCs6Y39Ka1lilTBsW1YsUKxqFYUaWpCBRBSASIxpkzZ1Aj
9GjYKGxgQEAALiSEbKlSpYp6m+abb77BYo8fP57h9oYNG7p3724UIQpsXdGi
RbmxUqVK6vkm5gXjjCUhtn379m3SpIntkm/VmxOxIUOGkO2IRr36V4FQyZkz
J+pLrVKbNm0a16Bn1KvNvr6+6l1IjlGtBJcpUyYOyCuC00VJBNCNZC+hUATG
QseU0c9yJbmntt2g0OmG1PwSRptsobtRKzGQVfSMaJ48efKgKxDtKBNVVRBL
WbNmVavrSSzdLvlw6NAh+hryCv/JW1PyKYuvvvoKi03HRDEpA0uho4tIIJWH
PCdnVLnfvn2bTJg1axYyicqgHuphnD/66COuR42btnfgSqoEKoJKwr30rXQE
pUuXVjqEXKUtMFQnZ3r06EEuGSepyCK6UT2pQqE7eb+JIOLHj0+VoGURW/3u
3qZNm8g3tfZPy0tiheiiP6L4qMbGR2PUUryi1MhMftWTaCoVtQ7BjwBT+pAk
I0jQMGQa9ZNOitSpasAvxxQoEaasEUXcTmWgTiLRbT9GgzKndaPfiAyRJA+V
9li2bBntDtGi1AJjqwQJElDijrZqZ6xBh04tol4hD6gJ5LypOGwhr1SlsljH
TcZ3HilcMkfNZ166dOnly5eUOHWbGoWkxxbRKtVrBRcvXsSYUJNpFEpEaShZ
okHDJwOp/Cpp6ntYVH4kKEmmnpNX6pVV4kPPTk3AHWtgnDQjaO7SRayjjTFk
vENzIIuIJGMEiqZcuXJKKakGQsSIhpqNRzMjVhnN+fn54Y8pQ8htipWSwsSp
lkI9ZHRjmi1XUGRkGpmARFRrD9TqVmJIwhmAYFqVeKY6qUWMo0aNcrJ3CsNq
00wXthTTlDBhQky6GvlS97CuasRhfGpAAyd/qI00WGQ/QdP8cVQZxanuGvr1
66duUQ8CuAtHNYLD/mD8sUht2rQxjnciEJFYgusYxyO0a6NhNA1VaDu0Vtq7
o/2dMHdIC9N+L/RcNDS6G7ufk0bP2H4t1PiiDYaLbhrbbpzvopdkSGta7o7h
wtHuBj4IKiJm+4q0xTqctN2V2mKdVCHOalUqKdL9LwafXtK4iN3IkydPCMj4
L3mFAVy7dq1+Ad8WDJcaspH5DGxNOsT02pGxUJ5a0Qd238ExlamtJxSrsUBN
nujQ9YEqZUQsw3Od204iyWV6jx1bC48jtt24N44CnwnFuMeXxarDKWKyy/j8
4ty5c4gH290wjElQG1uZ3HE8cuQIY227m/AYq7Gjz7go0EX0rYsWLXK066zp
doqDCkw/aNplgsvUqjyG+bYzmaYrqSd6ozNT0b+1BE0QbbLa7jaezhNugoqx
dOlSitLRjk8mnOSwbU2mfImkqm+OEmgLJoKRgvGJsMWq4fFKbchgXBiJ5kFt
oqywV6aHwkgsBABFbNrKzAiNyHbtGblKWMadWEg1OsR2bxbLm13UjH/t378f
1YHidRSo5X9Ln8aObKZu2P0W/FtL0/YCuybdYmjUCrIL86syh2PbZk5u44/p
TR9bx7Nnz1JepssiEJFYgmCJTFs9C+8gprVYQhTFtBbLiGktVriB6MqbN29k
2L7g3UQkliBYRGIJEYpILO8gEkqsnTt3tmvXznaeXwgfRGIJQlBQ0ObNm5FY
mzZtcvTOlyB4guDg4Js3byZMmLBnz54y1RClefLkSc6cOStWrEg5mj6BdOPG
jfjx49uuJAwH6tatO2/evAhRd4JFJJYgWNdZ/fUGR8txBcETvHz5Utc9vVe8
EBVZvHixLkrj4kxGbdo9/KVO06ZNnbzKKngakViCIAiCIAhuRySW4DqOXg98
dwh5DkSSvIok0bBYx/iRJzLehOSqxWkmvMv5E1FpV5+UCrewwicg54jE8noc
fYEi5GzcuFHv4mIiICBg4MCBxg0Y3zWePXs2atQo/WVqJ5w/f57LTN/iCX+w
PGvXrv3xxx8jNhoqJupD3rbb+0QsqL7Zs2fb3SHELZBw2/0fQusDMXS0iceV
K1d8fHxmzpzpShARCKl76/Js2h05YHdjAQXF1759e7ubnQYFBS1YsMC4Q/uy
Zcvc+FU77GFtK/pb86GlU6dOygfTZqqu8/Dhw379+jlak+85KNPNmzfnz5/f
ydYo7iIwMHDEiBFhznz3IhLLuzl37lzMmDHpUl3xJHbs2NmyZbP719GjRxMn
Tuz8wwrhz7Fjx8aMGbNhwwYnu+S5i//++y9VqlRGc+2ICRMmmL72EiFgf375
5Zdo0aJFbDQs1v20t27dik7QG8tHEtS7D7bfXXIXdP3p06d3xYdDhw4RwxYt
Wtj9d+nSpZSvaRfNiEX1sH/++efx48ffOo/RpUsX6ga/Sma0atVK7V9qZPXq
1epj1o482b17d4IECdSHKU0gQdVGmurU398/RowYpUqVCmWaHJIyZcpVq1Zh
hYy7nJFqXMgB/S0DI6h649Zb6D0u3r9/P9b7rcENHjy4ZcuWZBR2uG/fvvrr
3nY/w7Fjxw6yhQvCmrgwwkifkRRFFg4Si5z8+uuvjV8WiEBEYnk3tGvGay6+
qYRtxKQ7+vet364KZ7DG77//fvTo0WnOv/76azi8IditW7eQSCz0XrJkySJc
YlmsuzpHBomVPHnycLC3YeDly5cencW6cOHC/7F35vE+Vd//NyVEMs8kQyEU
MiZjKolCkmQqJGQmUoqSjJlLSTKUSCUhJYqKBlPmTBGRipRSqvN9/s76tR77
c97DfbveLt3W64/7eN999tlnj2s99z77nBP203KxCx89Z86c0O8jqMqWLXv+
IBa57dSpE+NRRmUULvL8LyXp+kPVqlXz588fdqLEuJ45c2b0N2HedNNNYRFL
rqKIhRYuXBj2rcKJE4glH8lS0aPuu+8+OjzTVWogsIgEDYJ8oRNh7HYsiOX5
dxNI1mWqX375Rb9RGFDLli2THrG8f+YFSTPke/XqZYhlSh46S4iFeUmEjzt8
+HDmzJnBmG+++WbBggXM15IAaQKfhY2iIkWKnA+I9emnn55zxNq1axcO9/xE
rGSgc4JYB32FhgMw0MWqVasYlePGjcuQIYN8uihUP/zwQ+HChfX2X506dcCV
ROcnCmJhHFzEiq9CEatPnz7ysUhYiKNp0qTRiiInuXLl+vzzz0PTiR2xQDjo
JfDJGP1+aECyzBVLsvGVfPM9aYY8015DLNO/UUxIp06d6oacJcTat28fluee
e+7BGse+Q3LSpEnuZ0xnz55dt27duOctIEOsRGjr1q1JZm8T1Lfffut+Tu5f
p6NHj86dO9cNSWLEAhi6du2aM2dO+VxUQC1atHC/HggJPProo2HTeeihh1wo
Sh6IderUKfcTgYMHD6bny6LZ3r17L7744gkTJoRN50wQK8oeCUOspJQhVjIW
M6ahQ4fK14RDhTH8KJzgmY0bN8pv2U977NgxeVsUCUIscIIclR0FgliM6Dlz
5jBvcm1pqH755ZeRI0f26NEj8OW4sMJxwEuXXnrpzTffHHYDQ6iw8+4nwH7/
/ffSpUvHQmhYM3lxjb4bEMMoH7395JNPKNesWbNcq0Vmli1bNnHiRKCuQ4cO
URCLKfmMGTOwotRPvnz5FLFI4e233yYFnKPmEJO7ZMkSCj5z5kxOkS/fff31
12TghRdekK/Q6unEHD9+vH4djxAq/8iRI7JWwCH35TxcAhPH5cb5UsSiUIAo
peDvGW5d27Nnz6BBgzBugQ/nhWr37t1cDntLDdOR5LqUjpk+paa63Nu79Jn5
8+eT/9dee406DLTm5s2bpTfKOoD+K7eQ6GYU7ZlnntGPelNLb7zxBmkSZ/Lk
yTQ3wEm7tG3blhDZPMMlduzY4e6NoVanTJlCva1cuVIDd+7cOcmXfuny5MmT
ZJ5KJquRKpPL9erVK+wdLk4JOyTJCdn++OOP5d8TJ06QQ3qF7GGjw+PTGzdu
zKENGzZIUoJYjFz+ku0oX7f0/BeAk6WxY8cm4mkv8nbHHXcULlyYoRpp2bl+
/fru9v5169ZxSmg0rk461KqGREEsIlNwd7MT3VvaWhfBBLEYUzQ0leCmHEAs
WlBv3UYf+CTyjK/Dhw9HqpPQVSxXjJEcOXLIU0gNGjS48sorI8VMNGLR7v37
93cjUCi6PT2T/gB7KGJhIrBI9K4333yTwsqGEAKZR/Nv4GsXgLQYECyPWmN+
0AcOHDiAIWLwclTHmkiGCeGMIEUsqnTevHmEBwa7KwYpBsGNoE3DMCTBV155
xXUKpPnOO++QQ1oHl2SIZTqrYpgwecyWLVufPn3CRsCJXHPNNdmzZ2eGBS1U
rFjxiiuuYLBguxhZNWrUwBQwWPBu6dOnlwdb6NIYBNLs0qULySpi1apVCxPd
t2/fW2+99cILL4z0nVPiA1egHV449sUcbNHrr79OVsuXL8+Ii/6AJKgTsPMU
JIoxFEGhPXv27NixY5YsWZhHe/6e8DJlyvAvfoeS9uvXj3Ix/ZT4DPlmzZrB
Y1QUtiht2rSREAuXV7t27bVr1wIVnKLb3bEVtA7AgG1v2rQp6Xv+LjKSwuoO
GDCAaX6JEiWKFSuGhcFc9O7dm5bSvRaQA6fQCsSh4SQQA0v6Q4YMoS04HTSt
Xr26HKJNx4wZA3+SYdqaQ4JYhJO9adOm4ZW4CqYpekVFEdWOVaf/tGzZMuxS
hqs1a9YA/+QW38fVcRCrVq3CJAJIu3btIp9XXXWVtOOmTZtwhXAy5SpXrhx9
D8PrJkXFytZl6XX8e/XVV1OTWHKcI21K0Z577rlSpUr97IuOdMEFF3DRypUr
X3TRRXR+ajtDhgyEU5+0qed3afJGr5NL4JtIh6p7/PHH06RJA8l4/nsmaQ4S
B4aLFy8OVVKKKlWq4DhoU4CHxg0tOI7suuuuS5UqVdhPjeMj8B1Zs2a99tpr
qUkywG/6ibAB/FygQAHSBwvppeSQUhBOTVItVBH5x2dJUiDWXXfdJaOSHsKJ
kWYo1ACdnL/wzGm9e4RTICUMAs4u0CgB0XDuvwxhshcajWFStGhRNyQKYrVr
144a0P1LtMJ9990nbU2WJD8g1i233MIIpaIYoZkyZaLzS3wXsej2NKs83cDA
J2+RBj6Vzyhj+HN6xowZ6aVhN8lHQSxGHNZSFvFgEsY7aAocgh+hs8jTRayS
JUvCTnSYggULUht6FF9w/fXXL1y4kD48fPhwYgpiAaj0HIzME088QZaYPnM5
5j6tW7em29CjmE0rXtK1unXrtn//fuYIVCa9S576pIpI8JFHHhGzw1igufUs
ynXvvffu27cPgsW/KGLhKZgD0l50WrIUWiJGCjaZfGbOnJlxJ6XA3OXOnZsa
o2kwiQzkESNGaF3ddtttZJ4ySoMaYpnOqrAVOKm8efOqVQkV3Z4+L1+Kx7bz
W4w5I/3GG2/UKS02QZ8d7tSpE+zhJoI/atSokRoHjAbWKezl3n77bXxHor+W
9fnnnzdp0gQjzLCK9LB2KGJRkOiIhXPEmDDv83xzoTZz7ty5F198sab2wAMP
kJT8xv4w/DUFGCksYjHqgRnlDbKBuRbEwvLgoLHVuBtcAOba8z0s8dU2Mvum
RZiXyb940nz58slvrAcG2fPfp0GFSyBFID6GVP596623UqdOLb+Z+lFGzdiz
zz6riMUpsvSB0z+THb8AOVUU+zKIe6OQ1rzkkksw3XoUVtHNuhBX4cKFZfYa
VvhZjK1knvoUEKX26CowFSH4MnyH1Az1D1CBdm4KeFt8hP5LfOhLEIvpOS5b
1w+ZI5Pyt99+S5aocBIn8zQfvYUftIX4VkoXFqLwUMxTAiMoIBqaYcv45feT
Tz5Jo8vg2rNnjy4+UG/QlyAWonEZhm4icIJ6LoCWqo60vEzXJUtR8hOQrN+C
tVArHi0WKgsgVtgQBBIH3GIUxKIm9Vlpt61pGsIxNd7/3igEQvj38ssvlyUR
F7E4RFn0AVI4ChjTgQ9X3HDDDRKN4clRCYfJI93ujIJYTCXoTjJPZAjTLjAG
sEGj0y2ZXrkjKNGrWHQPNSMkyORO92Xxb4UKFbQjtWrVCvLRi9Krdfnr448/
Jk15lwWeAhjTe3w//vijkg/Az+jTt9Z/8MEHnCW9lxQgLl3AZOjpkKeGZUEY
qxg6IyOQMSKJYFUwsBLO1Ils6Apwhw4dwCr5jZWQ2bEIM26IZTrbYjhjq6NE
YGSVL19eHv1m1pwzZ05ZTmEu736UltEaHbHcvVhREAuWYzDii8/k7XM4GoYV
8OP6RBVzq02bNrkhVatWjf2BStJUxMIj58qVSw8xkxXEYuDDA+7rrSLtxcJl
ENMN0b1YlSpVokrhtM6+FNhwAT169JDfzMSxSHorZMyYMaH2FjOliIXvUF7y
/NsciliYbndWq3uxZE5NssOGDQt7Y6t58+ZXJiT57MuMGTO4uri2WOQiFtNS
LLbbTDgdyiU3OgHa6C/OouBYcnlK69VXXxUoHT16NJiBh+38j2Qqwew4dFAE
EAsBNoJYMJWitQpCY0I9ZMgQTXzt2rX4zYoVK1IQ3FkU8MBfPPXUU1GKA6rR
IhSE388991yWLFlknxhDz90lTs1HRyzdixUdsUgWWotyY8sVxQSu8ufP794q
SlBUi3uj8ODBg/Xr1w+N1rt378ANxOh7sfC2glijRo266qqr3LYWIxDYizVn
zhzqQfaZB24U3nLLLYpY9GEsoR6ilQWxYAmuKLvWEbPFSKu+kRDr+++/xxwB
hPLvhAkTyI++clDuo7n7OhKNWHLjT37DnIHWd/didezY0X0hD9yoC6HyACBm
xPM7be3atd0rYhnwHfKbmaPeQN+8ebMiVosWLTDIeoq7Fwv+YYDDqAk+8d2n
Tx9FLCYyhQoV0kMDBgwQxCJNpjlu1dleLFMSiBlKpHmWCs+I3WACyGSBmQjG
luFJv3XtZ7wQy/OpI1WqVC+88IKGYNzU5kQXPMBkqmXLloAKTirstkkmVrp0
7PnTW2xvLCkz4cKWYtITRCxmWBiKWBALbomEWEy6XYhVxY5Y+/btGz58+L33
3hsLYuFwwyKW5xMjRgwDRZzQHTt4ig0JSef75Bxjq8YcVKhbt26kd2y6iNWr
Vy+8tru8KRNe2dOVIGJ5/rocKEKNUUxJhyltWBt7uohFu4c2Lt0s7GMUZJhx
RDNVrlw57IY0apj5e4J3rnF8pE+DUjOMOMYIM/fAa47ihVh0gJo1a1JeHVC4
y0BqrlavXn399dfTk0GCGFekGTjufu958+bRb0OjMagDDR0jYuFqGzVqFBoh
gFgMmTNBLM9/Rg+0BhUoQrNmzSLhQVjEYiC0bt3afXKQC5Ef3Vbx3Xff8a/7
wtgzfKJQxGA/c8RiSqicI+rSpUupUqXkdyTEql69eiTEYj5ChTMfoT53794d
mm2x9lT+ddddlyBiff311wE6NcQynW0dO3YME7R//37XuIWKsYA9wVnLy2ou
vfRSHC7M4MaJI2JJCkwA9d/A3siwgvfAvxo1amANpk+fHsWwY8FwoOLCOKtd
u3YdOnTw/tnAHHbezZDHhGLeMVMQaYKIJfeDXNMdCbFkKcZdeVDEwgM2btw4
9JRYEIuyPPjgg8wicbsfffRRLIjF3Nmtc0WsQ4cOyS2w7du358iRg2Qj1GtM
YprPhdxbqFEa10UsKorfrleiC9Et5X5KLIhFOjQWHZWkJIT+DN/qRnTV6SLW
qFGj8CDuXT+uRVtkyJAh8IKCb775Rp6VwDddfPHFYZeqKBdloQWjj0ocYpo0
aSgCXgYwoB2p1Q8++MCNEy/E8nz2oLbdZxITHJXk/8477yxevPjTTz+d4NMN
xIHKZNjS38hb6KtEPR97YtmLpbc1FbEYgAB2aFuDWO5OVBoU+ybMnzjEYog9
+eSTzzzzzKpVq6KUN9J7sQJvZmBuwojWZmUwurvLvP9FLCo5yjMLYRHrzz//
fPHFF4V5ZJOhKBGIhbVh1LgL3RCmmspIiIXBdPdlKWJRcNmYAVwVLFgwlAwp
bK1ateg29Jl+/foliFjUDOPF3dNliGU623ruuecY6WvXro1+V8Lz5/sXXXSR
rEXQq/kdMFZQiiIWw0H2QG7atElsJsgUC2LhUp999llMAXASncFcYZBxZxTk
1ltvlacaExR2FW/bsmVL/A5jX/cSMLrFuwXiL1u2TJbrcSucBchhHrkuiJUp
UybdhAN9KUc1adIE942XITUMY1VfYjRc4ZeZpnEWsATdSYJUAkYGYEuVKhXm
mt9cd/To0XKKi1gcImN631MRCz+ePn16mpVWYFqNbYG1IDFBLN2zBH1xCSkv
ToFDEydO5BRajRko/x44cADzrot+5HPKlCkxtktAS3zRuLiqjz/+OJZTxBRL
pfFXNuhKbvmLqdc7MiCWzpejiHpzF4iotwsuuKB+/fo7d+6kZvDpss8QxKLG
Aj0c98HpXFcAlR+ECGIBn/Qi0iFl+bAONUxSBNatWxevQSBOn/p/4403hGok
/4G3KHj+Mw7QBczGKAv7HiRXTN71RgwuJrB5iUtQJ4pYzHpatWrl5p+QWBBr
woQJDBDqn2uFIkqCYqRgGbJnz/74449HAS0O5c+fv2TJkhgK6AUDEnZtE9Kj
Y7uPweJnsSfuFkEmLJgCKWPWrFkFSGQHAh5f2hqckLbGFFBvAurEZ9gq2jFl
cxGLc13Eypgxo67pYa/gQ/lN91YCiaIAYlFYgKRixYptHMkWWcgZUv3bFzRY
oUIFfaLZ+1/Eoj9gmSNxMmWkiSmg2jd+YF6GDRsmm68KFChAlmSmecUVV4BM
Us8BxKIb6BskXMSiX8H5usKGs8DG6iO3jAVd1actOEvMJoOF37IJAfXv319m
UnR+rW369siRIwPFwVTK+h4XwmiDavQBaoYxBUvrjgKmhLp6SQvSD6kfeVyL
AVi7du1Qm5z0MsRKruratSsYoM/CRBGmFfssv+nS+lvEsMLQYazEZTDuwAZm
r927d6czz5w5k5kmR+X5KQZOlSpV7r33XveBd9GKFSuwlhhYxoWsJokRkD2T
oWIc9erVK0eOHA888IDsoolRFAdnXbly5erVq+uUkEAGI8M2dCaIAaxUqRL2
lukSzgibhjHEsEgi2L0ffviBdBjC1apVA1w9fyELEgNgrrrqKqZL2CtqQDc/
uFq8eDFFxvVTh1ih3LlzU2+4CQwOaIqvJxGsgeQK8iRZUoNSsJkUnAx07twZ
L49BplapW1lsgTrwAhgfKI5pHQ3NtJq2Jj7Z5jeAARjzL9mjTalqjDlGEpJp
3br10KFDccFA2t69e6+88kroEeuH2Ze5ZyIENuDjLr30Up0sQ5VkINIHGSkg
mEf2KKMsCJBhyt64cWNcWNu2bWV/l+dv2m/RogX+hUxGf5iUWiVNN4SrZ8uW
LWXKlNjeBQsWeP7yHfUvzeo6QfJP58Qdg1WY5UGDBhGH/MsOfPJAPyQdUlMv
gyOWQBy9DA16KQQ1ZMgQqpqZSGhu8Tu0Gl4sQb7y/CUXaFx+A2/62/N7LFch
hzSZ1B44SuPiK/kByMlRBjIzi927d0uRmUmFQhRdiIajw+sqBPGZ/rvvN0hQ
eDT6D/0Qfx3JqWEQQCOyAaxG2fdFBNk4TQYwJsxcZCC3/0dg7eTJk+nSDAQO
MYhkL9O8efOkrWkUfcUZHemuu+5i1IBJQI7uT2BUUjnXXnstQ4COOn78eH7D
J4sWLaJpZOD37t1bBn6DBg0Y+DL7gAdowdL/iLEZdp9nALHIW+X/FZeTisIO
ABikQ/cG8gOv8nARi5FF0cJ+MunVV1+lZiTlu+++W+uKf6FWz5/rkVsqR4rM
QKM26DkMEEpUs2ZN2cNPH+MU6gFbzYnkh3/FXnk+9kiRmQ9yFXlhCFX0xBNP
iM3HRmGpiMBZ2FJZ46URGVkANiTJidAdNp8Ow0ihQ9KIjO7QPiPPnObLlw/z
JdtN6QPMGbkKiWP9AGDyA3oRLnMx+ja9BXPK+GL83nbbbfBwpBcWJaUMsUye
f7sw9siJe+96qOCK4cOHDxgwIOxRxjieIuzLohMnMOPyyy8PW1J8lqJXLDcu
RYcOHYrx6zz79+8PG46BjfINlBjTxEfEuJ+fsoctHYYx0XAVSaTZrl07fe9B
jMK0JrhP6XQVqfIDojWjf5o5bDqhgVu2bDnzD697/m1ud0EjQTEkz/A7WSKI
pUKFCvqytdiFtwW0EnxfR3RBR8xWEv04TKS2jrEPJCiGT7169QDyqVOnjhkz
hnlZ2E1r0d+LFbsCe7GefvrpsF+1jlFxqQRaOfoLOkJFNw67QApFuy/6C8g1
BbHbZMz4GX5gPe4yxDKdQzHX2LNnTxJcCIfFbBGrmATXMnk+0FasWDHRL+gw
nSvJE7vnMAN169Z13+96/gjgqVWrlvvJ8qFDh8pdy4DOBmIxZ2ncuHH0bzKa
zkMZYpnOlZgQ3XLLLcy+z/Cl4rGIyXXoV1ZNZ0/Lli17+OGHE7EYYjq3evzx
xxctWnQOG+7bb7+94YYbIr347hwK4MmWLZv7oaX27du7DwCqzgZiTZky5Tys
E1OCMsQynSuNHj26Q4cO06dPTwLEMiWxmjdvzhxf34Nq+reoUKFCc+bMiWW3
2NnTpk2b5CmV803Tpk0rWrQoFDphwoQ+ffpE+s4yiHXFFVeUKVOmatWqibvQ
rbfeyumlS5eO8aUNpvNWhlimcyUmy1CW8VWy1KRJk0IfqTOd/4Iczi1fnec6
derUel9R9mFu2bJF4oQ+9ROjtm7dKinoO1hM/1IZYplMJpPJZDLFXYZYJpG8
m+Vc58JkMplMpmQiQywTZLVx48Y77rjjfLhBsHr16nb/aPHixYlI4ciRI5qC
vOvb7kWaTCaTKelliJUsdfDgwQEDBtxzzz1gRv/+/d33FoYKxBo4cGCKFCnO
B8SaPXv2DTfcsM5X4BVJ5DPwDlJCPvroo4kTJ27evFmX4H7//Xc5fdSoUfJI
ddeuXeXdeiaTyWQyJZkMsZKxHn30UcAplg+awCfnD2I1b948NPzXX3/t3r27
+8Ey8tysWbNy5cplzpw58BEu0fz58wWxgK5rr702Lo9Rm0wmk8kUowyxkrEm
TJiQJk2aWGKe54i1Y8eOTp06FStWrGLFihq4ZcsWedXV0aNHixQp0rJly8BZ
ilho6dKlderUsc1mJpPJZEoyGWIlYyUbxFq/fv2pU6dgpNtvvz3sWVWrVg39
VouLWKhkyZKrV6+Ob25NJpPJZIokQ6xkrFDEAqXef//9yZMnT5o0yX2BsyIW
gRx68cUX9etRHNq0aRPhhw8flhPlE+2izZs3S6D7rb0tW7ZIIGjkfvl95cqV
f/zxx7Zt2zj0wgsvhP26SqQbhSgSYs2aNatNmzahK1QBxBo4cGC7du3Cpmwy
mUwmU9xliJWMFUCs48ePN2rU6I033vj6669nzJiRPXv2FStWyCFBrP79+3fs
2LFnz56FChVq2LChQAv/cmjw4ME9evSAUgoXLly5cuW//vqLQ6+//vr1118P
ei1YsKBMmTKSTq9evUaMGMEl3n333aJFi44aNUrSqVevHumMHz9e0smcOfM9
99wTmufTRaw333zzggsuIOWmTZsGPgAaQKx33nmnWLFip1+LJpPJZDIlRoZY
yVguYsnmcHhJjwI/GTJkkG+gC2LpV/ymTJnCv8JRJ06cSJkypb6pe+nSpRwS
mLn//vs7deokBCXnQlCVKlWSEz3/DQycK4c+++wzTtyyZYscGjNmzOWXXx6a
50SsYp08ebJz584k/tprr7nhAcTat28fMHbkyJGodWYymUwmU3xkiJWM5SLW
wYMHgZA33nhDjx46dIgQ+YxpYC+Wi1goVapUa9askd/r1q1TxHr55ZchqAYN
GuzcuVOOFi1a1KU4VLx48Q4dOnj+LUVOBNgkfObMmfFCLHTgwIHUqVM/8cQT
bmAoYpGBb7/9NmwKJpPJZDLFV4ZYyVguYq1evRrAWLVqlR6FoAiBprzEIpbn
36crVapUunTpQCP+TZs27dChQ908VKtW7e677/bOMmKdPHkyc+bMpOkGGmKZ
TCaT6RzKECsZK3QVy+UfWcV65513vMQi1p49ezz/jVVt2rTJkiULgcWKFbvp
ppvcPBQvXnzgwIHeWUYsslegQIHffvvNDQwg1tatW/Pnzy+/7WtBJpPJZDrb
MsRKxgpsd2/Xrl2hQoV++eUX+XfkyJGKQ7KiFQWxFi5cKL/Xrl3LIfnKfOPG
jeXbNAsWLChdujTxp02bli5dOjBMIn/yySeQz9GjR71/EEuoDM2YMQP6CuWc
KIhVu3bt+vXr67/PPPMMxAjX7dy5s2bNmps2bQrEDyAWhZIN9j/++GO2bNlI
LYHqM5lMJpPpDGSIlYwVQKyff/65ffv25cuXHz16dP/+/Xv06CFrSmDPgAED
CO/evTsg9MEHH3To0IF/R40a9d133z3++OMVKlTgxOXLl2/durVjx44cevDB
Bw8dOtSpU6eGDRuCOjfeeOP7778vVxk+fHiJEiUeffRR+Ofee+/dtWsXgdu3
b+/Vqxcndu3ald8fffRRs2bN+Pepp54KPAYYFrGOHTs2duzYihUrVq1adcSI
Efv37/f8nWDlfZENCQkogFhk8u233/Z8xCpYsGAkkDOZTCaTKS4yxErGivTq
0b1798brEkeOHNGFKVf79u3TRbDTUpRVrNOVi1hffvll2bJlAzhnMplMJtPZ
kyFW8tOaNWtkh9WgQYNq1ap1rrNzejobiPX33383bNjQ3epvMplMJtPZliFW
8lObNm0yZcp05MiRKlWqLF269Fxn5/R0NhDroYceGjlyZFzSNJlMJpMpRhli
JT/t3r27W7duHTp0WLly5bnOy2kLxMqSJUs5X9OnT09ECgcPHpTTL7vsMkGs
xYsXxzubJpPJZDIlIEMs03mlH3744bN/lLh3WJ08eVJT+Oqrr+KeQ5PJZDKZ
YpEhlslkMplMJlPcZYhlMplMJpPJFHcZYplMJpPJZDLFXYZYJpPJZDKZTHGX
IZbJZDKZTCZT3GWIZTKZTCaTyRR3GWKZTCaTyWQyxV2GWCaTyWQymUxxlyGW
yWQymUwmU9xliGUymUwmk8kUdxlimUwmk8lkMsVdhlgmk8lkMplMcZchlslk
MplMJlPcZYhlMplMJpPJFHcZYplMJpPJZDLFXYZYJpPJZDKZTHGXIZbJZDKZ
TCZT3GWIZTKZTCaTyRR3GWKZTCaTyWQyxV2GWCaTyWQymUxxlyGWyWQymUwm
U9xliGUymUwmk8kUdxlimUwmk8lkMsVdhlgmk8lkMplMcZchlslkMplMJlPc
ZYhlMplMJpPJFHcZYplMJpPJZDLFXYZYpmSp3bt3b/R1/Pjxc50Xk8lkMv0X
lYwR64svvpj2j/bv359g/Pfee69t27ZVfDVu3HjChAl//PFHXHJCymljUJ06
dYh89913y7+9e/eOy9XjqPXr12tu41U5CerBBx+UK955550JRj527NjgwYML
FiyYMmXKFL7SpElTt27dd955x41Gf9CCHDx4MEqCixYtkmh58+Y905KcC02e
PDlsZytWrBj9beLEiec6g+eRFi5cGLau6E7Vq1d/6qmnfv/99zhermXLlpL+
yy+/HCXa2LFjJdrFF18cx6ubTKYkUHJFrJ9//jlPnjwp/hGOMkpkaAG4ShGi
cuXKHTly5Mwz8+6774YmHqoaNWoQGZCQf3v06HHml46v1q1bp7lNMsTq06eP
XPH222+PHhMCvPTSSyNVb4sWLTTPIJaGR0est99+W6LlyJEjbkVKQgFR0Xsd
oPXrr7/G/bq7du2q8o9+++23uKd/NvTWW29Fr6urrrrqu+++i9flmjdvLsnO
mjUrSrQxY8ZItHTp0sXr0iaTKWmUXBGrZ8+erm2MjlgjR47UmJf7ch3QmWfm
448/vtJRrly5JPFUqVK54W3atPHOb8TaunWr5vZ8QyyoKXv27NpwOXPmrFev
XtWqVTNmzKiBvXr10sgxItYHH3wg5a1evXo8S5VUUsRKnz69tl3evHnd0TF2
7Ni4X3fTpk2a/okTJ+Ke/tmQIlbq1Km1rgoVKuTWFYYlXpczxDKZkr2SJWJ9
+eWXF/jSNY3oiFW6dGmJNn369L99PfPMMxJCIocPH45v9p566ilJPOzK//mM
WOdEMSJW06ZN1Q/269dPV05ovptuuknC06ZNu337du90EOvfLkWsa665RgP/
/PPPtWvX5suXTw6VL18+7tf9VyMWkyAN/Ouvv3bs2AFryaE4LmYaYplMyV7J
ErFq1qyJRercufMNN9yQIGIdPXo0Q4YMxMmWLZvutfjll1/gHzk3ln1cp6XY
EQs8YNZc1Vfjxo0//fTTQGTs/9SpUxs0aCBxGjVq9Nprr0W/+ubNmyVyu3bt
8H19+/aVfxs2bLhu3Toi4FAw/ldddVXZsmUJxBfrufBJ1X906tQpQh544AH5
t3bt2rqxfPHixRptwYIFejqu5NZbb5Vw8sy/+PpA9miOQYMGSZybb775k08+
iQWxdu3alSZNGol2//33A8nu0Z9++knXskaOHOmFINaSJUvAMLnoE088QXw9
96OPPpLw+vXrS8iPP/6opfv2229ffvllDsm/XDoUyGm1Dh06SIRrr732ySef
pIyBOIcOHRo4cKAmW69ePRxr6P21zz//vFOnThKnWrVqjz/+OJmJVCeisIgl
Gjx4sBxKmTKl1tgPP/zw2GOPkX7x4sWrVKlyyy23zJkzJ1CfaOfOnd26ddMM
E41+SG+Uo2vWrKEatYafffbZ119/XQ7VqlVLTqHvPf/881QIvwmcO3eu57c+
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
t6lTpz766KNhj+7du/fTTz9N4iyh48ePL1269M8//0z6SydC5JPckuekudyJ
Eyc6d+588cUXz5gxI2muKFq4cGHbtm0TjLZv376uXbt+9NFHCcbcsGFDixYt
cuXK1a5du99//z3B+AcOHIiS7M8//0wrnDp1KsF04iIaffDgwdmzZx80aFD0
mNu3b6eA/E2SfJn+ozp69Oi77757rnPx/8Vwnj59+oABA851Rs66DLGSpaZN
m4Zh79WrV+/evenGR44cSXRSEFTWrFnvueeesEfr1q2bKlWqWNxffDVkyJAU
KVK89957SXzdxGn16tXktl+/fklwrb///rt58+Y//PADlZOUXnvbtm2XX355
qVKlEozZp08famPFihXRo73++us9evTYv3//hAkTypYtCyAlmHKTJk1SpkwZ
qbc/9dRTXHfRokUJphMX9e3bd/369Z9//vknn3wSJRokdv/995OxrVu3JuIq
I0aMeOyxx3r27EnpQo9SFTfffDNGoFu3bt99952GM296/vnnGzdufMMNN1Sv
Xr1Ro0akQFY5NG/ePP6tWbNmoUKFbr311vr163fs2HHnzp1y4pgxY2688UaO
5s+f/7bbbmvQoMFDDz1EZ0tEzk1JLEYT3Wzt2rXnOiP/TwyKnDlzYqnOdUbO
ugyxkquwqAyoFi1anHlS7du3j4RYK1eufPnll3HrZ36V09KePXvGjh2Lp0ji
6yZOJ0+eHDdu3O7du5PgWrt27apUqVISXChU48ePjwWxfvnll3Tp0kVHLODw
mmuu+eOPP04rA2vWrGFq/Ndff4U9um/fvqeffvrXX389rTQTpxMnToAoMUY+
evRoohELHTp0KHPmzGnTpv3xxx8Dh4YOHUrKAUdGLZUoUQLLcPjwYQmhTuA0
5kpff/01v7///vts2bLdfvvtnk+Ao0aNIv2PP/5YYuKj4dgnnnjC89ci2rRp
U6RIEU5MXOZNSSY62MSJE8+flf8OHToYYpn+vcI9YV2ZIJ95Uvfdd18kxDKd
b3rxxRfPFWJx6VgQC1100UXREatbt24PPfRQnPJ1DrR69epLLrkkxsjHjx8/
E8RCN954IymMHj3aDQQ1a9SoUbp0acavBu7YsQNegq9CXW3Pnj31pj98265d
Oz109dVX58qVS0+54IILmDLI759//jljxozXX399ojNv+m+qV69ehlimf6/O
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
fOXvZGdXv/UnE5inZc/o4hTc9JGl8lpexMLD3leuXIkKE3PlyZNHVqiqmgRR
ehTBpVguXASHzZs3q0U4grx581puJol9M5yv6iKmAL8KDQ3Vr2TLls3+BYoB
hrVYsRxQwerVqwe6cToS269fP8P8s19Qyrx585zv5CDAhzZu3DiWbBTpwgYQ
pwEDBsjnezEIRLpEiRL6KqxRo0ZZfrATG+BSLBcuggOmJmfOnCpiIpwsW7as
IXwj9N61a1evXr2cTGG5iAasWrUqX758yqH/8MMP5cqVC2jq8t9FsTzeRfi+
JrJ84ciRI/q7LYe4cePGzp07A53PpG5Rvcu9i0jB0aNHDQszYgSyaYO+3X3r
1q3VqtTYBpdiuXARHH7//ffevXtXqVLl5ZdffuWVV4j6zTvYfPbZZ/HixRsx
YkSM1NCFGQ8fPuzRo0f16tUZtfHjx7/wwgu+lpdbYvv27blz565YsSIWPjYs
pnWITZs2xU6Sj8uW7yZcuHAOOelg0KBBaDF/5eyk2AmXYrlwERHcv3//ypUr
vg4n/eeff2LDDsMuDJBRC2Lzn+vXr195jChaPeXChQu/QPtEDWPDKTk2cCmW
CxcuXLhw4cJFpMOlWC5c/FsQ0EdVLv51iCVznq6Y2YNhcicwYz9+++23IKap
Ix0uxXLhIiL4/vvvo2FNzv37919//fUWLVpEdUGxEw8ePJg9e7baRilO4scf
f+zQoUOyZMnmzZsXU3X49ttv27Vr5+tYwziDv//+Wz/QxzkgV9u2bQsJCYmR
PZdk71lLawMrlu1nLR+8e/eu5c600YnDhw+vWLEiiD1AgsO+fftq166dPHly
2UU5BuFSLBd+sWHDhvr16zdp0gQXgP1/7bXXGjRogADHdL1iHlitPHnyGDa0
jwrALkqWLFm1atWoLih2YsuWLf/3f//n67i9OIC//vorNDT0zz//hOTEYOj9
8ccfJ0qUSJ2aFCM4efJkWFhYw4YNW7duzYjPnDkTs5M9e/ZIORdbgK83HPvu
EHCzcePGIYrBUaydO3dOmDCB1qHIZjoE/WjatGndunX79u2rfy4HfVq5cmWt
WrV48Nlnn23evHnlypVfeeWVW7duITbdu3cvUKBAxowZS5cu3bt3b5K99NJL
smPq3r17SSz7DHfp0oVnIYcx9XEBLiNBggTRcy7z2bNn6RaP9wCFGF+p5VIs
F04gB68os/Dll1/qRxP+Z4ExlNPBoqGsN9544z9LsXAlW7dutTxBO27g2LFj
lucIRz+efPLJmKVYHq+LRK1WrVol/zL6ZcuWNUyA7Nq1S98ZSeHUqVOrV6+2
yRxmki5dumzZsgVXN9hL0BRLIEbDfI7MN998kzBhwqRJk+qbmGFyIVQQQp2S
Xbp06YknnlA7h8iJ3thkj/czZ8hMmTJlhGU9evSoTp06pUqVkpSIWerUqWGJ
0b9R8Pnz531tyxzpgJlDQaOnLL9wKZYLJxg8eDCarhTz7t27hsMB/4P49NNP
q1WrliNHDjmyMKoxY8aM/yzFivOYNWtW3KZYDx8+vHbtmpzBJ7BZzrR58+bk
yZPr01b6wYiCESNGWG6FtGHDhubNm9vUpEOHDq1bt86cOXNw8xsRp1gQgKJF
ixYsWNDQA3JicrJkydSV3377DXJVsmRJ8wfLly9fVqcIQV30Y9/lAFB15Gv3
7t31cyr79+/P3Rh/fRalaNq0qUuxXMQS/PTTT+bzNM2ASIwaNSoa6hPjWLx4
sa8dGHQQLRIqwjPz5MkTPdte/aco1unTpzdt2hTTtbDGsmXLbty4Ebl5Tps2
La5SLJjSyJEjMSDly5dvqMFmBSMsiODFPtvgKNbWrVtr1aq1ceNGaIbDpX2f
fPKJfpJjxCnW66+/Pn36dDLRN1x98OAB1ea6TrHefPNNklFny3yOHTsmPwwU
C+bGv0TE8q+BYs2bN4+7ixYtCrr+UYQ5c+ZE1mvE0NBQl2K5iGpgQHDKkydP
Xrt2rZp5PnXqFBfHjx8v2y0ePnw4W7ZsDRo0QIvl5FZLfPfdd2ilTPOS1Vtv
veW8Guj7+vXrKVHOPJUrWK3vv/8eM/Xqq69yi982j+NqSaPvNY2VW7p0Kbcw
FFgMeYNA9WgsKfVDqHVAh3BklKiOfyVIXL58ORfJjZCWf1944YX48eNzkQ6x
/7brtddeGz58OD9CQkKcU6x79+7NmjULQ3rnzh25gmmVffN27dpF5Rkd/YzC
P/74g+bTLqrdo0cPG4pF//C4r1eWjx49IrY9cuQIjJogmpTqnGvB1atXsecY
fwyd/j7uxIkTdBecc+rUqTyln5xLHP3RRx/JmSncCg8P198+nDlzhgwxdPq4
k4bEs2fPNpyWsn//fnJQh8Nu2bIlTZo0Xbp0YRTk9ECeldOuPd4FLVu9QHr1
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
7ClXZMZSfe4nq+LVEiYDsI3yI1IoFsYB0TKo7eLFi8lZnzKVhV4y9eSLYnm8
4zhs2DCGErMgU2o6xQLr1q0jHqTrZBANFMvjVSWiJ2KxihUrwtkMtUXZDZOE
o0aNypUrl/x2KZaLqIZa8r1//35Ed+3atThrAgfzu2m/FAslMn/r9O6776pt
aq5fv37q1CnLZ4cOHdq6deu7d+/Km75AKdbIkSPDwsLQNdknxxfFatmyJcqr
wiW4gXmXQukQwsMxY8YQJ5KgUKFC7dq1MySzp1g0mXINWzRAsTAUQkhIcPDg
Qcu4mwbix+ES0F2cnV+KRSYpUqRQ67I8vikWtA3bKGYZ+hcoxZo6daph6S8E
Q3GkICgW/ogMDcvpPd5FU+S8ceNGCdgFiCVMSRxWqlSpnFMsfBkBPsKpVuAz
NKVLl/a1MlbAiBPq6qvZ8YwQeIZAN+O9evViFMhKFqs/fPgQMS5YsKDHH8US
PxvEChA17ogotES9l/d4X8llypRJjYI9xULGzO+ncOJkjlTLuAvFqlmzZvny
5ZVLpRRxcA4pVkhIiHklmBkIEkTCbzIFfDrGwTD9SJ+bX4xSSaiUebdwjIMh
4GI4YJ4GNw3FUvtKMdCoreXKvYBmseADTmI9tespfS7zVOqzBQPFQvCqVKmS
I0cOs0GTBXvyO1IoFhGEmp5SLRX3oTcfa0MQIUtQfFEs6i+diRHAYsjXi4pi
MbjysRXuoH79+gihx0Sx0G55+YLdxlybl/NRdJo0afT3oc8991ydOnXkt0ux
XEQ1sNgyi44mZsiQAYmVDffws/v27UNBEHjxsFhUAlIsreUXhbAjnnrmmWd0
U7x+/Xr9GzrUBCthOWmfOXPmwYMH4zXmz58fP358VE8cIlZUbQ944sQJlMty
R+ucOXP269ePxzG8qCoGXx7HihoCIthjnz59cCIEyASnZo6EzxL93bt3L8/K
Ls1UCcZ1+fJlPClMw/PYgWKsSKyWWyjQCrrLsLaEizwiK7pxRvyuUaOG2Vxj
u7iFuyF+79GjB8wW+8OgQCoSJ06sPMikSZPU19Y4esxLeHg4JV64cKF69eq4
V3nFoANrkydPHtIcOHAAiw3lU6vUdDD0yuzICyMhS1hv+pk4WoaY8YV8qtGk
vWrah1tYV/WmFYrF0Kv8MePSh/iyrFmzUlUcB5L2/vvvE/MyLlw07xXZpEkT
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
ioW6jh07dsCAAUWKFHHUO2Zu1vuyZcvat28f5b43b775Zp48ecyTChMzAoqV
tCG7hehJK9GCnAhsng1qRYdiXbhwoVatWj/99FMMPh0e2GC9evXimWLBNDp2
7Bjq16tXr+bIkeOxxx6LWeKHDh2KVpCKT8ghsPFJsapWrernCObYxQ8//FCg
QIFYpFjr16+/8847HQev3yJOnz6NOccDFZk3b55PigUGDx4Mo/B56MO+ffva
tm3rOKX06NGjyZMnj0+KhYJ16NDB0UVvYtWqVSlSpIjZTsvIrUKFComTYln2
kdnxSbGmTJkSapsaR7336NEjZ86cUXYI4P9h9QHFCnC7Y+7cuWnTphVnuGXL
lqU2aI/UqFFj6U3IUexu0HKpUqWKn4N0Y4aIiIh4plhgyJAhelR97OLnn39O
tBQLUJXxRrHg8EWLFo2fbznw8MMPxyLFuq1x7Ngx/xSrfPnyjz/+uJ8nL168
WLFiRc8B8YwZM8YnxbJunnpvnsUZi4C/JVqKJWdAxxvFqlSpErw61K8xq/dG
jRoFFCvA7Q50WE6rt+yx+6M21q1bRyQ6ehOh9g4iIvfr1+8WMxDGCSQIxfrm
m29oretRtrcCx6qBgGIpXn755YBiJTj8U6zLly+nSJFi69atfpLt27fvc889
5/lT/FMs8Oyzz8bWUaEOZxVQLEW6dOkCihVQrKSKmC0AlLeyZcsmB5qb8DNQ
yLt58uT58ssvo/tdM4Xnn3/e/XVFglAs0KpVqzAdWT5FTeSaNGnS+vXr9U5C
USyfGQ4oVswQ68tv4209rx+KJZnZvn07T166dCnKNL/++mvcQqjDjBKEYn3x
xRdZsmQJdbCFf2kfOXKka9eu5p2Eolh+MpyYKZbPXAUUK0BiwD/+8Y/ixYtH
a87wP//5z6420GFMw32esh+KxXfr1q1r3jlw4MDw4cPHjBnTuHFjqIXY0aBB
gx566CFuWnYHES1c3lq9ejX/9u/fHydQtWrVPn36KKU5ceIETU5JxJzu/ttv
v02cODEyMrJ169Z6EPO///1v7ixcuLBjx46YMD7wq6++4rvbtm3jzn//+1/I
EungXX///fdIG7z+2muvyesEAr3JK1qQl156qXbt2u4i//jjj/Pnz58zZ46K
8dFHHyVXZPLs2bPmk+QW50Dp6tevT+nkwB2hWJ988sm0adMqVaqEHA4ePCjP
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
tjQDlhVqWVlcY+vWra1bt+7bt++wYcOWLVsW6mS0AAESHLt371ZdXbBggecS
s8SPiIiI6tWru5djuBHqTMAwuHLlysSJE0VKo0aNCho7AW4XBBQrQHjQsq5U
qdK5c+f8b9oQIECAvxsuXboUDKMHCOBAQLEChMepU6eyZMni3s0vQIAAAQIE
CBAGAcUKEF3cuHHjk08+SehchEQiz15s4a+//vI83SxWgAy/+OKLNWvW3MrG
HaFS9twhJzIyUg5GidYqVM+kwqQQ6uvRSuQ2xS+//OLerSKu8Z///CcRjtEn
2vpNwCXYps/8/vvv3ft1hEEi7MCkRPv27duwYUOCq19AsZIqXn/99SZNmphn
x0QLc+fO7dKli9vkz58/X7du3XLlyt1yBmOOFStWtGvXzvNsLyydUusZ0H4g
ewT5eRJpnDlzRvZQdUuG+CX3f/rpJ88TdmIRb7/9drFixeRcvLjAu+++W7p0
6TvuuEO3oY4tQAtLlCjhuHns2DE5E6R///4zZszwGWi++eYbc2cqy948ql+/
frpJvuDjjz/Wla2///777Nmz+/TpY85z3rt3r+7koylnz57dd5n+H8g5VeN5
jF3McOXKlcaNG9/6tgyrVq3KkiVLDFYTxxjXr1/v2bNnsmTJojvzChleuHBh
/fr1L7744okTJ2KddVD1kydPFgXg71dffcUnCMS6K5eA+/wafjPVP/7448iR
I1T3jZuQO56uyRO8InurCii17HEaCtOnT+/Ro4fPxH3izTffLFWqlB6fNHz4
8HTp0oXa0M+N8ePHp0+f3r2ddXwCVWnTpo1OYkSq8+fPHzNmTM6cOeOuHeoT
AcVKqhg3bhyaH4P10QI0Nl++fJ6T1R999NGEpVi9evXKkSNHKNcdGRkZLYpV
pUoVPW4mPDDhRYsWyaammTNndsh29+7dQ4cOvfPOOydOnOjfQcUM1AvZjjuK
BeAqxYsXj/UA50mx9u/fLwf0EJvw9ubmkALzACYBca179+5mLDt+/Di8yD1X
nILUqFHDvAOR08NNBPyrxwBZt0CxKAi6sXHjxhi86wnoYpo0aWbNmnWL6dD0
SJs2bXxSLLB582bdUdwPULZXXnkF34LzgRNu27btmWeeQc+p/fCrFP2DT4wc
OVJPNZJth8lks2bNZMtZBcSjQYMGmLlu4esGVBC2xuu0dyA/ixcvxjXBT2T/
Lj+gvMmTJ//888/l3z///BOqE+b1hx56KPwh6THAtWvXKlWqpBRLdNi/B4MT
QqQTlmL17ds3W7Zser4SmYlT3xgtBBQrQHTxwgsvJCzFCo9XX301WhQrupAT
uPBC1apVc/RXXLp0CVoSd582AcGIUzdSunTpuEjfk2LJgTLS4/raa6+lTp1a
N1Rft27dpk2baOkvX758+/bt+kpERITjtE0CsWMztFDgE444Rah94IEHtGsr
xhTr8ccfz5o1a/369WPwblzjvvvui2eK9cknn/inWLDlbt265cyZ8+jRo+Z9
OYXK3BTrVgBtc7Dr//3vf1SZ+wA+yBh8JsqV1N9//72cbqN3zMMrwwO1L1Om
DK+bPS0nT55s1aqVzxRiCzRDzEPAaSdGq5GIwSYsxXJg+PDhMdvhNi4QUKwA
0cUtUqxY7xhxDNvFNcUCFStWfOqpp/CNvXv3Nj8NSdBT2MIjBkJwvBJdihWt
+SdQDlqmZuCILXhSLMs+SFcOdrTsfkU9CPiGfebjmDFjTJ//xRdfEJscPRs8
4zM2EWdz587tuEnkldMwrZhSLEhC9erV58+fT4RyDFYmBiRmikUtt2/fPmPG
jJ7DOgMHDoxxb7wJKHTZsmXdE9KgxFiT4+aqVav69u0bZZpr165Nly6deT61
z83KKDL2GxkZiYgcWzS3bds2ns8vTmIUC24cUKwA8YBbJDOhXr8VinX69Onm
zZvfQqb+LzRvV65cadasmTnlLFoUK2YTX6FYNH4JCrhHc62lT4r1wQcfRHcr
148++ojPmXeiRbHkHFjPsyndT4ItW7ZQNDNwxBZCUayjR48mT55cDpUj4nTr
1k0Y1Lp162B6q1evXrp06RtvvCEPT5w40X0YNw941ru7fseNG1etWjXHzePH
jxN/5eGYUay33norIiKCCHvXXXc5uko84V/xYqVVEncUK1T2/FMsSC9Pjh8/
3vPX2Jqlv2fPHs8ORigcjN28I0c5XL16Nco0H3nkkQYNGsh1tJzJoUOHcCPS
CeY4dQgPFqaxEBdT4uOaYpl5VinpTUeJPB/2fDLUWwHFChDXuGEfTd6mTRv5
99tvv0Xltm7dunPnTlwHpj137lzzYTlXvXbt2nJmPcDMe/furc+cP39+jI0m
TZrwmFIsmVg4efLkdu3aQb3kXRzmoEGD4Bs9evSoVKnSww8//PXXX1v2vGKi
T6ZMmfrYcEwKff/990eMGMF9AihpyqHDS5YsuXjx4okTJ0aOHMm/clTi9u3b
pdX52WeflSpVSs6a51cZXRKKRZFxGpQUIYTa0/6///0v9Ozee++NrnhJ1rJH
DCtUqHDPPffIMayWi2JduHCBsiC0Fi1aIFgp7yuvvIJHypUrFxlWjnTmzJmh
Q4dSRzRg3UcnU3Fp0qTJkSMHr+i0MYqMkA8ePMgXyQ+0QZ3MX3/9NXPmTG7i
/69du8a/MDqkRMWRgh6t6wChUE6Gbd26NbWmgSMM4EtHwsI8MFpfcVMscn7s
2DGyZw4RmkB65r/FihVzu3Q3tf7tt99k5M6x6ANZoZOO12XASA7ajhnF4lsS
mKgaXg8z5xnuOnXq1MjISGoWOVeuXHnjxo1//vnntGnTkHzdunV1zjOGM2HC
BJnctWHDBqqPaCinA2N0XMtMIaoYCi3nRkFK5V2Z2jRs2DCk17hx41DT3SEw
cuo37+7atYtaO3fuHO9CdDF2ahAtwmnwRTHtOnXqNGrUSA5z58769esx808/
/ZRSo3LopDJzoVhY36hRo0SjHMdYK5o2bUrVR2tVGmYSXve++uorxyuPPvro
s88+605q5cqVadOm1fOdKRSuA8IcZR6oYqSKrckil44dO/pslfz++++4jn//
+99UeoECBRwmCUtPmTKl+7xpannTpk39+/eXf1E2WiKoAS7Os/cPisiv+B+E
r5/AzHE10g+vHiMMxcKB0JwR1dK+NV5csGDB6NGj0fmWLVvSOApFsTAoPifn
fV++fBmJwR7xmWRARlRRPJo2MuOCZg4P4+p5GCFwk7AiZwEgK7woFkqUcXyC
zBDX5PRYPkHgyJcv3/3338+FObUgoRBQrCQJnFX16tVTpEgh/+7YsQMfgiVu
2bIFj0oox/VJ2/CGfRaqnInGX+7jnU6ePInh0+yV1+FXWITMycTiaPEpxaLh
uXDhQsvmG3Cn3bt3o+QPPPAARrR48WLCJSYGncDP88yXX35JrC9YsODRo0c9
TwyUxiyEyrInzHCtE1P5CkZt2QdwlCxZslChQpbdhTV9+nQeg7yRpvR7EGoz
Z86ML8VgDx8+zJNDhgzxlBJOhuhQtWrV6IpXKJbImWAKzRMuYVIs4guCEm5J
xnBEtK3wMNBCnsEDkGEZTuItguwPP/zA9ezZs/GHjs8hed4tX748r6gvJaLx
FvGUynr55ZdFCJZND3BQxEepdERKFdNk5oGxY8eSgudABo5XCJh4XWofchil
HKAEfcPCsUrL8qJY+G28N/W7f/9+JFOzZs3wc5vJf6pUqdxLZal3mIB5B6JO
Fd99990orXl/xYoVbopl2QNGMlYYA4olo4RyvWfPHqQNIwr18ObNm2EUUA7s
BTPEOigRWSWsYzL16tWjBuVJGUjSntLly5cTzkSqTzzxhIYbrmWNwI8//pgu
XTokyfWiRYt0/AtlIB03xaLe4aWyQn/t2rU806VLF4gZvAgVzZs3L3mj/UVV
Qh5ojxCzUC0Umzho2RZNfMTAn3vuOVQLC6UNRf5lmYxQLAgt6oeWUrOh+nh5
K7od47iy8LrnHuYmq54xF0dBPkVogMapz/O2aFvxYqdOnfgcooZi+cw8xgXr
kGvMYfjw4eavSA8n6T6fmnzmyZNH1ExaBGIFVL0eI67AI+FJcN1cQ7+TJUtm
2ccGYWvUFMSGnOuWLGEoFpUuhP+jjz7CnwhxHThwILYvD8AwScqTYvEiTBKd
tGyXQoko+Ouvv04G0Fjxfrho+CTPcIGLE2JZtGhRjAiLiIiIwMuRbXwXGoj+
wBgdX8E9opDQKr0T9GIFiAcQcJViAbRXp5rQdMIopO8Fd2pOEtb4O3fuXKVY
OBwz4MJqxB9euHABf44rW2oDPyksaNWqVWbHOwxHmhgAjw1BCpNtDErW71u2
S5QBF+J+hw4ddG75iy++KBRL8k9ZwgwU0hIP0+tO85lIFCY/nlCKZdmeh/gI
gyKTJsXCzHFE+hhhkXyKJ8QVw0L1J8oLt0FoyBBHnT59evcXESARyrxjDhQi
GRKXIAtj0TVQVJNUutR4mIFC6gWhyZgOf6lWwmK0ZOITDoq1a9euIkWKCL20
bIaQJk0aQkmYFOCoxHQHDUP4cAOoi+NhGuBm7BBQQMiYm2rCu+RU5RhQLPgJ
JibBvVevXjQxwk96L1asmLAUy46G5pznOXPmIH+5lmirFIt/27dvX61aNaiC
8itUK2PGjEgS/VmyZAlxkJ8oAoqk/bfIhxjkplgYC58WXg0R5VrrHc2hqaKL
3WBTRGp5EsV+9NFH5T7GaBq72KNMLnIMFEIkPMeILZtiOfgJAVeEiWnwN1b2
Z8uZM6c22UxQcJqHEHK5Rjd87gqFdunyFlSX5oyftxAL7Aj7lQLyaQfFArTa
Vq9e7X536tSpQrHE5GnhUiNXr151NCIsez0ID+u/ou2kqasJpDUt16EoFu1c
fAhsFtUiNV553wZMD5ciD9OmJtC4KRYZw09iklygwCgtIkLtpZlpbrdSunRp
zLlKlSq4Rx6m2cg1XIvWB94Mxj506FDL7vvNli2bDhmYWLNmTUCxAsQzaEH4
oVi9e/f2nNWJN1aKlSFDBly3/qRzsbiguXHUgLimW6FY0ADixfXr1/HthDx8
Ec4Euih9ZYJNmzbFCsW6ePEi6bsHFKKESbEs2xHBsvBpRDShWDgT7sjMIgVc
Qhijg2LhdiIjI1WGnuev+adYAjwVAsQT+qFYuDJ+nT17tvwLu86SJYu5X8fJ
kydjawaISbFgVlARatPMNtH27bffDpMC/hnWYd6BotAopiHg2GYQsSDbd955
x50IPp+WhYYYwa1QrDZt2piklGZI+EnvPimWZUdbc74fgQajM/t8MA0aI6YZ
oofoHhkwv+g5F0uqXvaF40UMR+sdzcFpuHNO4s2aNQtFsbBcNF/mIfinWJiz
JyMdNWoUWXIPmcUMUCzpVXYDAiA9fnwxzC4NDtx///3RXXWLJdapU0dGDQR4
DHyU47FQFAseqJ2l1DviRfierKNChQqh7B0rQ/P9UKwBAwZgFKZqQecQEfpm
Jug5F+uNN96guYRTgpvRjJV+fmSLBGgNKYlF7UePHr1nzx4SQeWmTZtGO13H
W2mtEC9kzJ2wgsA9SwQJDChWgHiGf4rludTdpFjJkydfvHix/mRSrNy5c2tz
RnErFAtrgvZgmNgdFKhAgQI0bTBJcz5VbFEsbFnaztHlDw6KBaZMmUI2aHEL
xaJlx7+OiR9hKJZjC003/FMsykLTj3bf2rVricV+KBYxnV/F6dHarVSpknTK
aT8P7MVznswNH3C8YlIs/C1NeHPO0oEDB/C02nPiCSgWnN89FZlSOKZsyQaq
8C5HNj7++GMU2L3tc4wpFplxDO+SAkxjwoQJoV65FYrVqVOntGnT6n6khFpU
y5E+BovZmgUPNd19zZo16DMfRXvNziI3xSKH0CRaW+3btw9FsQCBVfbT8E+x
ELvnXCx4l0rJgRjoHhQr1MaeAwcOrFy5Mi4Rzfd8wA2aZlSxg8BH6UkQl2P1
Is4N0uV4zA/FsuwZSg8++KA5yqmAYpm9WJo9ksUJw398Uiz36qRBgwZR42ZJ
PSnWmDFjPF09pqFMSaa94dvHjRvn1mFUnVig+3XUqFHDsS5AEVCsAPEPnxRL
5mWdPHlSfsIfit2ZFKtgwYKot9oUzEQo1t69e3Xwy7LtRYKyH4rl6QMF+Fs8
DEZn2b0BtJhkKpciFMWSBH1SLB6WuRmUVxuVv//+O0Qlys3e3RTLsnkIOdGB
Qjw2AULLiGMhboojUoolv+IktaVmhVj0rRRLEwxFsZBY4cKF5cl7773XTbHc
Yie2ymgRtd+1a9e+ffvOmjULBfCcL2eCOFspLNw9cibFWrduHUzjhrGwqGnT
puboqidwvEhSJpmYoN4dLh2hod5QR8d0YkTkORerWrVqss27SbFgYgjWcxK+
As/vHo6kLBhOqEnvMaNYf/31F5UOgSfU3nXXXbKVgcxa1A3qeYaYhWJzc/36
9XIT2SJ2N8XiPsJx7LopQHPM2pEdKaXLl8gbimKdOHGCt2QY1z/F+vHHH/mp
Z8+epnJScXCYPXv2eL4CsQyve+4GRZUqVUJNkKMUyBODdS82sexBUgiDgwEi
TMd2DZZdd0pTSYq3zH4z0kEldFhcAMWiis07qBxs0NMLKcXCvcvaAaobb/zE
E084nmzRokW2bNl0AJFcYTJ8SxrUyNkPxcJSIPMyOdayR1FpTdBy5F1ZGGLZ
/ZYpU6Z0UyycNnUqFcozuvIFqydvkocRI0aI1yL/eC15GJMRqfITRRNd+uij
j+6++278vOe8joBiBYhnoKswHywFZyuD9fi9xx9/XIjNZ599ho2gllzjx/Lb
wDksXbqUaItL5P7TTz+Ngcj11q1beb5z58779u3DsdDmypw5MzzKspuZNFpx
+7yLCz179izPz5w5k5tXrlyRz9EwrFu3rnR2RUZGZsqU6e2338ZO3fMHBJ9/
/jk2K7Mm8L3YuDlrWtLPnTs3ZnjDXjgp7ALedejQIe5QkBw5cvCifL127drQ
HjevOHDgAC/iB8whSAlMju0RHILF+ZA+9MORJq6AGK0UCx9IgMAh3LCP1UBE
upAfFpE3b15iljQzIXg0A6FD+E+4jeeiJ/KZK1cu/NiUKVMs26/Wq1evU6dO
UkbpNKMgXOMVM2TI8O677z733HMQ47Zt286dO5fns2TJAgnkW+4VhbLHF1Xf
uHFjhE8bE66iO4rfCHuGSHThHij8xz/+wSfwq1C73r17uztF3ZDTDB03HdQa
b4wSwrLQZEeHleeKQjJDk1nGpEyKtXPnToSji3MdIOfoPFaAzpj70N6wdxHn
RarYfZoSZSQiqD2iSzz55ptvyr+TJ09GH4hKXKPGRFuZBEUlQmwWL14s17T6
IeoYEakRdtOnT48BYoZDhw4llPMMUoIDPP/881Q6VYwCUArHxp60rfj05s2b
ZRUeYf3GzQX1aCM/iR1ZN+0FQ0N/oPfEPhEs5AQ5Q4R4jLCLcxDL5V+Ym8yp
lnJRvwUKFAhVv1ARGhHkEGMXlSZQyjwBz+djAOo9FIGHRYTp5p09eza/6mIK
So2sMFjES8F1DSOep127dvqWDOTB6yxbGjAuLAvRmX4DaaCiOArTxVEpJmFQ
CCfhu1Q61dGhQwfuQF2KFy/Ov46HcYZ4Tr6ISpAxmSUOxcK0JasYC6oCeycR
ak06rgEWmixZMjzhDXtyKY1ZNAfGIqrF59BMdC9Pnjy4XJQWrUuePDmsWxaZ
KtATio+/InzghXTL+rfeegv1njFjBvqJJ5ebsmBn4sSJ27ZtQ4ayFAt3qstj
IyIikBIq4bYm8omLU58vqzV1k70ER0CxkiSwr+dvgvio19AqOJX+K51XsqaJ
8IoZSpPzjTfe0GdkbgYv4v26du1Kyqg9hikjNRj72LFjmzRpAoWQ8+xgDvIi
wQVtx2TkX1l4jnkOGjQIcw7VOBWYneSOOczQM82bdBFgX2QeRmHZq4H0V75F
PuUaV+D4BD4Nn+84/U0O1DDPUnHggw8+0PTdE8Ixf52rb9ln4OIZ+vfvD7E0
5xcRx3v06IEn0RQQGq1IHIg5IGsC74HTwFO9//77lt3oljzgvnD4+DH599NP
P8UHQoZplhJnkQaNVmlgQo+REhXtZraUepgN8WzIEw8sDgqKTuXy6VACiS4c
090Jx0QNlAfdkxWRfgC9d6/5Qshm7yL6idunReAeEFywYIH7FBI0Qam1SbFk
zwHPCXKW3S+h+mBOvUO99b57FRvBV36iNtFhyIz8i06qekOVMZ958+bJv8RQ
LIgLwj3Bmugm94UVUOmyMwPxTnfpRAJyEy6EXVO/Dn4l4IE7DMBzeBGKLumj
Wtp788wzz7Rq1YomBp/AG0h5+QtPRjP5iUCsvTrQLZUA9Om1116T6zALLS27
jQPzhJagcgRc7SqJFUAg4Sfm8ZQK7Ev75dxAhdAZ+J78a1a6AybNoGG1ZMmS
jBkzWnb3uD5j+hzVBHMvAveQt2DHjh1a6dQ4VByHTOWG2jDh8OHD0m7SLXqg
u+rnoUA4B+5oxvC0mKf+Kz23FBal4i2ypD1RehOOBHcaPXq0g18JaGDiY/nV
Md+Vt7jv2BYDB85NHKZ2JGJ32glMfqZNm+a5J4bp881gZ25MlIAIKFaAAAFC
AT4GVY7FQ/dCbT0aLfz222/ly5d3LPsicPg/QMe9uzvvEpLkOsYH6Nx2kIFC
WjTCqGlzZcuWTTqofcI9FysxAxYdfjFFKEDP4DPRfQvOHKZL3BN//vlnjRo1
PMcrA9yOCChWgAABwqBSpUp+Bu98IlYolmV3Ezk2A1+6dKljX6xQWLFihWN3
96NHj5qbp/19KBb86r777jOHVCpXrhytg5NuL4oFdZHxtWi9dejQIZhStHZG
tWylateuXag1jKGwefNmXdsbIAkgoFgBAgQIhffeey8iIuLdd98193C4FcQW
xbLsqTXmDlo///xzhQoVohxa+v3332Fi5uAddwYMGGCe8/L3oViyacO+ffuE
dcAKGjVqFK26XrlyZenSpRPJvBc/gMN4LtYLg5jNRYzBWz/++KNu3h4gaSCg
WAECBAiFESNG1KxZMxa3IT137lyoqeMxgJ5aKPj2228jIyM9twkSXL16dcaM
GY6hon/+85+OaPj999/7OT8oaYDit27duk+fPkOHDp0zZ46fIwUV+/fvb9eu
XaVKlWbOnBnl+tPEg71793rOyEpw7Ny58/r16wmdiwCxiYBiBQgQIBQgGz53
ug4QIECAAA4EFCtAgAABAiRVXLx40bEVVYAA8YaAYv2tIBtJ6baNv/zyy6uv
vhrqycQzvyKOMnPu3DnzJIskhr/++su9BVYCIlqVGBfVTZzV9fI37DNEotxj
1szPBx98EH4D0qQHRy3w7/Lly4cMGRJ+4velS5feeuutsWPH6m6o8YMrV67s
2bNn3Lhx5pFMlr3XhJ8J/N9///348eOnT5+eUH6P7x4/fjx296lIYvjss888
d6hIVNHKgYBi/X1AzG3ZsuUdd9whm/wQL7Jmzep56tN3333HT7r5ZIJD9v6N
1iyRKLF58+YUKVKEOeLktobM/XacUpewGDp0aNGiRf3sJLl27VrUL3bn9tCy
yJgxo2wrDfr3748hOHZFC4PRo0fLbr2xmKUEgWxt6qdlsWzZMmpBNrsTwJqw
mrZt24Y6hkYAxRo8eDDiCtV8iyNAsUaNGsV3zfOGLH8UC36Fk6FJ0qxZM/fZ
TPEDOccqUTWLfOL69esjR440d0+NC7zwwgs4NNl72YHGjRvrns+JDQHF+ltB
9nXXfRQJHJ4UC4dTu3Zth6dKQEydOhXXF4v7PAuqVKmSVCkW2LBhQ6KiWJMm
TXr44YfdG4G6AZOpUaOG+4icW0T37t2VYhGOzWP+osRPP/2UPn36pEGxWrdu
7SeOr1u3rlatWtph9eGHH8qBnn7w3HPPpUmTJtThQXEHypUyZUrHBuB+KBZ+
QDcSTyjIuTm3I8VC4PXq1XOfkxjrKF68uCfF6tWr1+OPPx7XX48ZAor1t4Kc
VacUC08Y6uzyvwOgbUmYYh08eDBRUawEB6FWKZZlHwrsn2KBfPnyJQGKFWNM
nz69Z8+ePh/u0qULbTTLPhanrxfGjh0bF5kkZTlZlaCv36pYsWKTJk3kWg+x
cqBatWrbtm2LiyxFCyVLlrwdKVa8oWHDhp4UKzEjoFh/K8SYYsXiKXWJ53MB
xUpAXLp0KRZ3NPWDJE+xfvrpp7hryw8YMMA/xcqbN29kZGQc5SQMSpUqNXr0
aMdNP71YuXPn/ltRrF9sxMOHYhc+KVY8R6vwCChW0oZjHmC0KJbYIK9PnTrV
PIddk43BJEPPt/TkWbnYuXNnpUqVPDMTZTqOm+EzqRTLZ2rRLVcspnbj/4ef
d99//30HxfIvH8/P3bqUtBI/+uijYsWK6ZFnbvz6669//PGHOzPhixz+ZniK
FaUoQlGsG/ZhzRcuXJB3v/76ax3RhvPIYJmZ+A37WG39ECYppzabn9OfIKJ6
/4svvnBk76+//jp//rwmu2HDBlRav6XPy7W8QhU4AhC/6unPDly7dk3v+6FY
169f//jjj7/66isUz/M8xDgCAj9+/Lgc/L1v3z7HrzGjWNEyjShfDH9T7yvF
8m9TPr9upoky1K5d+8iRI37e9QMkH8aWo5vDMDIPQ7HUt+zevbtcuXLRK0Bc
IqBYSRVXr16NiIhImzZttmzZdDNGnxRLdiOUg5VpF/NKlixZoD1yHDBevW3b
tpMmTWratCmO13zx008/5fmKFStOnDjxm2+++c9//tO/f3/immz2SAgYPHjw
2LFjeYCfLPsMrx49enTt2nX16tUZMmR48MEH8TDJkydPnTo1n6tRowZO+/Ll
yxAhGXfQ7A0dOnTkyJGUbsaMGXKT8Ddw4MBx48aRuMyUppiUgtb0Aw88AEt0
F5N4NGbMmOnTp+fKlYsykg3dkBAv9PDDD3OzSpUqSBIBduvWjZRnz54t/z7y
yCOdO3c+dOgQhr9kyRIyM2LECDJMqR1f4YGlS5fywBNPPFGtWjUCEASDUpMa
mf/hhx+IDvzboUMHSNENe9EWSY0aNYpPy1FlL7/8cvXq1Q8ePMhjWbNmTZYs
2aJFizwr/ezZs3369KFQLVu2zJ8/v1KsG/YkZ+737t27SZMm4o7OnTuHGJ9/
/vlGjRpxQSblxG2qoFSpUu+88w5PIgHC0w2bZj/11FP9+vXDy4k75ea0adNG
jx5NjTdo0MDzhFYFTpiqqVevHtf/+te/MmbMSMoVKlSgluUscgWchNLhJGWh
PYylY8eOREmqsnv37u6U3333XTKPbFEGqlJufv755w899BCfQG567HUYigXr
QJNRlfr166PY4uT/97//DRs2jJSHDx9O7EuZMqWbYvGkHF+bI0cOBLV9+/ZU
qVKVKVNGmBX5kZGphQsXkpk9e/ZQoVTiPffcg+gwxvHjx6MS/CTHlMPTUEVK
yk8IoXz58vA67qMYiD1z5syaf8gV1v30008PGjSoatWq3IH/IIECBQogUjkz
mmSpGtS1Zs2aXH///ffQD/RH2y9kfs6cOSgMf9EWcwM0hDZ37lzUQIgu6ZQu
Xbp48eKU1DztWoGdIqhOnTqhJ4gC2SpD9okzZ84sDQtCp/styBVCwB0h6rx5
8yJY99ad4SkW1keh0qVLhxVw8eGHHyIWyohSYS/UDmVXzkzrr3LlyvgxKhGR
YviO1N544w2ex/th3XrkJZXepk0bUXjdPgI/QA3yCWq8VatWkm3UjDSRJHWN
mf8f9t483qeq/f+PzITMlMwiU+Z5KnPKWJmVjyHzGJmHzFLmMVOECA0KaSZF
9bmJryGlJFHKnQa5q9v+PR/7+rke67P2fu/zPsdxzol9/XEe+6z32muvta7p
da0RI2CVj2A89dRTFI4u7Nq1S/6FobNnz+bXt99+myag6WRAL0iBpzQE4wnr
seFwGa3nL5XhW7z4+uuvOy4+QdR5EZXHRNMDs2bN4i2kDjtw5MgRzB0mhWdv
By5fvjx9+vTea9l9CYOPreDrtWrVEmNLP2C3CeGpCYqDySpZsqRGAWJkEHI6
ivRbbrnFC7FQ9n79+olx2LBhQ4oUKVBVmgbviH2iqdU1pRBiXZeEv8PYYlQx
sHgZ/LukRwmxMPhkE4jluNeWmaNYWAC9Hg77bL2LEoGRtmzZIv9iAcR9oP5A
GrmbA1+G2Xfc0YzbbrutadOmgA1M6JtvvkkitS1cuLAWCMSqXbt2oUKF5N/d
u3djDMWA62Vz4oMkEX+BhXHci31lxT6dgAHxNpP64FIlwKcEmoxvclyvDRjA
AoBYsL1yIzzmhQwam1NJub0FQAJukUQQCLjL+sratWs1/MePy7Ww4CVK0wWi
oBcJKjdu3AiWk0Rso9xrvGnTJjJjkMUO41NwJd7mgEbwid988438i+FSiIXN
V5BJR1ECtgsbKzvLMGiUDyvlsHR+5V++jlmmdVhprJzOqNJpAhtgGahJEoGj
wEJvlZSAWHCcL8q/a9as4RO+kS/ghG7kV3FGSJpKr1fY4JfyHVMPKOUBPI8Z
ByAB+NOkSaN+IRLEgtGIgThEbDIchy/0D6xcsmSJZKYrfHcUIirwRTofwr0S
O+AI8MKOK5/01Zdffgl/af706dORBBo4Y8YMVABhEIhepEgRKZnMQAVaBO+Q
EHAOEAvxE1cL5pEz53mFDwlH+BwOxXFVG1USAT579ixM5CutW7cGA8Nl+Mhb
lIAi44Wl8mgKzl3wJPUxB4r5NE6TJitSChjFogQqhmCLdvOJKO/jNgmItTiQ
vBCL71J/BFL2UCCxvtvKXn755c8++yz46+YoFiYLzCbPlIwpoDnSSyA9+oQG
grUAseZ2S4iv1KhRQ/DYsmXLxGQhV7AepqOYRBbyFWQbGwW6cNyrtwX5OC7E
Qupk6BKWob+SxyQ6GVCtWw/Ab507d3bc8ApjLgEFdZMboCi2bNmygCUgCmIg
ezwxYrTCHMUCAdIieeZFufYd2AZop1jajiDx4O03jDNwlNASSBbcwxAgisAH
QSUERmgJtaQE4BYAXkQXJQIKzpkzR17BcKlhIbQn9PaFWAUKFEAS5F9CeMB2
jJVJMAoh1nVJ2Fg9PwTDqPdeRT9RSHoAxEKGZXDD910cGaokv2LPxfBiZwj9
8J6kEI/oRXXoF3GT+boFsRx3+EshFt7Qu2oCC9+uXTuaSeGEipgsx4VYaC6K
HKme5losTBk9Iyf5YILE4kG4LYWLGCtxT0AdqTMWuGDBgjzLYlo03TLyeCgc
KFGYZCBz3bp15SfAoUReckee43IHjMSzZKYTZOwOs0nd9BAnOIup8TYHvtDD
+i94VSAWeBtTiY2VYrFgcAG7ZCJGDL5e3Pbpp5/yk7oPvp4hQwY8tbyOBUai
SMRfmIm+Q0wm4TKigViOi9JNiJUzZ05cgy8T4bv3ZABwi+5GpGLqOyJBLJjO
Mx+iIeBbPo2AITbgWB3VhNFUwwuxAC1kE5SOzMiIHPgHjMQDnoJPnDlzBg+L
3KICElbjH5FnuZaIfqYEaSzlvPjii0ivzBbhE6m/akejRo1k2AT9zZQpE0JI
yXg3vLl0Gq0w6wbURH7MjXKX3elOCXlAzoDJgJPB/vWvf0UJsfCDNEHAAJ8o
WrRowiwomjlzJpKJJMt3kWE1WbElhVgwKH369KryjgsMFJAQtMqVjr6FAMyw
OaLsoH145LhRJOhRMmAKCLh4AP2ig94SzLVYoHe+5XsUG4Wg2oLEwO0yI4Du
Y3XBmXwdSSPOlcwycG2+bkEs/kUSwNiiy/w0f/58+QnYjIANHDjQF18JgZFS
pEgRzf5fwlhFjIQhBN3yjOEyN6uiKTIcTeiXKlUqjRkhKuM7UUhAEUKskBKe
LrsHjQI54hdi4V6bNGlCOTgs30MICcCTJUt29OhR/NTSpUslES8vY9cWAbGs
A7iCIVbmzJl37txpFZIlSxZxHCZRN2ou0yW+I8aRIJYQXhVzh/FRe7tx48Y0
adJg2fCDMuAjJlfxmJfOnz9PBl8D9eqrrxLKUUnAqnzi119/JfORI0esnFFC
rFKlSolnF9Ll7nBB7a2SjGLJmmQ8O25dB+cFYuladMvVCh04cIDEWF30FjeI
BTghgubfhg0bnjp1ysrpy3ehS5curVq1Cn7FCLEAV0iC9TqwwboJ2nctFtUD
eAOMzQlikNW9997Lw9ChQ2XGkF8RJKkq0Ah0SmX0Q6a3JVLQIaABAwaA8GXo
kraD8eQ4AuQZD05/AvDUteGVZIBUia+XKFHCTMEa5MuXT56ffPLJGjVq+Had
UJQQi+qBJXSZPTrCW/F+4IaX4G/u3Ll1yBd9jARIoiGFWCgj5ZhuHSyqZ3wF
6zsRloz/eIluXLduHXwXiNW2bVvfUd8oIRa6iYVEbnlQ4SldurSAbYuAWBac
syDWkiVLZBuml7A8SN1DDz0UsEALPGZBuGBCI6gnpi9GiCWT3eYRHJHWYoUQ
K6QEpv/+978rV64kJMEdx/soltAbb7yRP3/+KlWqyCCVRWXKlEGv0R1dewDE
8o1t4wCxZOGBSbjaxYsX+zaEKJ5fvfN3TmSIRZ3BHlQeW2qOYuFN+BcdB8nI
dEBwVOtcgVjWvcNC4BM6EFdL2CuOWCCWFzNED7HMUSwTYvl6PZAVTnaiS7oc
2okAsSyUKBArVocNxg1iCb333ntFihTBiVhID84CM6zX6fMJEyY8/vjjNDma
USxcVcmSJS0nIiMzJoaMtNwdF4wbMkdiCQGAWEDWmTNnSgouQ1EcjoNqS+so
H8HG2ckkHeKUPn166Wo5JUl1EKlDB9E1hBDghMxY1aB8nLj+S3PQwWeffdbM
QwmUw098rptL3uYoRQmxcJRkk8l06oY7pkXU07uaOpjwpB8HkiWB+/btU+SD
Mnbs2BHdpNNi+10hhVhmc4QIgkiJJqQCYk2fPt1KvHDhAtwHUB0/flxHsTBH
jRs39pYQJcSCpkyZIgIsU9KOC7F04t6kaCBW1qxZfc347t27+/fvj0wG7L2t
WrUqegHrfUswSRZkDhs2DGMbzSiWQCwT7oYQK6QkQhhb3KtsCMLoAbHEg1wl
xBJHQPwrpQFIcBa+61oBeGnSpNFQHcKbFyxYUEeTVMGBWLKaRUkhlm4rMyEW
zgtnp6ENNhZkguqhVrr9isJx3+p8ebj77ru9lYwEsXAltWvXdlw3lz17diCW
+l/aTiiqq82pHhWrXLmyIK7L7rUs5idkopDO1J1lZoYZM2ZkyJDh6aefln9l
opCIUgYuNLNALDW2kSAW+ArDpRZJjx6VicJWrVrpth2KlaXOvudvC8TSYRmZ
KAScmK/LRGHTpk3FrmpV6Zk2bdr4Ln2PBLG8m8dNiKXCBkyldVZmi++Yesps
3769TNfCFGASEEtKiASx+MvnQCOSDTeKD5XRDF2LRSJFWRAL8QDOOS7+Mc8K
EIhFICD9QDXy5cunQ690muoFXwFm48hkagZkqENY+HQdwhIxQ6mHDx+O5AOx
FO1It1OTdOnSwXqaL5UEkMA1qq21Qk3IA+xEr0HU4CtUUprsu8k9Soi1YsUK
siGTVLVTp040rUOHDrRLUQoiIctsggnI5HuCltKiRYvM/C+++KIgH7oX60TX
4WTx2rqKgJoETG9ZpBALwabbzcXbq1atgkciqwKxdB27Ra1btwarfPfdd/Kv
sIZwTJYIot0YLiAWfU5QmTx5cj1j/9ixY7IwKXqIhXag1ERVmgJ3wEIaSamd
AWK1bNnSfNeEWCiU/EtMIcJAD0g0R1H9+vUjEcCD8Gu7TCLUwgUgfmAnjUcQ
ZiCTd+KAaogCYgwRRZglXwRi4aQ0m0IsugULBjqVbDCaUCh6iEV9ojno+FpT
CLGuS9q/fz9ag3BOnDiR+BoLj4cl3Ab5kD5r1iyMKnrUrFkzfvLepkFKtmzZ
0E2J1zA4GAdMHHbMcQ9Fxysh9p07d0Y7fCuAvcVqmSMnH374IS4SfcQe4gTF
4wD27rzzTky9eVvK0qVLgRAS+lHOqVOniMKoDyqJwccyZM6cmYARH0E5sgkO
K4ERIB07Q6IMXGAYMVwoJv7Ou/eHcoB8eDSiS5RRLDYOHdtFKIr5mjt3LnUA
AVavXl19IsAD12xesQEqS5UqFWZZ6uPdq467IQO9IRlM+ww2yJEjhzlcs337
dtrOJyQznYZtB+PJcnfyE1NTGewzHsHaPEXdsC20GitEQ4iURQYc1+jxDH6T
YvGwQCO6lGfdsSW8RjAWL14su6V0ixkcIaVo0aLyuizTWrZsWbJkyQCQkiju
DHxFzoEDB1qdgPeH7zlz5nznnXfwNXQCTaBu2MOjR4+aOYEQQGIK2bBhAxAF
eyteCVflPfRJ+E6TpQ5yOR0yj6/Bs0+bNq1atWpwECCNRsBHIn1eocPhWooU
KUAsQGu4jxjwxQYNGlAObkWcBR1IHv5FHkaMGEGZjRs3NgWVfqZPBgwYUKdO
HRNVItvECLJXSyREAwTYlzt3buU4fUI/yHQt7gCpltESx50x1BhHQC9IXqZK
6TQqQ+/xuiigbNagBwA5suCZJlur44AK5KGlMl8vAi/7T+kHq2MRg8mTJ8t+
UqSdTkPry5QpA+OswQpZFYAYoMV0Mt1FbGXOgpF4LTZ24dzxv7Ce7+7du5dW
pEyZ0pQQ+iQaDwsv6HM8PjWXUVnAIaoBQkYM6HkkUGJSWgEr6ZOxY8fKVl+L
Dh8+jIRj5eh5NU3IIRWjtClTpiBgVapUQZH5KHErGJicMBF8jlIQRGTKlAlz
LVAZK823QLDePZJCgF7dT+24i/pQfxoCxOXrRDEkYuQJNzDypl2CuWQjD4In
I/CywQQFQR4w+3AcIaFv+Trspl10ddWqVb13WtEW2I2m6HozxxVd2S9jZUZu
aSCGhdCyfPnystEb9W/UqBGRrFzOiDjha0BiYk8AfiLYc+bMGTp0KA0hArWu
KYRrWHiEUzbO03A6HN1ENcIdhSFdO8LdIMCEXWgrqoT44TE/uUKko336r/Uu
EEvSZf4Io43EPv300wItAE6yhd93D6+Sd8SeqAS7AU6TvXiOC7HkQ1ZRuAOU
Syweb2k9JabGmKBxZNDhOE3Es+gJFQSAxFZmiklYYCkT40Ao9+abb8q/WD8s
M+197rnnsLFHjhyh98z97N52UQ28MHjM2mGkhPXAqmBjvWG1tzQ6hyCXHpbm
wz6pGN6NrsBHa294bS+/zpw5k8pTbZpv2iJsKQ0BveiQBQ3Elcje7TvuuANU
SWX4VQrHxpoTIhRFsRRurr7TRHMlElbXu5QXQ6rVlilIOhy3CBesnKAIzQlu
4V/6ljK9C/CElO8qDHANGcPSwkc6gVYj7Th6KZPuhcX6CVl/S87169dTn3Xr
1plL3CURxE5Xmz8JgXiBoyBA62on0K858QH3dUcbrlm2zQrxrD3A58yZvo0b
Nyp/6V6ao//i9fiVT+uOVISEf81F2rDbmhqGm+QxB6xQc1J8txKg+NpFMtAh
BBrxzgfRXsoRGaCx1C3GOaN4IfjCd2XYFka/8MILcRi1MIVBefHdd98tX75c
5EEGKh0XYkk2ArdIF2giroQzBEF6jSPSjmWgtD/++AONRhpF5GAZAS+fkJFz
ao42Sfm0iArov5Eg1okTJ3T8VgjdJFYaOXKkKr4aeYXuQqTwaTNx8+bNpGAT
ZKBY3iLig5WYAvnXuzkCpcNWe291xDt4p6HpAdApOkWfoIZ0BZ2v5l3mDZEf
+VdtKSCfisFcjD+65h0h11fUrZANg2CdBpNYFEKskEK6Ack7UdiwYcPgxTlR
FgscirQE/UYgemDw4MG+syo3IOH+Ip3hdk1JzhtJ+O+G5LgqAMTSUdwbnEKI
FVJINyAR9d90003m0ibwlbXcJQ5ElGotsb5xSA6gXrhwYdxWXF+XNHHixOB9
i9eCfvrpp379+nl36ISUMDR+/HjdSB5SCLFCCukGJDm0AVgFyuL5vffea9Cg
wT/x2rKkQ3fddVfVqlWtGZkbnGSZX8J/d+DAgcHLGEIKKWEohFghhXRjEoAK
9yfbtSKd7RlS9PT8889HWox3w1LTpk3Pnz+fwKJ16dIl4oU///wzFOmQEp1C
iBVSSCGFFFK808GDB1u2bLl+/Xrf/XfXjogXBg0a9Oyzz+r1lCGFlFgUQqyQ
QgoppJDind5+++369evL9S4JSStWrADamWeChRRSYlEIsUKKF1q7dm18nfO2
Z8+eWB0bbtKlS5fWrVs3ZswYOSIpRuJDixYtinS6V7zThQsX8Dvjx4+X+6kD
6MMPP+zbt6/vsfA3OMHiSNeUJB0CVwwdOlSvfbyeaNeuXfEyH4rqeY/sUPru
u+9Gjx6tp/I67tG1ffr0Mc/6Tgr0v//7vzHeMZ306YcffkiyGwA3bdr0j14j
GkKs65Xmzp2bPXv2eLRIS5cuzZYtm9e6/v7775UrV77pppus04HiRthVitK7
FWJL4n/1wosY6eOPP86VK5d578w1JSDWhAkTqJ5eJe+4ZxDRseaq4O3bt8tR
e3LWa6wo3vmepIgOLFasWP78+a/1h06ePDl9+vRevXqB2GMr2IcPHx43bhzw
IMarsa+S3nzzTSQn0olh14LoEKQ3ABpFSUh78uTJ9eas2rVrN23aVH8FXyH8
K1aseOCBB6TzJ06ciF63adPGPFUs0UlOB924cWNiV+Sq6P3330+XLl3S3ICJ
AFjXFP7jKIRY1ystX768Vq1a1tl0V0PPP/98jRo1fO99litI4gVi6d0KcS7h
vffey5IlS6Tz+iy6fPlywYIFfa9PvUZEX+FczGMhgUPVqlWTs6Ad96zCcuXK
RVl/L8U735Ma4XmvNcQC4lavXn3fvn1//vnnoEGDrPtHYqTWrVvrKYjXlIA6
FSpUkGOxE4aQq5tvvvnqIZbjXr6gEKtDhw79+vXTn4YMGWJeyH7s2LH777//
6r8Y7/TXX3/lzp37nw6xHPdqm6QJsT777LMQYoUUklwKHC8QCzJvCI0DEfDq
RW8xEtYbRGdeYXOt6fHHHwfUBWQ4ceJE+vTpE6w+/zjasGHDNYVYwKp8+fLp
VXcHDx6MdMO4LxEjZM2aNfrb8f5xlDJlyniBWLVr17buf1cqVaqUOVo1f/58
UOvVf/FaEKJ4HUCsHj16JE2I9eWXX4YQK6SQIkGsy5cv+94wG0xXCbFq1KgR
/RqYOXPmVK5cOc7figNVqVKlZ8+eARnefffdEGIFULxArACxPHPmjHlVemwJ
d8Dr1whi/fe//03gVdxeFU4AiJUpUyYTYg0dOvS6gVh///13UgAMFk9DiHXt
KIRY1zGZqwQvXyHfnL6/elN+//133zxy67QFsS5evNilS5dZs2ZF8y2TBGJF
yhb8+i+//HLrrbfKtWLUx/cek2+//VZX5j/44IPTp0/35vm3S/L8888/m/fW
8br5dZ75inn4j6RYvfHXX3/htenAjBkzmpMg+ooyK3qIFakrolwd6n1d/42R
R5GkJcYXo6yM77/yrBArQGi9jTKLWrhwYcA4JxjGulA4yjoLxQ1iRWqLY7T9
woULDz300MqVK808gC7zaAJfFkTZUV6i5E6dOs2fP99MVIjl+3qUkgNZEMsU
2hghVjTdFU22KOsf0CiBWFGWhklp1arV2rVrveXESFFW7PL/Jd9yXnzxRevI
fYVYcRAV/SlSZSL9Kxy33rLyKMSKnl9WfXzrnJAUQqzrkn799VfM11133SX/
Iqj4lIkTJzZo0GDgwIFW5ueee05+LVeunFy8jvCPHDkyXbp0WbNm3bt3r+Ma
22eeeaZ48eJyEbPjrgfu1q3biBEjMBr58uXzQqxq1aqRePvtt5cvX37y5MmO
K/Pz5s3r378/b1WoUGHw4MFyI7BFQCyAWe/evUuUKJE6dWoy60cxDn369Bk9
ejRV9d5JCr3++utYDz4EcGrYsCFNeOONN+QnYNKqVauoc6lSpcQr0UwAj7ls
hhe3bdvGp6mzjGN89tln2bNn79ixIz/Nnj27Zs2auBi9/uybb755+OGHp06d
Wr9+fVmafujQIbkXnsqLLaXy9O39998/Y8aMggULpkmTxrr/fceOHU2bNn3+
+ed5fvbZZ3lOkSJF9+7daWkAi48fPw4rFy9eXK9evUGDBi1atGjLli0m36lJ
165d6ahJkybJrd/827Jly/fff5+20BUDBgygb8kgl31v2rSJ1iEAfDpbtmzw
jgp7v8u7S5cuzZEjBw1Zvny5JEp7qdJ9993Hu/wkE22ASVL4BG4adPr55593
7tyZvrIu2UHGRALF7eKz7r33XiogKPfpp58uU6aMzq4CsZA3WEDJuXLlwsfp
Od4wHU6NGTOGL8pFvd9//32vXr0ouW7duvQDlZf9FDhxWBwJaBEawIKtW7dG
6nzpQJHkqlWr0mMi/AgPmITy27RpQ6I5VrBmzRo0Aua+8sorjruykX/Hjh1L
G48ePYpYUklSZKspkQJCddttt9FjhQsXRiPgEZ1AybSXms+dOxdwBdziFRXg
s2fPDh8+nCqhdI0bNxYhP3HihBSOXsiM52X3CjlRXjrKvOzbokqVKvHFvHnz
8kWNRJB/mgAfCQRgNDXR/OvWrevXr9+oUaMo1rspmO8++eSTffv25btIS4YM
GQRiITZonLj4ffv20W+pUqWCuTwcPnyYTqbhBQoU4F/ZEoKgohrCZYRc2sjr
wLAXXngBja5evbrj7vWThleuXHnz5s0iDJSGeoLfMAI0pFixYnpmF/KJiaNY
ZI8mi/qTiCUksW3btmi6d6AediBXmDIqefPNN1P+H3/8IT9t374doD5+/Hjq
SbsIOfko/Ulb6E/aQjWQh4oVK2Ie6Qr0gg6HR8RrH330EZ9r0qTJBx98QL8t
W7YMZR82bBiZZScLiStWrCDxiSeewJbK2k5Ug7bv2rWL3hAV9ka4fJd0DCN1
QN8FhACxkPklS5aIJcek6M3OlEzP0421atXCelugBQVHZ7GxaBk2gXfJ6bgb
FtBEWCx7QmkObiJ58uSiqnD8kUceadeuHb8iCbyFacIa8xdRh/uK6gViYfZR
KCxA5syZdd0sNaF1wG9EjrrJ6C79TKeNdwkVDjahCUMhxLouCQVBQ5Ex+RdJ
mzJliuPGvOiLmRNBTZs2rfgCHATCjKjfcccdmGtMNKKLSXSuxLNIu6CdH3/8
ET+uofrjjz/uO1GIBTZ13Lx+HUNUtmxZdMobaKBlWA95xjFhuEStdu/eDWqS
CuD9sTbehlMgNoSPvvbaa457tTFW3XGtK04BE1GnTh3VO8wXJkVHtMBgoI5p
06Y9+uijUjitHjJkCAYQE4TWY0moLf5LtitKJ0hEj2pjxvFWGG1BLFhX1J/8
fBcrJIYXW40VteqMYaT3BGI50Y1i0QmFChXCcPF86tQpXu/ZsydQzeK7LBZV
kInZwfzyQOfoEm6YAvB2XO6TGR8h0SWtRjC8GBjfJyABt6hzrPhf2SaJgPEv
/gizLz8hUfwkfeK4eElYYxJ4QM5hAHzirRx3IbdCLMcdxzAhFshf5g4QOZwU
th1xxaoDhmWbAH4KjvArPS++ErdFc6THaELw8mnMNcAmS5YskaYLaUXz5s2V
F/fcc0+zZs1EkgNGsZCrkiVLSjaEjWo47sgGLlgcPYABaach9AO/wmJ8KA0R
RErTKFlHsehqEBopArFAZZQj/hfHhAqD3JAHEsX/gkOEEYBtfpVCcIgBEAui
Pt5RLPRdXPC4ceNuvfVW0aC33noLXogAoHS4b6sosAp4QJ6pIVKqEAudQm41
Z8AoFjqLuIoRmDlzJjhB+g2ogxSBdnbu3IkioO80XNwudgNEQZfS1bwLZ997
7z3HnSzLnTs3UFZKxizIzXo0h6LEcOG+dSUeBZqHSAiZi/ZfffVV4IFgURA+
aEe0nkhEpPfChQuwwBzFQhcAHgIUCQ/pbZUc4iYRVwwLAEMTRXQJYR566CFJ
hB0iS1SA8skj6Bp9B+R4eYoRpi1mCvYNayzVQFqSJUsm+kg5WEKpEnaGdAs5
09vUH3xF04Qj2HzdqoMx1B47cuQIdVOIBccxEadPn3ZcLEohiLpoAc0huBAW
C8RSNUR+6GExuQsXLsRYSXqHDh2w/Dxg66gAsoQHwUx98skn3uYnMIUQ63ql
Dz/80IRYYAksj+9AK/aHcF4jbh7EBDn/d47+X//6l0IsoIIquHPFIQZDLLQJ
A6IlOy584i0sv/WWtRaLDxH98YAjIwIFS4ASJbD1toXwE7Mv29hxOliYVatW
4X8xrdhbMmAxxHBBeHO8njzj8uiE/fv3Oy54mD17tqSDN7BUYAk5aAt/h0MX
/wI4UT8rROCGEeArGChqeObMGZwjNkEG3EivW7eumnSTihYtGiuIhfek62Sg
hmKJBPWoKHihfIcIycU9KbomP+a0+xXCDKq9pUwaKM+YNf71QiwMvkgRjkP4
4lzBchq/0+c6ggrBFPpKPg2085aJR6OoTz/9VOUTIxwAscy1WLA1derUzzzz
DMiEhiMeOki4adMmbDWySjMJmSlQBqZihFjOldHLnDlz4qytn5ArGKQ7QB13
HJLCZbw3AGLJkkVAguN6QxnoI1i4++67ERsqCUQhw+HDhx0XxRUpUsTcWGpB
LMdFmAqxwLeAeeuLoCMYQedTOLJKZjoZaeRhxIgR0Uwo+0IsXYuFI1O+V61a
9ZFHHsFi8C2QZPHixc23hDvmfmQ8rIITNDFKiFWvXj1YKUaAfsOsSTrBlIZv
jgvnqA/xEdnQfSqJMjqu4TJZT4eT4ri4Al7regAhQAW2UeQHwpjQaVb/WGux
qFiePHkcdwUCHU58yotYj4wZMzp+EAtdACUS2TkutMuVK5d8gohADCxqi3ZL
eyFEgnaRiL4QxEki1kOCHYwz5esOUwQS6OJ4yBdimWuxlOmYL75IZ/KVVq1a
+Z7XgfZJ4AaJaOnMNTDbF2JBhLqKGyH6R88AlFN3ZLGHdy0WjQVQIfnAY8Ck
9ACATU0x9nnBggXeVicWhRDreiUTYgEJ6tevj6yiJt6FvsCebNmyYUwWLVpk
zom///77qL8vxEKjFZw4kZe7mxDrueeeM7XPuaJ0MjVpkgWx5s6dSzjPQ+bM
mYOPAAIeYAbVBxGh42FxuNWqVROXB6gzh61wBOvXr5fG4h1kcAYHR1doaM9P
WHJMkPxLrCT2EH9H/G6evgUeAE0RR2NV8J70Bn2FgVKTLkBUPKxFsYVYlEww
LhN5x44dA36oFbIgFoaL2PObb76hS+UT2Gdxtd5io4FY0idgPLxelBDrySef
pIZ0O5jH94RD4DedTAn9+vWTcDh6iAWBGOl2xzXO2GqgEXmoJK6hWbNm3s9F
A7GcK6OLMsdtkgz3mYM/P/74IykCwoPXYuHTBS0Q9Uh3tW3bFk/hzYkUWQtm
giEWAtyrVy+rkC5duvguKkPTEfI77rgDdgSvV4keYpmu1kurV68mp04/Of93
uXv0ECtLliwAWm/5QCyZohICtPueKRcJYoG9gVhWZjoHWYrUIiELYgGfMFM8
YLLEtpjkhViOOxojh8zwOdACJotnuC+GUZgu40tKJt9NineIhUSZdt6XEhhi
yWoHtI90300rQCzvOHkiUgixrlcyIZYQgpc3b14smzcz8SyhLkILEMLkYg9R
Q3Q80igWEMscxYoGYsmE0ccff6y/AmZMn65kQaxp06ZJjIbtstbwWIQrr1u3
rtQQCEE5b7zxBs5XjtwhJq1evTpOR5ZBoqRYcgAYz9hz+QRhLCES0Mu5siwW
M0U5MpSBheQVvOdld5uVOf/lXBnKMAflAD+kyIIlaoX9xJbij8xOEIotxHJc
40NzaB2exTxo1IJYACoKx4nTCWL6BGLJ6hSLooFYmFMagqNftmxZlBBLBjBp
18CBA30xmxBl0r1i0mMFse68806dzcEyw2KB7kAskJsXQgRALHObA0R0PGrU
KCsPIQnlm1jx3LlzOkQWDLGA8UAUxFvxABCLwMebMw4QC+G3CqErABu+NUGA
W7Roweu+axqVYgWxCGEilSMQyxzFijPEWrJkibd8L8Ty3SIXALHSpk2LiTAz
w2IsWPARcxbEwkAR+zguxMJwWZl9IRa9R3vpn/79+xOGIOdgM22vMN3CDMJ3
CQlNuhYQ65577gkG4QkMsdAX7I9ALK8hdUKIFVJCkUIsXKrE+I7rnpBAMxue
SCfvGjRoANDatGkT0vvLL7847hw3qieYxIRYqB4WSf1IpKNHFWIB4VAZLInO
nkPPPPNMiRIlvNfuAGnmzZun/2IGZS3WvffeS9yt6ubVr7Jly77//vuOu+4X
3yoTMcWLF0fjwEhjx46lLePGjcNJoe8YwypVqsgKWNwTlhZ8xV8MIy4YhCaW
EyelGwSIN8uXL//RRx9h5AViiZ+lCbROIJZM3tFLdNfOnTtJwWDyb8+ePadO
nYoTBMN4PVEAxJo8eTKowzqJFJ5ST6+NdTwQy3Fni9KlS6ejMTJRSLfojh7t
SZ3tciJALLBcsmTJxP3NnTsXiCWyIRBLK2lBLKh58+ZwxNc5Amn0rPspU6bA
FOcKxJKFH5RPD5gQK1WqVAqETp48KUsHscx6HR6tg1nASMEk4iPgtaxKUojl
nSlDPI4ePSrPeApQvZdZNBPo1a5dO02R0VEZfwuGWPQngDB37twKNoAZ+EEd
y6Xh4lzwTeS0vqsQS2puQizYYa67wzfh+GA9iTrsg2MCDS5atEjD/2zZssny
SyAKXPM6U/W22leRIFa1atXAFdIJjkc9Dx06RDNlGt1xcUWxYsXiALHq169P
nOg1AtTftC0AY+qpQ7W4fvH7KLh5jLw5USjbSKV6aPS6detAXCTi0DXRe8or
EGv8+PH6b+fOnWUtFhFo1qxZdUez1NOEWKbs0S3IsCzmJ07kGemVn2SisHTp
0qJcoq0yUUgkKI1SFRaIpSuXYoRY1EGXu/tCLAyvYDnJhvp7j54GYonVdfwg
lqwQcNwz5OMMsXbv3i0/IfCIDeInE4UUIu7DNGI4OGvXbeJSCLGuS8Kb4CzQ
r+3btyPweDdZiEUIYEXleHzUDZOL+UW10REZXOrXrx9R4YABAzBoRLsUiI+W
UP3XX38lsitQoACOBoNANlkJ37dvXwsv8d3KlSuDsmT0CeeISecZR/PBBx8Q
xvpeEQvEypUr18svv0ytZs6ciYkTXIcSZXYJ2NO+fXvvlBM2DeyHfmFvFSpk
z56duFKuhSW2pQKylp46Y8ll2xeWlnTe2r9/P/2GvsvA188//0wevTOoevXq
NHPkyJGOa28rVaoENJKTTsFsdEvOnDnLlClDCkV98sknvAgYyJMnT40aNfCh
gCI4Amo160xX4E0EfGLBeGXEiBFgJJov4bOsJJFF+0p8/dZbb8WeL3IJ6CLg
QZCk8l0yg5ZpnXmeEpUBIZOIsaUnwdgYW5n/ouE/uCTshmWmL6BM2vjAAw8A
2mErEJqOxeKJfwcp0QnUBAbBprffflsWPzvusiiZK/QV19tuuw1viNvFJsug
Hz2P4PGK1BBEhFSID5L5OzAbWAhAi0jLIRh8okmTJryIi0GSz5w5A2aWCzga
NWpEOQizVACHTtups9p/JXwZfp8XaQUfpXBrfY4Q4JkSiBEw9XwO8C8La3Gp
1J8vzp492xoSUcJ5mRfrgBUrVqwIy1q1aoWbk+mtEydO4PXw78AkBa6yxwGU
jlLgpulqYIB0O8yFy4AcsDQCRmNl8pE8IrSIKIkiunQjXQpb4TsdxcPXX3/N
i74LI/HvFEtL0Rq4v2XLFjA2koyk8dEhQ4bwFr0BoxEDeJQlS5auXbtSvndO
n6+TmbbTOcOGDYPpNJy34CN8r1ChAtoHdnr11VdpOBkEpoJqMBQ4VkIbeoB+
RvLVCMh4BXlgHPqoc2dUj5pTDsiNAIr6O+6tiIgNuibumL/0J/olSB6kRPX4
V0RO2IfekYgdIxF18wIMIBb1ARWgMtKxEmliRTFidAjtJVHiNWSJ/PXq1UPG
zEtUETashDAarQc8mCGVLOFG76RistIAo4EKAyckERACrzHON7nL3WENPSB3
dXnv+AO98y5/sTk4BapK5IicyHQkWAgW9+nThxLgODCGQpo1a8aHYIpqtONi
fuwMxgpoSs9Q8xkzZtzk7tyRCB2No+YoUceOHamVcP/06dNwHIZiFcW0wkQ4
Bc5EZxEAPJQ4GtgtEAsPRQPhiGxHkq8TuvJp+lN6AFNAz4sQ8jlCFV/tS3gK
IdZ1SeClT64QaoLlxFZg4jTcUJJjChBdNE5jW7QSnCAqxgMwDCOsBYrCosU4
WYpFtlEZDU9MQinQF4yzKiYoYunSpaAIbI6ooZcwfSgIdhijZxlqrC4OhXTf
S0OAVYsXL7aWaqC/GEDxrUALbIKk419QUknni3hGGRjB4JAujpXmm6uaN2/e
bE5r4s1pGl9UDEZ7+RcMKSGY4/piUsRZYMnxjDqbJsSHsB7SsXQOnJJn+lP2
19B1WDAvGOAruLO77roL8wgayZAhA77e4rvZpdbrYGk4DnNlcTU81Rf5CUmw
2K0EFoJ9MlgHj3CISILkBA9gJPEX+q7ynQpYKNEkPOPo0aNhq2w3EAKuTJky
BaNNZxLhKsfpbewwFnjMmDHAFZ0kxcCCtcDYAE5d8U73gkOosPJaEmk7ttq7
loMXyQlM5VfvKkGTqB7cp2R4quym+dJw8ECk24ERM8v+owjEBRSlB6apGKCb
prcVBC7DIKin9rPgZ5zsc889RwZzFhj2SSJKrSk8E1ysXr1amUtX5MuXz1rz
47jeH7shA1z4UPgoX+TraD3qYDKaiAmbgGeP1HYaSE1AF0QW6oiRWykEoYKz
2ijZlgLftSt0lxlGgFBIh2sQG8ljXptOPy9btozPqcrT7ZJNhsiQOvlX2UFO
WL9w4UJzshh7wrcWLFigXDaJDkHrkUME2DrlA/2V9A8//FATMQIijVY55j4g
r7bSn+Bqoh4zJqW7SCTYkXFXuC/N4XUiPlOFTVMghFFC92Wdg6n4jrvUUFns
uDZwzZo11BlLaOIrx4VY+i6Sg3jov2rbRfvoAVSDVsuouFo8sZz6L3kwlfCd
Z4AlGn3hwgWaTMrUqVMxBdYOXww+6dOnT5cAE73WCph9nrgUQqyQQkrKhGvr
0aOHDsoJYeswOOqR+bdu3bq9e/dOjApGRZhBXw8VUhIhsJYcKJfYFQkppOuK
QogVUkhJmQYPHuyNeYnmUqZMaY5vdOrUSQ8CTWp0/PhxXW0VUhKkr7/+un37
9sEHZIUUUkhxoBBihRTSP47k0IbevXuDsmRHZJMmTbzTAYlO58+fr1WrVrly
5cIhrJBCCukGpBBihRTSP5F+/fXX+fPnd+/evUePHlu2bEns6vgTyIrqxcut
wSGFFFJI/zgKIVZIIYUUUkghhRRSvFMIsUIKKaREoT/++OPgwYPhEuuQQgrp
eqUQYt2YhF9btWpVjRo15MSYBKbPP/987NixWpOvv/46UfysHFjnvdpV6Ny5
cx06dKhbt26kA46uV1q8eHH8suP8+fPeFfsk1q5de8CAAQ888IC5R96kHTt2
BJwieOzYMdnFH0De/e9yzkAUtY4jySG9cv5kcLb9+/f7XliZ6PTDDz8En8Mf
v7R3797GjRujazFyM94JwcMQyekEiWiIHPcMELkA3Uty33eFChWCrw9LFDp6
9Kh5E0dIXgoh1o1JeK7Nmze/+OKLq1evTuBPf/vtt3ny5NGTqydNmmQeKp6Q
hLfNlCmTedqz0u+//965c2dMrlrgBCDM+9q1a7u5NGbMmOCbO6KngwcP0smL
Fi0CTFpnlZMih5eax3/VqlUrRnbQP6NGjZKqIkvWgTkW/b//9/+KFStmJW7f
vl0O9962bVvlypV9URbAzHsLiRAwaebMmWbKpUuXJkyYIFVasmSJnIJF3axz
0kaPHj1u3Ljg1l0NffbZZ5kzZ7733nuDs+GbcufO7XubVaITtYp0PWW8E8I5
cuTIAwcOjB8/PsFAndB//vOfhg0b0lI5gO6jjz7iecqUKQlZB6Gff/65ZMmS
6dKl8/6ETejdu/eRI0fmz5+fMGsa0R2xCfBFT/xz3DNRR4wYQTpRuV5ecPz4
8VKlSgWrv+MeXCaXVvft29c8++7qif6hwqL1WDk9EC/pUAixbkBCI+64445E
rIB5OQiWDb2LNI5xralnz56+EGvFihX44oSsCbaCfujataucTTp8+HAMWnwV
TqQppy57f2revDnWyQzesVRPPPFEQGngq4IFC8qpXBcvXsTG+p4Eq+QLsfAa
DzzwgHy3U6dOVMPrYSNBrAsXLjz88MPmoAf4imo899xzjus6q1atqgeHtm7d
Wu8xca49xHLcczZihFiOe1lP0oRYATeAxzvB+kQcBpHLVQVinTt3DjATLMnX
johxfCHWyZMnq1evnsCVgSlZsmTxHg0NykqfPr15txFUpEgRdDmgtNdff710
6dKnT5923BNWresRr4awHu3bt0fdJJ4CwumVTEmHQoh1AxKxSbJkyRKxAqtX
r7buX0sssu4sU+rSpUsCQyyYkiJFijNnzsi/O3bs8B61HWfCXaZNm9Z7ReBX
X32FxbPOb8eq582bNyAylcsW9V+i2jiMYjnu5SMyXHbixImUKVPKxUaO6+I/
dmny5MnAzo+vkGKqPn36WNdYL1y40DTdc+bM0bPcd+3a1bZtW8WQCQCx6J9o
INaMGTNCiFWgQIFEhFhgb4VYiUtgD1+ItWbNmoSHWGvXrqVbvNddEe/IlY4m
jR8/Xi5mikTFixdftWqVPMuR+/FVT2xChgwZFAq+8MILSXBRRwixbkDCr12X
EOvSpUt6SVmUFAliPfDAAwkMsd555x0gljne4iWQjN5sG1u6++67e/ToYaaA
Oho0aOC7MKlChQpyfYkv9erVC4gV/aqVSBBr1KhRoCwZwHzsscdy5Mgh9xYt
X758sUtdu3Zt2bLl4iskt7/98MMPhQsXtu4hGj58OBArUpVojtz44yQqxLIW
hoUQy3EvJL3+IJZ5K3GUFAlizZo1K+Eh1r/+9S+6xbqD5tixY9TEKxWY3OC5
QtqlECsSUYhod6xo06ZN6dOnj3QRWxKhEGJd3/T999/LtWLqfXiQVQeXXfK+
IvbBur5NFoKeO3cOdylvyf2h5NSlSqQcOXKEFO9lqUIXL16U4YiVK1eaEOv0
6dN62a4sOnXc+/50JQD+lLc+++wzs8Kyrph0mX8/c+ZMrVq1Jk6caLaLh88/
/1zzKOHWSZSr8SyIJa/ff//9AAAtSmuFTZZLYyXxiy++oByMj1Ux6SWqxK8C
BviX+uO8IsEAMABMGTBggO+vjjs7RlX79u1rMe7XX3+VXg0+evR//ud/QBpm
yosvvhhpLnLSpEnDhg2LVBS4lKrKdbTRUCSIBRduvfXWFi1aYLd5tiYgnAgT
hSAT8JiVOHPmTKrkvRlcaPLkyX369JHnKCEWPYx4WM5XlAJZEqZbr8Ag0pHJ
KVOmWBCL0hYuXJg9e/bLV8gxIJbIibX0jj4hEUTtKzB4NJSRnw4dOqSsl5K/
+uorkVX5V26c1GqgsyLMvKWyzbPqtWNALD7BTxRo1eHkyZOm4jvGWnEsgK/6
q+6rQ5TqZciQ4a233vK1RaTQyaiY+dP58+fpf9wxRekwC2ziXzOnpBw/fjyS
idu/fz8Z5Mp75TIFmhxH2fkQn4On2ldoMS+aeEDtgAyh/PXXXwibxCDm14XL
eqWmkHAZ2r59uxdi8fozzzxTrVo1syi5OlZuJDQTLTvvXDFEjns7kpp05b41
dm3RzTffPG/ePLOoBx98MFIAW7Ro0YC5wjvuuKNEiRKRroCHNm7cmClTJiyA
ZbrFvAdEneBS2Bdw+WlSoBBiXa+EEX7iiSfwlUB9/PJdd90ld2USUDRv3hzJ
7O6S9RZCi8tDKdKmTXvixAnnysY68r/77ruEDDxgTyiKd1GNzp07p0mThnhH
YAkOcfPmzSiUd0kDsOrRRx+lMkOGDEmePLlALNTqkUce0cFeTGK9evWKFCmy
evVq8mTMmBHLvG/fvjZt2mzbtq1bt248yGwRho5/Ka1Ro0Y5cuTACzz00EOY
hTx58pQvX15GszGD4IolS5bQZFy8XE1LPSdMmACS4V0+TXMsiIVFpWn58uUr
V64cDy+//DKNpWn4x5deeillypS096effsIh0pwFCxa88MIL9evX5+tidalt
xYoV69Spg+I3bNgQCMGnseQYqJo1a6ZOnZqHSCxr27YtrY6EE8AVfJrG0kC5
jpC2LFu2bNCgQbSFRlHn3bt3RyqcqiZLlsy0yd4pQqXguULanjNnzttvvx1Q
EelzJnkhFtXYs2cPXIChsECnCC3yhVigF++iMuSH5tM5vv59x44dCJU8RwOx
cFXIfOHChVOkSCFTmchhy5Ytc+fOTVEIA9AIYdNtkjSHeuJYYQRiSYssiPXa
a6/ddtttMBfeIR5SSSBWjRo1eBGZx0kh7Xp7MtCiVatWyDzKwq/mTUmOe7Uu
3JkzZw56jYxlzZq1cuXK1AF/zdfR3J49ezru9Gu7du2ozNKlSx13SQxKR7v6
9+/PWzh0vo5k8oxkkk0X4AnEQmuQf1rN89ixYxVjUCVqLmouqHjnzp08d+rU
ifqQmUjH6k90hJ/oHLBu/vz5aZfjjqVTPgqFAvJg+WiMDP1ZsmRJCpRrr4V3
t9xyCxUrXrw46TKwSSwwyyWYJTsgqB7N5CtNmjSZP3++VRnAFV+Ed08//XS2
bNkUYmEq4S867rirDaVuMA7FJw+GEbF/+OGHN2zYwFfuvvtumdPHFFBPBHjo
0KGIxJYtW/g6Wk894XXjxo2l05566im6d+vWrXBKdxhRQ6wB3UL3Yhm8EIv0
qlWromtUZurUqZg+uhEjwFcQJ2r1yiuvoKT0gNfOo+DYE1QeKy0mnfJpxfDh
w2E3DSclAGVVqlQJ+6b/Ymfge6TMGJ+AucI1a9ZQ1X79+vnCXQwmikYGupQe
k9FmkFWXLl3oatiHDEyfPj1SZIr0wqYAu5foFEKs65XQCPCP/osdwLhJtBtp
ohAFxOrKMw6LuFueceL4UzADci6BEgqoEU2vXr2IQ/EOwBsZRsZ8WeG/2BZ1
2e3bt9dRLMI09Esg1h9//IE1KFWqFLhIDk0C8GC9gXmOazRSpUr1wQcf4NlJ
lKAMG4ublmANX4Op0Y+OGDFCN5117NgRg8PD7Nmzya95aEiME4XEX7xOhTHj
PGOi+cuLsrjaceNW6izl84xVxCzorBbGlg6UsSycIxYy0rYXAGeBAgVwtZEm
6bCfWCr9F6RRunRp/RczCFj1jq4IwXT6WeYZ4WDXrl3F00UikEDAXCFeFRGi
pdGM0lsQC8CA68cmy7vwWrC090VfiIX/8rWo4HycLIbauxPzm2++wQ6LFMUI
sfD1AB55rlat2qhRo+QZdYB3u3btkn9x4g0aNJBnmtCsWTMtAQDmnSjETdBM
MwVfDPCTZcAoDhonfgrpohWyaQspypw5M17SfBH5BwwQIEinIZBwVvURtC8Q
S4pViIU/BZgRkshPMIWfgBnivFAcfpVngViKn3mdfwVNIWPou6TTjWiB40Ju
vCRQkDw8S2imBErhVx3EAJsBJ3QezXeiEAXBmIh44Ohbt24t6ZgRagJEBNh8
/vnnZAO36LEz4BzZDwgoknWMX375pXXxAXYJaCF97rhT0gqxUA2ERCAWBChC
mwjW/vOf/8g0FpGpqgxgAFxBdwFBaaB2iIB/gNM999yjH6Vb7rvvPq0kgYDj
ogi4r/PdIJ9oJgrhBUAOOYH1cBB7HmDngV4oqSAuqko5gCsxm/wNGPV13H1A
2BaRB3iKXwjQdIx/8FyhBOl0qS9Swiryq1pF4mVQpU5hfP3115h97zpSIaIV
+hOO60qApEYhxLouCWeNO0B0NQWLjRiLwYkEsdA7jWsqVKigEAu9xumoduBe
Tc8uhJnCIuFZfEUd7TYP4DLXYh09elQhluPuxrr//vs1J6E6EStukTgOS4Jl
w+8T2qjVNcmEWBSYPn16bJEM1tWtWxecg7UEK2Ko9ZUo12JhTs3YHNNkrZsi
oMZxiBOnbrgb/algwYJE8fKMsaWxOtXoJQBSpkyZ8C++l/qZEAuDBpAjdtZf
QXdZsmTRA8csEm8rlgqnYK3L8tLkyZMD5gqhuXPnUmCnTp1iXJRlQSzYAcQy
MyA50S/IAWLhYX1/AvRSJVyhVSUgFuky7BAjxMLU6/5WgJNCLJhO7K/ZkDSB
WHR7oUKFTBTkuxbLF2KZa7HQiIEDBzruBC4CgMjRUSBhZP7VV1+1SiPE0KE/
pNqEWGASX4gFlS1bVvlOF/GTQh0Eg3/FS3rXYiHDMqZBS3HiFELdQGvAOckA
FkVgfPsT79ytWzczBTDZt29fefaFWAAP3feBhKuy43apmGAG54qOi9KZRI/x
CTrNK5lw3zQv1lqs2267TSEWOgK41QUMyDAWdeLEiWJPCC6Qf9A4GudtsgWx
eEbgaTIvYlgkjCXQwyJpnijXYhFgYnk0Holk56UVCxYsSJ48uf6ELJnTFmRb
tGiR94tCzz77LBmk+TQnxvMigucKYSitoEBfNbcg1uOPP45lMzPQV9YiB5PA
xnQCeNU3TEt0CiHWdUloBEJrztbhCNTYBi93J2ogtiUuMCEWYbVmIJL1QizH
VX8sP9KOl7cimrRp00YPscxRJmI0NeNKuP4YIRatoFjrSCtxtXGDWDLmL4Sl
5VumAd++fTslS/x+NRDLcVcmkMf3vDITYmG1yEYYbmYglpQ5RF+CiY899tiv
v/6KkY/xzugY9xU67oAJdYhxnaoJsQ4dOoTZNzdL4iZAp7GCWAEnhsk8nS/f
o4RYQqdPn543bx52O0aIRWUoPB4hFtpXs2bN4OolMMQiuhGIhX/39bZArNmz
Z/tWFeRgnWBGq2XI1wlc7g6QpubIqgWxlPtfffUV/3oh1tmzZ5s0acJPWBLr
1/vuuy96iIUN1Jzbtm0zuS+0Y8eOaCBW4cKFTRQkBCaJG8RKlSqV/it23jxp
Suw8AMm5OoilK97feOMNXccYQMFzhY4bgwNZle8mWRCLrrPMOwY/f/78AYUT
4QYPyiUihRDruiScOCI3Z84cTUGAYxzFApa0b98eC//bb79Zo1gWxAIymWM4
5iLeadOmUbh13iP5zZXVsYJY2CLr2Gc0Du9v7imTT3shlo7hC4mrNVf+xA1i
YZooR2YnhTZt2nQ1o1gYSR05AQJFA7H+/PNPwIa5XgL/WKhQoUijWI674h3v
9sQTT1gnHkQi37lCfIE+yzyLQizfRcvO/4VYtCtfvnym+8a5Yz91uCBGotWY
/UhVghG+EAv/JTbchFi+FYaJeCKywZFoRrEEYuHO9Kerh1g47uCQPAEglql0
devWFbkCYplWRSkAYt1xxx3Nmzc3U7AtMY5iDR8+nFacOnXKO4plQSw4ri+a
hgghwSCYw7yOC7GqVKmiTI8VxLr55puPHz9uloaVI9FEOFKyF2J5T27HrHXs
2FH/jRvEimTnr34Uy7my4r1WrVrRLLn0nSs8f/68uUKeoqKBWARuMMIUPzCe
dxQLL6Y6QjxoQawYh9YTjEKIdV0Soo6OV6pUSSUNg4xZDl6LNWDAAOw8rwCx
8INoqEzcY6IxVqo+OCxef/jhhyWFf1euXIkH0UEzFMRaAtGuXTtCGIEWlN+t
WzedefRCrKpVq+qLO3fu5FcwlWgcHgHsJAdpyo4/x12cLMpFJSdOnOhc2fmF
Wy9SpIhMK+CGXnnlFceFDVg8wUIk4iWxul599EKs4sWL67+yAAAvoCkdOnQA
wMhzbCEWXzd90L59+3Bken6ySUAs8U3SQKLgnDlzqsfB1OOwrC1LJsFQzHjL
li0jZbDIO1fIt7SZjjukby6xwxLS4ZYbcv4vxMJVUWddmXP69GlgYfCqMItg
jWIGx50tMl0VAuDdvoQrLFOmjDybEAvWU39r8yzIB4SDbFAI0kJsLhmQsUyZ
MimeVIjluL4DfZFRMgT1/vvvR/ssoUJB4A6JlCxwOhLEklVS9LN4EKTFeyA2
bdQNX16IVadOHUEasneY7pLKxApiKfKB6do64hEgruzthfRSACCWOSZjEhyh
3/TAIgQ7Q4YMhw8fln99IRaqKsiHT2BnWrVq9dNPP9GxArHMc0voNCyJqACs
Ib4zj/1HMKwRGJn/0jGl9evX8y91k/6xIFaaNGlUuRAzqg1bZQafdKpNNEQi
vS1SQSWFKUAsOThOJKd3794pU6Z85513zE5Ds1BzCWFIfPLJJ4lDvYbIC7FA
TdqZwXb+KiEWxWIuxGxGQ965QoIFDX8QZuJiMxJREoglOwrpMbAx6E7DKPq2
QIEC1rUUls3cvn17+vTpdXJ5w4YNRENRBpLXmkKIdb0S5giLinV6//33V61a
1aJFCwEb7777ruwzGjFihBo6IdkD2759e/Qdaw9i6devH6/LrqKnnnpKBwfE
UqEy5cqVwxcQLIMi5EhtQioAhjXuhLUE2OC5iGLAV507d+b5mWeewX106dJF
8BLeFnXGVhPso4k6rIEfJwPWr3z58nglScRAkYhDJ1HHbWgXyIfCZZwcT8FX
MG5UslGjRgKrwIG0K3fu3HiiXr164WSJss1hfKwTdhINLVmypCxoR3/vvfde
7O3cuXMxqpINC5wnTx78L05Kls2ImcUyACcoU6Yj58+fT9SJL/7www/pBLLJ
1i1zxTsxO9aJFlHU8uXLeV0hmUUwBZeEqZQr8Igu8eZYQmrI52Bx8M4aoDWB
uXdiJRJ55wppHU4NcaKqgGEEzISCQBewt/dEBWstFuLUqVMnKrNs2bIaNWrE
djcQXcrr+u+ePXsQLVAEVUKKSpcu7V0NSL+NHz9enk2IJVtKrRX1uAlkBgMO
mwCZSGObNm1w67L5kU/gbcFstB2wsXjxYmlgTpeQvZ49e8IIZEN3QwiBnFOn
Tg1Ewe/LCRUE5sihOJ21a9eCQ9AgOQoD38S3ZPeohXLRLCAEn4bvdB1uZejQ
obIoThzcq6++irMGFNWsWVOGW+lwNB3PjuRTIGqOhyJAEGWn8vwqOk7J/ITi
IMAweuHChZs2baI5ioIA8Pg7ctJ8XL9wn87PlSsXPe8rt/hWtJ5f0W76DYsk
3hMojuaCAUixzutAO6gq0AWARDeiQTxTT0wWn0b+qaHkhC90BeGb6DgSS4fQ
+bhXIDGJVqiCVYGzso0R7lMBcA52AOMDZiYddASnKFbtkq7ef/nll6kJCkix
hFSi7zSKRFhPIhIiAz7YH0ACHJExZ1AZvKY0wA+gXfaoIgM8g9BoPiYRGMaz
dasC/UkIwBcBWuA3BJtslIPqEZlKHhroa+cPHTrUrFkzMssKDSwzugxbZdBP
BIzM5lC8RUiyOUgeI3nnCmkXBhZsCd+RbUJ438PW6GGEH1CKNErlp0yZgsGn
G1EHGGEeHyGEESN05YtoPRqEeTGXf/CM2uom4sSlEGJd34QGoVMWlBL67bff
vAtyML8S2PLTtm3bzF29cg6P/osuYMdMd0YKsXCknR1YWhQNdUPLMNQybBVp
17A1sHDs2DFaYV6YpYmmCcXoYQbV/Dqucdu5c+dbb71lDmtg3DCMcuQmdj7g
wBarGta/vEgQyhfN7ZNWHrOBmF+Z3NQHk+g3gi+cpvcnJdAO0M46kOqrr76i
H6I5khR8iB2OMZtJ3rlCBIOuW716ta9xBv94RzO8hzbgICghbpuA6D28vGJd
x+W7VEkPPTAJr4pr08E9ay3WkCFDQM7WK5Qm9+/AYrTA3HoghzL51grDLn2F
TPrmIaB46aWXZK2+JfmW2Diu34Gt6kl9yfuWkIgE+ojA6NGyZmYZqTbLEdWW
B1jMr+g70B2DYFWVX5EiAIzJguD6OC4227JlC+jC18l6X6QP6U+J1IBkOkDh
uOw2p668Ok4KQZOl9SZh4rAA/3ZJdheS03eqGnab6d999x0I1rrBk7op65VQ
UqqtukyreUu5r4kCP8h29uzZgBWGVv/Q89Y8stfOBxgi89cAlmFSIp1w6Eto
H2GpxV/4TgOxWsFFnTp1ivqbXKaj6ECwfcA05f79+2E00auX0SiODlwnLoUQ
K6SQQopEkydPtlazBBBmv3Pnzt4j0SIdPRpnmjFjBnF9lJmx8OZAkAmx8LDN
mzfXLfwhhRTS1VDRokV9w/mEJ+yD90i0RKEQYoUUUkiR6OTJk3fffXeUa0en
Tp1qXbohFO8Q69KlS61bt450dINJ//nPfx588EFztNaEWMOHD08iHiGkkK4D
mjBhwtNPP53YtXBeeumlSKcZJzyFECukkEIKoIoVK/quvY+e4h1iOe7szOTJ
k2PEfrNnz7ZmDxPgjsKQQrox6eDBg7Vr1046u/mSAoUQK6SQQgqgXbt2mcdY
xYHOnz8faQH/VRZr7arwknepiVzlFu+VCSmkkBx3qX+MWnlDUQixQgoppJBC
CimkkOKdQoh1o9Fvv/12+PDhcCw3pJBCCimka01yDIjvTtIbgUKIdb3S2bNn
vWevkVijRo3+/fu3bNky4Jr1AIoGnul5hkoffPCB74Z6kyj266+/DrGfRb/8
8svUqVOtAyuuBf3www8DBgwIvjEnUUiO0Ix0ePi1oAMHDjRt2rR169bRnzkf
Nzp9+vSQIUPkOXHlP764T/3XrVv38ssvx0utlC5dumReJxHw9Sj78B9nbajq
m2++KSf+XSXBaz0zNn6J6nnPT2jWrFnfvn0bNmwY6QQSmhZwPJcQBtDa3oJh
tM4jTZoUQqzrlT788MPKlStbiRs2bJCTsXmoWbNmbFHWrl27rON5f//991Gj
RnVzaeXKlWKi582bZ53dBKgz7yj0pR07dtx0001JZKdtEiFCv44dO1qX9VwL
QhKQBz3fO0kRbc+cOfODDz6YMJ/74osvBg8efOTIkTFjxvhCLOuI+zjTv//9
7xIlSmTIkEH+XbVqlXUdTIIR3C9fvrxwHzVEx+OMPdDfZMmSxajssaU2bdqk
SpXKPLDXl95//305QDXGAuUSc+vI06ukY8eO9enTp3v37j179vTdWns1BGpN
kyaNXjxk0sGDBydNmrRo0SIa/vzzz5s/kbLIJUuusmXL5j3WzEuY95EjR1rm
PYCooXXWIsBYDgpGrYoVK+aLsiZMmGAdC088Th/Sk/SnnHMIxibFPDMQhHzH
HXfE2IREpxBiXa/kC7H27t0rt43IBQQdOnSIvsBz5861a9fOtL1oU8GCBSVi
vXjxYqlSpfRMpPvuu08v3XOig1hE9I899ljwWYs3IBFyJgDEcq6c7Z8EIRY0
dOjQBINYWHW9RcVLBOlt27Z966234uVbRDoKsXDQyL95jG1CktxjLtxv1aqV
eVZ2bKlo0aLxDrFACKNHj45xHfXZs2d79eoVzZG2+/fv7927d8DBm7El7G3h
woVl7y0IIfja4rhR48aNfSGWc+VmLu9l0447iKS3Jim1aNEixoEszHuBAgXk
Ah2eS5Ys6b3IySIvxIJ4UYa2Zs2aRUxh+gVo8+bNehmuECCfV+SSIEL10qVL
Szpfh7nqgEKIFVLiki/EwoQSv0jIcOjQIbRSJhOR20URSH0uwYjlWaZOnSpX
cQlhVzUzJhq9VnWIBmKF5EuYrISBWJ988kkIsaAyZcoEQCw0AmGOr2+98847
CrESlz799FPlPsFUsWLF9NrQ2FL16tVvQGWvXbu2Xu916dIl750vV09Y4EgQ
C/CZNm1a7zTil19+Wb58eS/sAbJad3N7acqUKeZl1qZ5j0S+EKtly5YCov74
4w9AEU1QvwDcKleunDVWTKiuDblw4YJ5ISnRjd5PEUKskBKXfCEWhITfdddd
oghIbL58+RwXYn0SgUQdTp48eeedd1oqRkwBxIo0p6BXMDs3DMTC0HnPNo8t
YXbMe6KvHcT66quvzCg+hFhC5l3AFl28eLFw4cIBF23Hlq4RxEIlveshg8mE
WNBjjz2mgCG2dGNCrAIFCsS5x6KkAIgFlS5dumfPnmYKYlC/fn3fI0p+++23
GOcKKc17m3kw+UIsovjUqVPLGb9y27iuLAXF6Q2zSpkyZYq05Gzv3r01a9aU
KoUQK6TEpUgQ6+zZs8Q7Ml34/fffR3lp3ahRo7wXqYwZMwZ9sZZdKQ0bNkxv
BY0SYhHm6DVVsg8FT+F7R5Xcyc7fY8eOkcdapEE6KIX048ePB5iI06dPk8e6
P0XXwfKuztpQPjkp0yztzz//JFEvsPvpp58aNGhAqy+7pKV98cUXZDPXaoLE
Tp06xU8HDx601nDSHEzl6tWrtRCFWLg/yjly5IjVIpiIfzQTsZy8JfkVJFv0
7rvvYqDIoB9SiIX5JR0AZr7IM0aS9Ehm+dy5c7wLCCHPoUOH5F0pnOrJkAjP
kkG3F/34449wXHiN4ZW36BPymBeWCcRSdlsiQTrIlnRzqS18kQvmrHQl+QnS
mQupbZ48ebZs2WIyUem5555r37695vzss8+E+zzDU4rSqwnlGkpJpGlWUTRf
Pr1t2zYTYlETFSeRQ8dVWF2pIjy12M0zHU66XPBNHrqrYsWKVhPQF/JImea7
UhNZxaQQa8eOHUWLFvXF2xKO8Yr5K4nEUySeOHGiWrVqquykHz16lHRrTEzT
TVaiFKSoGFiEQJr/0tVSc0v3SVeNFivhuNfQezWdn3QxqtoTtN5UaqHvvvuO
xOA5XDo8b968Ma4WE603UbpWEkbzFQvA86ukIwMY7QCI9eijj1IHM2XDhg3Y
7Uj5Y5wrHD16NCKxZ8+e4BaZ5AuxoPLly+sUIcol6k/TwKUHDhywMhcqVKhY
sWK+t3xCt99+u6C1EGKFlLjkhViINFHzgAED5AZ2737DAKpQocKrr75qJeIf
c+bMicz7oqCNGzfyljxHA7GGDx+eI0eOt99+23EhTe3atZctW7Z8+XLU0LLP
OKYiRYqMGzduxIgRDRs2zJUr15133qn3omKROnfuTLi0bt06CiH083pYumLC
hAnz5s3DgJQrV+6hhx7q1q3bK6+8QqdhDe677z4Kp4swC45rE7p27cpHH3jg
Ab4or7/22mv3338/7vjWW28V14aJS5UqFZWhhMGDBzsulHrsscfmz5+/du1a
jMa+ffscN6YrWLDgwIED27Vrxydat26ttcIpEzaSmD9/fgqRnQUCsQjr4BoR
HEbsiSeekPygHQLn6tWrk0gTJJGoMGvWrHyF8ukc4DR1sJqPt6LVFEut+BBN
c65ALKwub8nS95UrV0p+6tChQ4dVq1bRq7zi3d74yCOPpE+fHt61bNmS13XB
M/1JZ1KUIPkXXngBmeRfwWlwHIAxbdo0cEuVKlVIhyOLFy+uV69e4cKFiXz1
vl0wA1Ui5u3evXuZMmWQOrmm2XGPeQd9waPJkycjb3KXLuzLmDEj9YeDFGvt
0XDcxcO9evXatGkTX8eki6/B2lN+unTpgMo8eAck6VJQluNOsrdq1Uq6i39f
f/11JE3Dc2qbOXNm9KVNmzb0Bg3RbYOSGWbxaTjFTwKxENHevXsjS4Km8Ok0
Ct4BdWDuzTffDDwA4dO9MOvxxx9HTsSX8UVEl9L4FiwAziFvCACtgLO1atUS
caUHUHzerVGjBj0sNXnvvffws7w7ceJE8ltjmMmTJ/ee6g8AoA4IP/4XKCWK
j+pRW0SRooS/wn3S0T76gd5GpP/nf/6HqgKSkXMEZrlLiJM0edKkSagtNaTz
UXzzo7QR1UMkNIUP0V38nTp1Ktqko47wHQWkhx03WkE1UFJ0By5gIjJlyiTe
GWRFTfhXQNdbb71VvHhx1IrXyYlS6z3jdB1SN2vWLCQZ6aKZvOhrOd944w0a
/vDDDwfEdPv376fhYFf6ls53XFQJK5FtTASfJrxCHvRGadiBlNLVtLRp06aU
HwCx0B2K1a9jBn2nCM0+DJ4rxKxhkCOZd1/yQiyEdpBL1M2cInTcm5op37uj
ZP369bS0Z8+evj2JGRTpCiFWSIlLFsTCYiCcuCFRgaeeeip79uzRDwKjIL6n
LuzcuRN/WrVqVa8a4obQONkDEg3EwubwFYFYoCMdo8Z0WBEN/5YsWRLjKR8l
fMZVbd++XX7CTGl0hv4CxgBI1rd2796NIZVn7H+KFCnefPPNf7uEXcINkQjM
wz7gZcqWLSt2AIxETtwf5eObHBcUZcmSRT+HH1H847jD4HpXC6YSI+m4ATU9
T+XBD8ADWdWpBJswL+ZmZIFY4tkd1xPxRXnGy8up6biYlClTSiJhOPlxPfLv
ihUrcNDe3qYtZDMnEQRiCQ6ECJnxofIMSNM7v4BMeDerNNwo74Jz5F864a67
7pJn/Czc0cHS1atXK8SSPaQK5HAl+MdPP/1U/i1VqpQiE0BLkyZN5BkW85w3
b146X6ZCtHD8tVyRJou3Mem4CZhojS3ICJ76AlgPWxWzBUwU8lGdgAM/U1tl
vbRFIBbYTOCi/DR37ly8uXY7HlY3Rg0bNkxHsQhJeEvwBmF+jx49AA8gQPws
fcLn7r77bplBBo8BxmA92UgESziuOwbDINiOi/YrVaqk1cZlgwD1K6Apx92n
SSfoMA5yZUGsihUrWmfy09uYFF3zjAbJhA74RxfM/PTTT3SmKPuTTz4pg34Q
AA8Yg4xRZ+ILBb2EGF26dOEBSIzoOq7nBcJZPQ+ABPbIMzaHZ+1DUBmhjYyl
01K+LhDLcWUYYCbLFVBhUJbqIyiO9grEoj/RegRJhlnQSsCqCDP8Qlv1Q6gS
omWNcSkBJCgTABxpFE4hAUEEmeW5X79+iJxwls4ByOliPzpK7QkCkDt37gCI
hcHn67L/jgogDMhkpMxOdHOFghuxA1EuzDMhloSxYE45bUNYY+5EAFUSLvmW
gwDzXeyntyeJy2SXVgixQkpcMiEWgoqNMmfqsaXIsLqzGAnwE+nsONn+LDtz
TZLl9DK4FOVEIe5GIBZOky+iSpEG57FRKKD+C+oQiIUHwd6aNpDvYjAtBDh7
9myFWBg3nI7OFgF+ZAxKqE+fPnXq1MFsdu/eHXOBKcYCYzQU9eXLl88XYuEC
smbNCjbo7hIV1n09mP1Iiw0iQSxdi0VAjR2TZ530wb8oxMJfkF/9IJYtVhDL
XI2D+3bcYBYUjbuUhtSqVct7xx/wm3fV661atUohFpQ2bVpfiIUz5fmdd96R
nzC55kgFGFuH5qy1WKBTXsSD8IDMTJw4UeqGwEvH4lXJcOLECd9OBqHBSjMF
ONe5c2d5jgSxAA90sjnRZrLehFiIH886BASEU4hFi0zpMtdiCet1ThCsCLbX
nJs3b8bDChcIGZDDV155hXoS3XirakEsIFDLli3RQd4lNOBdEimkW7dumsda
i+W4EMs6QQVsg6JpbwMGCIUOHDiAeJi76XUtVvPmzRViLVq0iHTpHDR07Nix
UgjYD6fpuPvOgJSixV7asGGDQixUSdY5KAGttS0gIoVYo0aNou2aTUan5Rlw
pRDLcbUehK85b7/9doFYCxcuVIgFRiJYkCFrXwIF8TmKXb9+vfdXUIquCmjb
tq1CrJkzZ8pgoxA9JhDrxx9/RNPNu6uC12KJ4ov8E/J4x669hDBgMIPzzJkz
h2JVO4LJhFhwXPcSCtFMQnv9F33HK/mWg3WVYWEvSkRaEGYnhFghJTaZEItn
zKA5y3/27NnYQqyAHdM4DkqzxpquBmI5LliSaTgd5TApEsRCAfPmzWvGPvgm
qkF7zddBbuAfLCE5hwwZYi65xNiOGTNG/8Vm+q5n4EW84fTp06mzL8TCnJp+
1iSAhO/2aieWEMtxofLWrVuJWK8dxJIxmeD98gkMsZC0jBkzYn4REtmvYZFA
rO+//963trly5bIW2cJ0/K88X1OIRQOjh1g1atTQnPBdIIpJuL9oIBZ8NLdl
CZUrVy62EGvZsmVgUaucFStWmKx3DIiFZKK/x44dwwjce++9oqE0kPzeURHC
lvr16/MTgZV3mMiEWCj7pEmTzF8bNmwoo8pOfEMs4ikKlLWRw11yAoma4/dp
bKQMFLhgwYISJUrECLFkdVz0EMu5suIdQapZs2bAFKHSpk2bmjVrFmM2VI+a
RHMMr0IsOA6bdOxdqHjx4hbEsiIdk5AHTLS5jkIohFghJREyIRamUpYVKc2Y
MQOBj740IJauEBCStQRCy5cv94VYmTNnFsU0IZbvQmIhhViSAbvdo0cPYl7v
4p9IEAt7RU3MlbGYR+8oluMOXmGZ582bJyuRlLwQq1GjRlaFcRMYB0wlTY40
iiUQyzeejS+IReFYm927d1/TUSyBWMFHKSYAxDKNLQiZRsEFGbT0DnUGQyyC
a3M3unwrxlEsx50oNKUlbhDLHO+NFcRCm3TBoRAQ65ZbbpHlZ0IiqF6I5T0Z
CYjVvHlzFWwvxKpQoYJ1SAsQC9mzzjUSiGWGb+aOQqARmrJo0SJd1SwQSyMp
rbbU5LXXXqOZpgJqOQqxihYtikqav9JR12gUy3FXgmEo6Grv9KUQYm/aRgCJ
L8Si33r16jVs2DAsQzSjWAKxVDucKCAWfK9Tpw7KopUPpoC5QtO8y6SqQqwA
A64Q6/Dhw5YCYnCwA2aEgr4XKVLEfP3nn382F0DSjb4Qq3v37k4IsUJKbDIh
1gsvvICBUr04ceIEziLKvYRCtWvXNhdmWAdcP/7443zL2n+E+1PTYUIs7CF2
wHfrjUKsfv36yYA8SooPNQ8xEAJimYNLCrHwrTw/+eST+hMghNKs18FgVMP3
cHuMrTkqDjrFVixZskQMC1/BImEGxf3RD3yOlsqeICAWJtRxNys5VzYZiav9
66+/1O7hZ3WtlEXiZ8EhWkgkiAW64wGISK0wVilSpKD/6TSBWLrNMxhiyY5C
+VAkiAXlzJmTZxkJpD7qwpQEYqmv90IsnKx0IJIggxiypyx6iAXy0ZE03Hqr
Vq0cdxIzderUuE4RJ2q4a9cu5wrE0nVlFuEu06VLJyt/HNfbZsyYUTMHQCww
iaz1EgJiIWnSLlnLBK95FoiloMKEWGgKYFiW8ZNz/Pjx4H9RTC/EQnj0W4JM
8KGCsvgQzujYsWMkPvLII1ICYEAO99bNZcJZZJJsiK5UVWAhNSdRV6Chnvz7
999/6z5Wb2ACjkqWLBlMEafMvzQEfAvMA1eI5Jw6dSp37txU/rJ74YvXRUq/
EfEJvAGfbN26FXHVpWuUb+4OEDIh1lNPPYWh0FlgqgH71DVbEMtEO8EQSzGP
Y0AsBAlND16JRJ9TPXlGRMuUKeOdSXfcNaVIHe2lk2vWrDlw4EDhDhBLpm6F
FGIBaRDFqlWrCsfhRenSpfv06ROwgFY+4dvnkQjz6J0rRK1M8w47qlSpopaB
Z3rVdw28QqzvvvsOi6ShLk0AeJtDWI6LkW699VZztG3u3Ll63j4dBce912Y1
a9ZM9muYEAsG1a9f3+Rg0qEQYl2vZEIstAMJxGniUhcuXIiC+x6WEkCTJ09G
u/XfN954484778STUuDgwYPLli3rnRHr0qULeECeTYjVokULjBs+18xMiDd2
7NjkyZN37Nhx//79hLHoPvAAQ0ToZ5XMuxifYsWKUQ00HT8FikD1ZKkntjFX
rlwTJkygbthY4j7vjkJyUgdqIndD4PgEw4Bt8PIFCxbUIW7elb1jJBL4C87E
SWFAQGI0sEOHDjrx1KNHD4wGDceJO24oBzihbryIUcLsYDYXLFiAR8DgyLHJ
Fon55VtY2ldffZVXsG98vXfv3vhTkEzTpk0pEFvkuMvdAXXUH0eJcStevDht
pzdkoyJO+dChQ8TL/Dty5EhrDQleEgNFxfgQwkBVeSAnnleO8qhQoULWrFnF
/IJbcLggJfLTz5bHASn17NlTKnnmzJndu3eDjqjPjBkzBBR17dqVXwFpCCGc
BRTRXfgXcf2IJZ4OwMOv/AT4pJfoHAAGLdq5c6fjQizY3aBBA/qEYh9++GFd
1rJ+/Xo6JHPmzNQNvwC/cL7wnZL511fOKZ8qUfimTZsw6fh0uaEAow1SAgLh
i70wUgSPOui/I0aM4CslS5YkZJgyZQrVoEUIkqTTnwKEkGR+wu2CA0FfdCwI
AQbBOHqMZwJzegA94i20jIDirbfeog68hYDprBnPZABC4JGRWEmUpTKAFhJ1
sSVSKjNuMngFr5G3m65sIJXYivgC8ABPRQsGDBjAM3oqnhRBAnV4e2DZsmWg
LASD3qbyknn58uUkAi1Q3mnTpuXJk6du3brYH8ADDJWNhBAqKSNgADMwJz9R
iFwDAZJBo+ECfCdRz9NTMiEWwQWoEpBGJREPelLGlxBLPoFitmnT5tNPP4WD
lSpVAnJQPce9Po9qg1K2bdsGo7EqdAjKBQwgA7qA0vEKHl9koEmTJqBuWe2A
zEsTyO89Oh5hQ2exRYSHDRs27NSpk++BA7KUC/2Fd0BQ+A5ih9EID3WWOVmi
DHoPEyQCSZnoEQ1HXPk0zUHYAhaxYzBz5MgRsFrMS5s3b/bOFZrmHdyCeTfn
ERAMXfRlkbkWC15gBwigYBPyIGGjRTDRHB6HKY0aNaIbqQDCiS5Y6xPo2GzZ
ssmotQmxMDv0oXcmPSlQCLGuV/Ie2oC5QM5l23JsCbVFns0V76gS/osCfU/F
JGzBZKkftNZiYaysaXoJ7syUAwcOrFy5Mvj640j3X6CJxMUCUSK9C9QsVKiQ
rLnFqqO55rE5VslUBndsTkhh6GSZBH4Toy1GFYPAR81ZAxCgWAxzsUpw5fEU
fEsuErLG2axXcJ3kFIuK5ReEKUSoG6OlpTRel6H74A85rgBs374dLBcQRMP0
SBuUYAd+kKZ98803MhpGh5hQLVIF5EH+AjKpsHdnK3zBJZnNFwJKBZxTBLtx
6Hv27PFdZOLLHe/Ro3yUT4OCkDRrcyjCYB16JoSc43dEJOgKyRPptlCrGqBH
esC60A3f7U0EHsAvc3sX7pJsVoHvvfce0svXf3BJ02vXrm3N5SmBf/DLFtIg
kcJlZEktDN0FvqpSpYpoGZEIUETUnFbTA/SDaj0pAAw+6rutBohlLXUQpqNr
6oXho+8BaF5WRtnbQkuXLsWU6Qp/YigvAsTFU/OXXnrJkgGLCB5llIY20u2m
eESyBkiIMjdG0432yShu9ISE+M4VBpv3Rx99FGZ5061DG9CU559/HkQdaasU
fWttT6YDEYytW7eax+IpYUNkIZbjmShEHmI8lCxRKIRY1ytFOno0zjR69Gjd
uR8jYRInT56s/5oQ68cffyR0jbTxOWEIu/HQQw/pqhKMM3bGd1gppJBMit8L
dJImET40a9Ys+hNdIhEKhQNV9yoz0dHcPuyl8ePHe/csJwCBbR588EE1VtZJ
HdcH+c4VBhDRVuPGjX3xTKSjRyMRUQYIPPphN3ih8/vhWqyQEpfiHWKhOy1a
tIjGQhK9orbmGK8JsQYPHuy7zy4hafbs2ai2OhEgFtpqreMNKSQvyTXQwYv/
/9F08uTJmjVrxg0IWdS8eXM5qlcIiBW3qZxLly5RpUTp84ULF5YvX14NBdzP
nz9/rGbikj5t3rzZXHkVIw0aNCjS5EJsIZbjruo3zxIMoJ07d06bNk3/DSFW
SIlL8Q6xHNf8PvXUUzGGt1OnTtVYQyip3VH47bff5s2bd8CAAR9//PGePXvk
fOzErlRI/wz68ccfr/VtdIlIa9asiXSeWGxp69at2bJle/bZZ9GyHTt2tGrV
Sk5JjS1NmTLFe7VEwtCZM2fAVH369KEJWNQePXr47hH+RxOgCKwSL5eTxgFi
Oe7GqBj3XsGIcePGmWF7CLFCSlw6e/ZslFt3Y0VEcDFCLO+6gg8++MD3cPhE
JFlTvXjxYmxmOH4VUkjXgoCjzz//PFr22muvRVqQEyNFWqeUMPTnn38C8GjC
unXrEnd5w7UjAsxIJ5zEioDTwQfoRaIYWUzPWyX/8ssvsn82iVMIsUIKKaSQ
QgoppJDinUKIFVJIIYUUUkghhRTvFEKskOKXTp48GS/T+pHo8uXLmzZt0k09
58+fHzFihDXTR569e/eOHDny2lUjHunvv/9etmxZpD3yiUU//PBDpL3t0ROM
ME+VTAC6dOnSggULrJsI4oX+/PPPSDdmxhfJ6VixfYtO/vrrr69+A6Djrm+x
ylmzZk3NmjWnT59+9YULXbx4ce7cud4TNuJGX375ZWzVnE62jul45ZVX7rnn
nigXXQfQhQsXfI/p+IfSkSNHJkyYYCWeO3cOEY3mMh2h+GV3lIQM79u3zzwl
OBEphFghBRM2Flld5BLWzLrsz6JTp04lT548mhtI40yzZ8+++eab5fYcbBr2
3zxXXOjo0aNZsmQxD8dOyjRjxgyakNTWFeTIkaNatWpXWQi4MUOGDB06dIiX
KkVDcuyn78GhviQHRo0dO1buuevVq9fLL7/s60G6du2K4AWctCY0ceLEqVOn
ir7AWTlPqVu3bgsXLgx+EddfokSJdOnSRVlzpXXr1kW6qilWBL6iHPOKFjm3
fMuWLb73hMaN6A3rXpg4E/gqX758sVrzTESWNm1avTUA2rZtG6x566235Lhg
LyEhn3766bhx40RCevbsiYT4Hi5asWJFvVz+n05EyliA0qVLW+lgUe9daQEk
BxrrJQIJQ8TXGTNmNO9OSkQKIVZIMRLqlixZsnr16sUYKROzDBo0yLraLN4J
xdcLCtEmL8RyXFf7T4FYf//9N24iqUGsSZMmrVq16urLadeuXUJCLIx/5syZ
o4RYP/zwQ9OmTcuVKyeHaTsuzhk6dGipUqW8e9+2bt36xBNPRONc5FbH1q1b
a2ak1LpWz5c2btwYB4j1xRdf9OjRwzwQNW70+++/DxgwwPSGBQoUiNvq5QD6
97//nSpVqniBWI57qEKsIBbgefjw4eYJeFWqVAkYnDx37hyeumzZsrp1CIyN
GJQsWdJ7ECigOomMnMQLYWO9EEuuyooeYoFpYXcCQyzHvWgjhFgh/YMoefLk
Xbp0Sexa/P907733KsQ6ceLEPx1iOe7NtkkNYsUX9e/fPyEhFpQtW7ZoINb+
/fvJ2aJFC++YVZs2bd544404V0DuKASqmYnRHFiKJ4oDxLpGJDcSxjvEgtKn
Tx9fEOvFF1+8mp374D06PBLEOnjwYPbs2fHUXglBpCPdCn3d0LPPPnv1EAui
hxMeYlk3gCcihRArpGjIglgnT54MnjG8pvRPh1i4LWtxQmwh1pdffvlPWfWR
NCHWb7/9VrBgwWLFivnOCU6fPv1qtuf7QqxoKElBLBmLu74h1nfffUcbfSHW
77//XsQlXwl56qmnrrMDSL0UQqx4oRBihRQNmRBr9+7d+fPn37Nnz2WXrJyk
6AXrPB85cuTjjz+28Njl6EhyHjt2jBLMi91jBbG8ZTpXjmEhhqVk65RUTYfE
ukZZWyn8559/xv7gmHgdJ+XtH/xvo0aNBg8ebNZHIBb/ylWD1lu//PILpV28
eFH+ffPNN2+77TZsnW//Q99///0nn3zi+xOJcukYGIMy9Tiar7/+mn/N9e3K
xxgZJCy2zgOHIyQeOnSoX79+vhCL5pCB9lr1PHXqlNzuJw3URPNfrRudSSHW
XR4Cscizf//+AwcO+PbD1KlTEZt169Z5fwogFWzHZXQAi02IhTzITcRScyRZ
ATb/njlzRu6jdPwgForDV8xL8S5fWdyO5Gs6EmKqwGV3gZmJAUiB19JvJt8t
MpkuV6X/+eefvmIGArGYrp8QebDuCiedZoopoI2+EEvzEEGYX9SSxRSY7FaI
FaNi+rbx9OnTtBHp8mYDRPGT7+XFkeiyYfoc97RMakuLfCVQfpXp3Rhr7hWD
//73v3JEISrGT5EO/JQqHT582KyDdKZYAKyBVT3hLLR06dIAiMXXyYMQWq/T
IqpkJloQS0TLvIJQ+Ou4ak6Z1u2EyndzGSSJqB6J1q2UYhDQ+pEjR4YQK6R/
ECnEQoMqVKiAlt15553ly5e37vUj8ClQoMDs2bPl32bNmoGFtmzZUrJkSXPc
5oMPPgAmUcjo0aPJXLlyZZ55wOKhHbxVqlSp7du3//HHH4888ghlrlixolix
Yrr4IVYQC+0uUaJE1apVFy9ejPXAKTRv3jxfvnx44aZNm9aoUSNFihTmpWPP
PPPM8OHDN23ahJIWLFgQReatSZMmpUyZsmLFihQycOBAnhs3bvzaa68BBqh2
5syZhw0bhut8/PHHed66dWubNm0aNmyYKlUqUqyKde3aNXXq1Dlz5qT3BgwY
IIlArPHjx9PYmjVrZsmSRdft/P3333jn+vXrk0geUgCEZcqUocl33XUXJcit
skq0DtdAo9KmTfvggw9anwZ6tWvXLlmyZBs3bmzRogW+Cev33nvv0V6+CzKh
x8Rp0vkULtdq7Nq1i8byxSeeeALDPmbMGArnK9SNnunYsePKlSuxxjBIwepQ
l+jDhx9+mBe9EOujjz6i8L179/bv3x/ud+vWjagTZPvoo48iaTt37syUKRMv
gpHAWuPGjatUqdLNN988aNAgx/VN9G3u3LnpsTp16mTMmJE+18VUjguxZsyY
0bZtWxrFrzw4HqJAPhH9lkm8W8uWLfmo/EsN69Wrt23bNgCkt3yBWA0aNJAV
71RSxWDJkiXI9i233CL/0mrKrF27tvxrQaxZs2bxImKG9Mr1oGgHz9WqVUPq
+ESePHngQt++fbNmzcpP8tbbb7+NhMPK9OnTiwfft29f2bJlu3fvPnPmTLoO
vtNFXpSFbPPTggULHHeTC+3lE4grL1qnhq5duxYRzZ49O1BffBz9j+KjlUOG
DOETOXLkQOXV/X377beIEJK8bNmyQoUK+S53R/c7depEBgpHgBEPGUBDT4sU
KYIMoNGUnCtXLiyPXqquEAtZ+v/aO/MgK6rz/ZsQtrCJyCJ7EAUGBAJhURkU
FILLFLIEZRM1uICCA4RlJBncwIABDIQCNSLIEsCIJkpIIpSFKAoGIUUUMlpi
RJEEEAxBCoL27/Prp3jrpPveO3eGO2zf8/wx1dP3dPc57/q83adP9+nTR9P1
URZmTBVDDydNmuTSD0g1hsrOIHyREMvkkIEDBzLGyH1LhFyxYsX0PyREZkfR
hCb9ixgxfiwEMcLnI41nzJhBxECzHTt2XLhwIWMfNmwYPcH+CwoK4BLDhw9v
3LjxSy+9FIQv+CBV5IDqxdUZBfplP4NFJmgfe453CX/HZ9u0acOZiWBByEwY
LP6L1xMBOJafpHEB+0TjeC5Rjp+SUSy6cffddyNwggk2rJ8IwsRzsgM73Q8n
uRSLwrxfv36YCjFQtR58DCEgq7lz59IfRo072xfWcPZ77rkHk0AghFOFO3b2
7duXtDJlyhQuZ8EfI6HbdB5DopOeYnmcRXDvYpH4MOCEnwwjpJM+RLHwHdKH
4uSKFSsi03FxIriNPj9K0co2zEQ/kUn10j1B0t73xzGHDBmi7SJRLKgd0cAt
dugeXm/9h4rAtbTN5YiT1pL8CLehtmKbTArr0H7CFFlA26QPe0Fp8+bNdGbO
nDn6d9asWYSLuJQII8RMdw/0SfwhCL8mj7T1EZNHHnkE/hOceNsLkQYh52F7
27Zt8TMzFr1ZRvpApPEGBHaO5WxBGG8ZBTxE2Za//KQZJmQlKJx9uYx/oanE
/yCcBGuvMxD3IMDazsnJ0ZukMB8EblckIcYpFhRXUZdcSYJgjPrqGSGatMgZ
yOmQW4wHAgYhD0LVEJltFJiWbmySGVEf2dDulMIfkJu2oQrw4bh5kKkJ7HH5
pABsijNrm/SkNwTFsSMtRbGI838JgUhdpv3yyy8bxQpCu0pIsUiCkDQbBXYY
hBS6S5cuUH2SLNvbt28PQnrD5USxyEE0CMK7HHXr1pV2UDQsHeuVoiGWDARC
Fek2VsHVLeEme1A4e/Zs9M4G7BfeK+189dVXWDWJT5wEss1P+ioKP2HeMBAd
zs44xcIMmjVrZvUa/zZs2BDWEYT3ALE9rEvqhj6Rnf/0pz+ppfugkEtD7aCR
+pc2FAKRziMBVC+KFaR8UIj0zN/TAYK6JoT+hUlCJ4LwBhTqc1vCgSGc2oZf
YfBBuCQIBZ0xk0WLFqnuQ1zoTjuXLFmiePLvf/8bdk08FHtE9apH3KtgALie
LOThhx+GipjE3Fdu4STQb22vXLnyyiuvtBtQaDMZxbJZCnAtCBUVGdutW7cm
ALKBCuCxdohRLGwAvqed6NS+QkXUItpIC1K9kVLk+cYbb2ibmCkLQSD2wR0u
pFcMKI2pH+2ijNdTLI+zCGlSLECppaRDaUYqIeAn+3QOmRdn0f1w84gDBw6I
Sh08eLBcuXL5+fl67R3mQ2LVgWlSLIIktb/lYgO1IdW3/cslRLH0MWi35KQP
xIcnnngiCBkjFyJjBmEVz34lNQ63Gwh0gzb2jdRXX301fYplc7EIR5xEt+zE
hYKQ5KRDsaw92klIsUighET7984770S29i+ntbUF4Evux2F37NhRoUIFgtjy
5cttsFgF0VsK6ty5M6Ign1apUoUe2oHxuVgUofTNkiyq1y2aICzP0Zp7z8RG
xHWNYsHYicPWRgl93rx5+tedi0Wpy6Di8wbJs2Rtdw9KZBRkVdrfdNNN8TcK
OadRLAaFbRPVE05KiTwoRHfuig1k2HQoFvyK0h5eR6969uyJW2k/zC3y4gl2
axTrn//8p920adWqlRFgVOnyXjJdnGIFoS4KpVjuwndlypQRxQrC2z7yFKF8
+fLKg88995ybcINEc7FwKIiTe8to6tSpSEm3GV1/B7DNhBQL5ObmQhhEEoYO
HZrw8dkNN9yQJsWKvASKx6EL+C2HoBGxFxd00igWcQ8WRPfiTwlpc8stt4wY
MUKatU9jUxdwUTyIQ3BM7aQPVHAyA8zSPjvbokULe/oMPYtTLD1Q1jbmZxQL
nkNj69VTTz1lFMvVfpD2XKxLLrlk8ODBgeOqEY0bxYKY2eNj4rlRLIIhpm7t
u3btqiBMoW0ub9i0aRP11KOPPqqwg0DoJ/1B2u4MTD8Xy+PsQjEoVhDeFiYU
iCnFv1CGs+h2DXmQehNP3LlzJ8dqEc6CggKuEplmI6RJsYjkystkMTfQJaNY
mpihm/MGWtqdcAghTk1AGzNmDBmQPEs8JFpa44xTrCAMlYiaTqZDsYKwel21
ahX5JbMUKwhvMdHAngaqdo5MBqZX7ExNsUDvEJgEUZTUbCvHQrEQTqQxhS16
RM7JKBaoVq0aUVfb6VAs8iypOT6TGV5EDg0SwaVYEA+yHgQDShZXROrp7mlS
LJIUqSp+OBTLXboq+F+KFYQGg1NMnz4dKlISFCs4MZ1m8uTJ+G+hFAvaUyjF
wqEuvvhi10mXLVvG1fXwLn2KBQHA7AksKMXtjIs0KRbkh6wdp9AEFuMkEbgU
i57rSSvnIbC4zeAkCd9t4RDCBUrH9+1eXFZWVsK1UwqlWAIclRPCzdKhWGiz
GBSLvCCKFYR3LGHLP/rRjxJSLOGTTz4hyEMmC6VYblVlQOMNGjSI7IT2R1bD
8xTL4+xCMSiWTdfElUjrq1evjjcmQ02YMGHUqFFk2+uuu+7BBx/s06ePyJgo
VmSukVDUB4VwPDd0JKNYeoPbXV6b2FW9enWL1c8//zwFFPmdsaxbt65GjRow
Q9evM06xyF+9evUi3aR5F4ugRGCnQcbvYhHE8vLyhgwZ0qpVK5WioliWYQVR
rJUrV9qehBSLUIw5kekWLFjgzouOUyz6Q/gl3ae4i0XAr1Klim4wBulRLFQT
ty7M1V1yLQKjWGbYO3bsID3FF2hNSLHgKnrkkT7FgsXFu5GaYuEOAwYMwGIx
mBK6i7V582ZsDMVB5tO5iwXFqlmzpvukPk6xkDnXcqnIM888U4y7WCA7Oxu5
kWEj964NaVIseshPegRmQO+ELHsMHYFRLLMQJFCrVi098TRAsYh4Cc+AP6Ia
umcTw6BYEXUL6dzFIjrhekSSNO9iEeQfeughO0MKimVz4cC1116rBfZnz56N
MdMg2V0s9HvbbbdNmTIFl0/nLhYuj4HZvCwNCo2zM6IyUSyXi3qK5XF2IU6x
NNMgPmnWKBYOrkfzALbzwgsvxE+7ePHismXL6hEP2RBntIlMoFGjRs2aNbNn
9C+//LL244MWcuEzhS7aQDYpXbq03VqBYkGcLOYbxQK33347F7VZ0GRDsoN9
g55DyPJkLpIa20S5yy67zC3oRLHswWgKiiUiZ9JLRrGIt0OHDmWDf0WrOEQU
S2/YufKnS+Q1Ah37YWWlSpViI/JqefEoFvmalocOHWIDCYwdO1Yh+qKLLiII
6w0gWJPmcZFBEIsSHDvJvAMHDow8LuGimoYXARSrcuXK9nyHgpdRoC8OnzZt
GrQKaXNmKJZN8wvCCS0ui0uHYgWh3jmJ5twK8FIaJ/vYh1EsBmWSwbRat24d
aSmKde+997o70YgSB0aFNYqHw+rbtWsHxZJ8SOtGsaCmjB0SqHxtb2RAsSK5
w6VYXBSzDMKJSXXr1n366adlIXTYFdHJUCy8T29SSDvwRl0CRWtOtWAUi0ER
PaAlGuPbb78N+UcIrknADCHJU6dOtT24pBU78Ba7kxz8L8XCiiIUi3FB4SjW
4qMT0qRYQTiFiTJKdY0gfrJp06aE7Y1i/f3vf7dLoBGbRCrcd999JgFXswBr
1CsGtgcyltAM0DKeru2EFMvuJ3MUZSzM8D8hNAR7JutSLMrbatWqaRYoR2Fp
OHLEc0WxbNW4/fv3N2jQAO4EEdKkLNqj6yZNmuAmUCn+xRJEsVAiyqKC1tQ7
PFqWA8WyCBw4FItfYVM5OTkyQuIM9kxAI2WgRD3gwLUV2BkgkUfhDo+A+HFg
wnc5TzE8xfJIDeKkvnkBY8nLy9NkD/IsmYXUGfkY3KxZsypWrIiPEECIfh06
dCDAEgqIPAmfOOBrxAqriWAvtjRBED5JJPDiZWQEfIrMRXrlEuzp1KkTbs7V
9U4QHXOn02/cuJG0RaSl1iaY0IFy5cpBq5599lkiDAmCQwjCBJzVq1cTRkid
VM1B6NR0vkuXLsQ0OGGvXr1ING6Hp0+fPnPmTG3DDO1+fhC+cUw39IISAYcD
OZzwyIUiBTVRl3GR9WbMmEE0ILMQNMibsFZ7t2jcuHGMl2BFLQ+9IUETQ+AY
DIG8XKdOHVIzF4p0j6HRhvbENCIbccwmiwbhdLKePXtycg1h3bp19UOI/dIZ
TUMizrOHyEmcRIlEMIRJAuXw7du3s63uEdw4OepGtiiI/muYjII+k9/JFBTg
yBNK6b7xB+gY3OzOE4AI6XkoVbDefrKshwlhIbRB3QgTC0G2UCx1FRVwiZEj
R8q6COmkRfLXLbfcAr0nWejdImrzhNNykCrah8xwHrSAGbgvO7jgbAyQkRL8
uQpdQoZ0GGlEhrZ06VJ9NAQhkFs1Y4TyBO6k2TuoLysrC7khNPZjJBdffDEF
+9q1a6+//no6T5mP6skgetOWxjAfVTQ0Q261atUi1+hy5B10QTPMhvNjt+eF
r3ByElI5IyJHo0RUif2jVuSMoulMdnY2BuD2nBGxv1u3bhgPXj948ODzwtdI
XY4RhDcrkAPKnT9/Pn5NWMAl2UkxgjBxfNIu9JWEizWq3MjNzeVUWAKS4eqM
Eb1EFkuhk5wB1eOh+BGHSKeopnbt2k2bNsUAMDBUiRmgepgwlL5z585IkmRt
cQN/Rz6RF/8NuDksAsHi+FwIT6Rjw4cPt9n4EWBpCBwDoxtcBcZlU6cioHso
lK7Skn4yFpRFkcXOiADFq7lu8+bN2YiE0B49erg3qDlVxAygKISdqlWrtm/f
Ht/EDfUOCyJ1p4dpujtBA9+hOqABPUHj/Ms2Nk+s41/MgECBUjCMf/zjH3g9
8hkwYADNMAC23Zo3CCkWGufMUPGVK1f27t3bXn4hI+CeHAgBRvv8y08yTvpG
CYCQIdv9+vWDf1ICMwSsiMIZjkdhpfUxKPEoS+k2ogtCb0LdSJXOcxJlCtWP
NGMnUVTFMvYA96ZookxGrbgSY7GJo6cRnmJ5FAMUC4RrdxEYIfIWPLSHKinZ
dHfBJkkGie6JEa6JXcTtIi2BaN1Itv5PEAa6yJoqBoI/o0s4t2Hfvn1WAGoJ
rHgbupp64UqC5CuvvKInrarp7CfSt/svv9ITsUcqbiseIbrsd9fJEegb+1XK
EdjtLqIQkUZEWfZrsg9As19L8bg72UPpSlJ2v/2NlGBN0vuOHTvinwVHtqRj
CBX0o2/fvgRem/EehEq3mXtsMyKRN5KRZqHrLhZBmPjsrpaDOlydooVkKnZB
8IctiN8maxMRCCrm0pCr4q1QipYxALEm8qmrcRfIjSoDScZv0pqy4pqiqJHe
VUG43DKFOyQ8VRDewIzvp0u6C4f2uYSr32SXwAzQI3yAwdqT9Aj4CdKOZBIS
pNSdNyBb98ZsBAnHiJFEviMfARaCfb755pspPrUTObPuteKwCZWLeVMGptas
QWYAn0mnsQtFCRkAbMqNtLqjFT+ExrgzjcW44mtWQGXZaV7vNqB7XE7P/ZGV
+4DPsCFEEOoay3EnCSQbC6XrSy+9FLm3jCLwvkh8wxltZ0FBQTq+fwrgKZaH
h8epBFGa6tWdAXvPPfe4bw0Uivh0dw8PYfny5fG3QT08Thc8xfLw8DiV0KIN
mvIhQLHcu1iFwlMsjzi++eabPXv2JJtJ7uFxWuAploeHxynGoEGD2rdv/9pr
r73zzjtayjK+pkcykEkff/zxatWq7d+//0yYzupxhqBp06bVq1dP9hTSw+O0
wFMsDw+PU4+tW7c+GSL+jcjUePvtt588gWRv/3n8H8Tzzz8fmZzj4XHa4SmW
h4eHh4eHh0fG4SmWx0miJB7WZPCc7gfrM3tmj1OJElVcxEg8vDQS4hwQy8mb
ejHOcFrkdoYoy1Oscx4llz447dKlS92FeU8e+/fvHz9+vLsYe7FB9zZt2nTd
dddp7VAtMxVZEPK046c//anWhkq4hnM6mD9/vi0wtWvXrjOBLbzxxhupV+oo
Eo4cOTJnzpz777//5E919OjRF154wX1Dnz1jx44tXbp0fn5+igO/OYFkDd59
993IAkdnKQ4fPjxz5swJEyac7o5kBnGNFw/Hjh176qmn3BXySwiFWtq2bdvc
xe6KdOb33ntv4MCB9h2EYmD9+vVXX311wsVqEqKgoOC2226zrzafGqD0uXPn
niGh3lOscxvHjx/v3r37XXfdlZeXpyzM9qOPPtqpU6e2bdumWEAmHXzyySfN
mze/7LLLMtXbIJxQQb6bNm2au3PcuHFjxoxx+9++fXv6b0soJ8ShQ4f69u17
3nnniWIRl6pVq3aGfFXBcMkll5ACCHrxaUV79uyJr4QTnAiV9u/OnTv/EqJx
48Z//etfP/jgA1hlwpU2I+AkvXr1+uEPf4hU45/DmzhxYm5uLj898MADCVdH
T4ELLrggKyurSIekAGytfv36WlH8JPHnP/9Zq87aHgb48ccfv//++65IDYga
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
Hh4eHh4eGYenWB4eHh4eHh4eGcf/A3kmRrk=
    "], {{0, 508.24404781747745`}, {480.64165561015284`, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{119.98960000000002`, 119.98960000000002`},
    SmoothingQuality->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{480.64165561015284`, 508.24404781747745`},
  PlotRange->{{0, 480.64165561015284`}, {0, 508.24404781747745`}}]], "Input",E\
xpressionUUID->"7327c8ea-255d-4d63-9de0-c8649a4d469c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Select", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"First", "[", "#", "]"}], "==", "1"}], "&"}], "]"}], "[", 
  RowBox[{"Cases", "[", 
   RowBox[{
    RowBox[{"EdgeList", "@", "randomMixedGraph"}], ",", "_UndirectedEdge"}], 
   "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.866562504118688*^9, 3.866562551653817*^9}},
 CellLabel->
  "In[163]:=",ExpressionUUID->"2bef2560-9749-4672-903c-098472eec99f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"1", "\[UndirectedEdge]", "7"}], ",", 
   RowBox[{"1", "\[UndirectedEdge]", "8"}], ",", 
   RowBox[{"1", "\[UndirectedEdge]", "10"}], ",", 
   RowBox[{"1", "\[UndirectedEdge]", "14"}], ",", 
   RowBox[{"1", "\[UndirectedEdge]", "15"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.866562527999256*^9, 3.8665625520740976`*^9}},
 CellLabel->
  "Out[163]=",ExpressionUUID->"a9f20b09-736e-41ee-a775-2831676a1ed5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Names", "[", "\"\<*Adjacency*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8665627245474234`*^9, 3.866562729262001*^9}},
 CellLabel->
  "In[164]:=",ExpressionUUID->"b1d36198-ba3c-4203-a64c-e509280e6354"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"AdjacencyGraph\"\>", ",", "\<\"AdjacencyList\"\>", 
   ",", "\<\"AdjacencyMatrix\"\>", ",", "\<\"WeightedAdjacencyGraph\"\>", 
   ",", "\<\"WeightedAdjacencyMatrix\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.8665627295653667`*^9},
 CellLabel->
  "Out[164]=",ExpressionUUID->"30e1cf78-8597-4c0b-b10e-646d82f6e6d6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AssociationThread", "[", 
  RowBox[{
   RowBox[{"Range", "[", 
    RowBox[{"VertexCount", "[", 
     GraphicsBox[
      NamespaceBox["NetworkGraphics",
       DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {
          Null, {{1, 3}, {1, 4}, {1, 6}, {2, 4}, {2, 5}, {2, 7}, {3, 5}, {3, 
           8}, {4, 9}, {5, 10}, {6, 7}, {6, 10}, {7, 8}, {8, 9}, {9, 10}}}, {
          ImageSize -> 110, 
           VertexCoordinates -> {{0.9510565162951535, 0.30901699437494745`}, {
            0.5877852522924732, -0.8090169943749473}, {-0.587785252292473, \
-0.8090169943749476}, {-0.9510565162951536, 
            0.30901699437494723`}, {-2.4492935982947064`*^-16, 1.}, {
            1.902113032590307, 0.6180339887498949}, {
            1.1755705045849465`, -1.6180339887498947`}, {-1.175570504584946, \
-1.6180339887498951`}, {-1.9021130325903073`, 
            0.6180339887498945}, {-4.898587196589413*^-16, 2.}}, 
           VertexShapeFunction -> {"Name"}}]], Typeset`boxes, 
        Typeset`boxes$s2d = GraphicsGroupBox[{{
           Directive[
            Opacity[0.7], 
            Hue[0.6, 0.7, 0.5]], 
           LineBox[{{
              DynamicLocation["VertexID$1", Automatic, Center], 
              DynamicLocation["VertexID$3", Automatic, Center]}, {
              DynamicLocation["VertexID$1", Automatic, Center], 
              DynamicLocation["VertexID$4", Automatic, Center]}, {
              DynamicLocation["VertexID$1", Automatic, Center], 
              DynamicLocation["VertexID$6", Automatic, Center]}, {
              DynamicLocation["VertexID$2", Automatic, Center], 
              DynamicLocation["VertexID$4", Automatic, Center]}, {
              DynamicLocation["VertexID$2", Automatic, Center], 
              DynamicLocation["VertexID$5", Automatic, Center]}, {
              DynamicLocation["VertexID$2", Automatic, Center], 
              DynamicLocation["VertexID$7", Automatic, Center]}, {
              DynamicLocation["VertexID$3", Automatic, Center], 
              DynamicLocation["VertexID$5", Automatic, Center]}, {
              DynamicLocation["VertexID$3", Automatic, Center], 
              DynamicLocation["VertexID$8", Automatic, Center]}, {
              DynamicLocation["VertexID$4", Automatic, Center], 
              DynamicLocation["VertexID$9", Automatic, Center]}, {
              DynamicLocation["VertexID$5", Automatic, Center], 
              DynamicLocation["VertexID$10", Automatic, Center]}, {
              DynamicLocation["VertexID$6", Automatic, Center], 
              DynamicLocation["VertexID$7", Automatic, Center]}, {
              DynamicLocation["VertexID$6", Automatic, Center], 
              DynamicLocation["VertexID$10", Automatic, Center]}, {
              DynamicLocation["VertexID$7", Automatic, Center], 
              DynamicLocation["VertexID$8", Automatic, Center]}, {
              DynamicLocation["VertexID$8", Automatic, Center], 
              DynamicLocation["VertexID$9", Automatic, Center]}, {
              DynamicLocation["VertexID$9", Automatic, Center], 
              DynamicLocation["VertexID$10", Automatic, Center]}}]}, {
           Directive[
            Hue[0.6, 0.2, 0.8], 
            EdgeForm[
             Directive[
              GrayLevel[0], 
              Opacity[0.7]]]], 
           TagBox[
            InsetBox[
             BoxData[
              FormBox[
               PaneBox["1", Alignment -> Center, ImageMargins -> 2], 
               TraditionalForm]], {0.9510565162951535, 0.30901699437494745`}, 
             BaseStyle -> "Graphics"], "DynamicName", BoxID -> "VertexID$1"], 
           
           TagBox[
            InsetBox[
             BoxData[
              FormBox[
               PaneBox["2", Alignment -> Center, ImageMargins -> 2], 
               TraditionalForm]], {0.5877852522924732, -0.8090169943749473}, 
             BaseStyle -> "Graphics"], "DynamicName", BoxID -> "VertexID$2"], 
           
           TagBox[
            InsetBox[
             BoxData[
              FormBox[
               PaneBox["3", Alignment -> Center, ImageMargins -> 2], 
               TraditionalForm]], {-0.587785252292473, -0.8090169943749476}, 
             BaseStyle -> "Graphics"], "DynamicName", BoxID -> "VertexID$3"], 
           
           TagBox[
            InsetBox[
             BoxData[
              FormBox[
               PaneBox["4", Alignment -> Center, ImageMargins -> 2], 
               TraditionalForm]], {-0.9510565162951536, 0.30901699437494723`},
              BaseStyle -> "Graphics"], "DynamicName", BoxID -> "VertexID$4"], 
           TagBox[
            InsetBox[
             BoxData[
              FormBox[
               PaneBox["5", Alignment -> Center, ImageMargins -> 2], 
               TraditionalForm]], {-2.4492935982947064`*^-16, 1.}, BaseStyle -> 
             "Graphics"], "DynamicName", BoxID -> "VertexID$5"], 
           TagBox[
            InsetBox[
             BoxData[
              FormBox[
               PaneBox["6", Alignment -> Center, ImageMargins -> 2], 
               TraditionalForm]], {1.902113032590307, 0.6180339887498949}, 
             BaseStyle -> "Graphics"], "DynamicName", BoxID -> "VertexID$6"], 
           
           TagBox[
            InsetBox[
             BoxData[
              FormBox[
               PaneBox["7", Alignment -> Center, ImageMargins -> 2], 
               TraditionalForm]], {1.1755705045849465`, -1.6180339887498947`},
              BaseStyle -> "Graphics"], "DynamicName", BoxID -> "VertexID$7"], 
           TagBox[
            InsetBox[
             BoxData[
              FormBox[
               PaneBox["8", Alignment -> Center, ImageMargins -> 2], 
               TraditionalForm]], {-1.175570504584946, -1.6180339887498951`}, 
             BaseStyle -> "Graphics"], "DynamicName", BoxID -> "VertexID$8"], 
           
           TagBox[
            InsetBox[
             BoxData[
              FormBox[
               PaneBox["9", Alignment -> Center, ImageMargins -> 2], 
               TraditionalForm]], {-1.9021130325903073`, 0.6180339887498945}, 
             BaseStyle -> "Graphics"], "DynamicName", BoxID -> "VertexID$9"], 
           
           TagBox[
            InsetBox[
             BoxData[
              FormBox[
               PaneBox["10", Alignment -> Center, ImageMargins -> 2], 
               TraditionalForm]], {-4.898587196589413*^-16, 2.}, BaseStyle -> 
             "Graphics"], "DynamicName", BoxID -> 
            "VertexID$10"]}}], $CellContext`flag}, 
        TagBox[
         DynamicBox[GraphComputation`NetworkGraphicsBox[
          3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
          CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
           SynchronousUpdating -> False, 
           TrackedSymbols :> {$CellContext`flag}},
          
          ImageSizeCache->{{0., 109.99999999999997`}, {-59.10565162951536, 
           54.99999999999998}}],
         MouseAppearanceTag["NetworkGraphics"]],
        AllowKernelInitialization->False,
        UnsavedVariables:>{$CellContext`flag}]],
      DefaultBaseStyle->{
       "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
        Hue[0.8, 1., 0.6]},
      FrameTicks->None,
      ImageSize->110], "]"}], "]"}], "->", 
   RowBox[{"AdjacencyList", "[", 
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {
         Null, {{1, 3}, {1, 4}, {1, 6}, {2, 4}, {2, 5}, {2, 7}, {3, 5}, {3, 
          8}, {4, 9}, {5, 10}, {6, 7}, {6, 10}, {7, 8}, {8, 9}, {9, 10}}}, {
         ImageSize -> 110, 
          VertexCoordinates -> {{0.9510565162951535, 0.30901699437494745`}, {
           0.5877852522924732, -0.8090169943749473}, {-0.587785252292473, \
-0.8090169943749476}, {-0.9510565162951536, 
           0.30901699437494723`}, {-2.4492935982947064`*^-16, 1.}, {
           1.902113032590307, 0.6180339887498949}, {
           1.1755705045849465`, -1.6180339887498947`}, {-1.175570504584946, \
-1.6180339887498951`}, {-1.9021130325903073`, 
           0.6180339887498945}, {-4.898587196589413*^-16, 2.}}, 
          VertexShapeFunction -> {"Name"}}]], Typeset`boxes, 
       Typeset`boxes$s2d = GraphicsGroupBox[{{
          Directive[
           Opacity[0.7], 
           Hue[0.6, 0.7, 0.5]], 
          LineBox[{{
             DynamicLocation["VertexID$1", Automatic, Center], 
             DynamicLocation["VertexID$3", Automatic, Center]}, {
             DynamicLocation["VertexID$1", Automatic, Center], 
             DynamicLocation["VertexID$4", Automatic, Center]}, {
             DynamicLocation["VertexID$1", Automatic, Center], 
             DynamicLocation["VertexID$6", Automatic, Center]}, {
             DynamicLocation["VertexID$2", Automatic, Center], 
             DynamicLocation["VertexID$4", Automatic, Center]}, {
             DynamicLocation["VertexID$2", Automatic, Center], 
             DynamicLocation["VertexID$5", Automatic, Center]}, {
             DynamicLocation["VertexID$2", Automatic, Center], 
             DynamicLocation["VertexID$7", Automatic, Center]}, {
             DynamicLocation["VertexID$3", Automatic, Center], 
             DynamicLocation["VertexID$5", Automatic, Center]}, {
             DynamicLocation["VertexID$3", Automatic, Center], 
             DynamicLocation["VertexID$8", Automatic, Center]}, {
             DynamicLocation["VertexID$4", Automatic, Center], 
             DynamicLocation["VertexID$9", Automatic, Center]}, {
             DynamicLocation["VertexID$5", Automatic, Center], 
             DynamicLocation["VertexID$10", Automatic, Center]}, {
             DynamicLocation["VertexID$6", Automatic, Center], 
             DynamicLocation["VertexID$7", Automatic, Center]}, {
             DynamicLocation["VertexID$6", Automatic, Center], 
             DynamicLocation["VertexID$10", Automatic, Center]}, {
             DynamicLocation["VertexID$7", Automatic, Center], 
             DynamicLocation["VertexID$8", Automatic, Center]}, {
             DynamicLocation["VertexID$8", Automatic, Center], 
             DynamicLocation["VertexID$9", Automatic, Center]}, {
             DynamicLocation["VertexID$9", Automatic, Center], 
             DynamicLocation["VertexID$10", Automatic, Center]}}]}, {
          Directive[
           Hue[0.6, 0.2, 0.8], 
           EdgeForm[
            Directive[
             GrayLevel[0], 
             Opacity[0.7]]]], 
          TagBox[
           InsetBox[
            BoxData[
             FormBox[
              PaneBox["1", Alignment -> Center, ImageMargins -> 2], 
              TraditionalForm]], {0.9510565162951535, 0.30901699437494745`}, 
            BaseStyle -> "Graphics"], "DynamicName", BoxID -> "VertexID$1"], 
          TagBox[
           InsetBox[
            BoxData[
             FormBox[
              PaneBox["2", Alignment -> Center, ImageMargins -> 2], 
              TraditionalForm]], {0.5877852522924732, -0.8090169943749473}, 
            BaseStyle -> "Graphics"], "DynamicName", BoxID -> "VertexID$2"], 
          TagBox[
           InsetBox[
            BoxData[
             FormBox[
              PaneBox["3", Alignment -> Center, ImageMargins -> 2], 
              TraditionalForm]], {-0.587785252292473, -0.8090169943749476}, 
            BaseStyle -> "Graphics"], "DynamicName", BoxID -> "VertexID$3"], 
          TagBox[
           InsetBox[
            BoxData[
             FormBox[
              PaneBox["4", Alignment -> Center, ImageMargins -> 2], 
              TraditionalForm]], {-0.9510565162951536, 0.30901699437494723`}, 
            BaseStyle -> "Graphics"], "DynamicName", BoxID -> "VertexID$4"], 
          TagBox[
           InsetBox[
            BoxData[
             FormBox[
              PaneBox["5", Alignment -> Center, ImageMargins -> 2], 
              TraditionalForm]], {-2.4492935982947064`*^-16, 1.}, BaseStyle -> 
            "Graphics"], "DynamicName", BoxID -> "VertexID$5"], 
          TagBox[
           InsetBox[
            BoxData[
             FormBox[
              PaneBox["6", Alignment -> Center, ImageMargins -> 2], 
              TraditionalForm]], {1.902113032590307, 0.6180339887498949}, 
            BaseStyle -> "Graphics"], "DynamicName", BoxID -> "VertexID$6"], 
          TagBox[
           InsetBox[
            BoxData[
             FormBox[
              PaneBox["7", Alignment -> Center, ImageMargins -> 2], 
              TraditionalForm]], {1.1755705045849465`, -1.6180339887498947`}, 
            BaseStyle -> "Graphics"], "DynamicName", BoxID -> "VertexID$7"], 
          TagBox[
           InsetBox[
            BoxData[
             FormBox[
              PaneBox["8", Alignment -> Center, ImageMargins -> 2], 
              TraditionalForm]], {-1.175570504584946, -1.6180339887498951`}, 
            BaseStyle -> "Graphics"], "DynamicName", BoxID -> "VertexID$8"], 
          TagBox[
           InsetBox[
            BoxData[
             FormBox[
              PaneBox["9", Alignment -> Center, ImageMargins -> 2], 
              TraditionalForm]], {-1.9021130325903073`, 0.6180339887498945}, 
            BaseStyle -> "Graphics"], "DynamicName", BoxID -> "VertexID$9"], 
          TagBox[
           InsetBox[
            BoxData[
             FormBox[
              PaneBox["10", Alignment -> Center, ImageMargins -> 2], 
              TraditionalForm]], {-4.898587196589413*^-16, 2.}, BaseStyle -> 
            "Graphics"], "DynamicName", BoxID -> 
           "VertexID$10"]}}], $CellContext`flag}, 
       TagBox[
        DynamicBox[GraphComputation`NetworkGraphicsBox[
         3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
         CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
          SynchronousUpdating -> False, TrackedSymbols :> {$CellContext`flag}},
         ImageSizeCache->{{0., 109.99999999999997`}, {-59.10565162951536, 
          54.99999999999998}}],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False,
       UnsavedVariables:>{$CellContext`flag}]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FrameTicks->None,
     ImageSize->110], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8665627820365834`*^9, 3.8665628332977724`*^9}},
 CellLabel->
  "In[166]:=",ExpressionUUID->"ed3f5be7-2b6d-405a-bdea-8fb7523000e9"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"1", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"3", ",", "4", ",", "6"}], "}"}]}], ",", 
   RowBox[{"2", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"4", ",", "5", ",", "7"}], "}"}]}], ",", 
   RowBox[{"3", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "5", ",", "8"}], "}"}]}], ",", 
   RowBox[{"4", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "9"}], "}"}]}], ",", 
   RowBox[{"5", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3", ",", "10"}], "}"}]}], ",", 
   RowBox[{"6", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "7", ",", "10"}], "}"}]}], ",", 
   RowBox[{"7", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "6", ",", "8"}], "}"}]}], ",", 
   RowBox[{"8", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"3", ",", "7", ",", "9"}], "}"}]}], ",", 
   RowBox[{"9", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"4", ",", "8", ",", "10"}], "}"}]}], ",", 
   RowBox[{"10", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"5", ",", "6", ",", "9"}], "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.866562783149654*^9, 3.866562833552991*^9},
 CellLabel->
  "Out[166]=",ExpressionUUID->"a48cd1da-5538-4a0a-9f5f-57c8cb738ac2"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"AdjacencyList", "[", 
  RowBox[{
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {
        Null, {{1, 3}, {1, 4}, {1, 6}, {2, 4}, {2, 5}, {2, 7}, {3, 5}, {3, 
         8}, {4, 9}, {5, 10}, {6, 7}, {6, 10}, {7, 8}, {8, 9}, {9, 10}}}, {
        ImageSize -> 110, 
         VertexCoordinates -> {{0.9510565162951535, 0.30901699437494745`}, {
          0.5877852522924732, -0.8090169943749473}, {-0.587785252292473, \
-0.8090169943749476}, {-0.9510565162951536, 
          0.30901699437494723`}, {-2.4492935982947064`*^-16, 1.}, {
          1.902113032590307, 0.6180339887498949}, {
          1.1755705045849465`, -1.6180339887498947`}, {-1.175570504584946, \
-1.6180339887498951`}, {-1.9021130325903073`, 
          0.6180339887498945}, {-4.898587196589413*^-16, 2.}}, 
         VertexShapeFunction -> {"Name"}}]], Typeset`boxes, 
      Typeset`boxes$s2d = GraphicsGroupBox[{{
         Directive[
          Opacity[0.7], 
          Hue[0.6, 0.7, 0.5]], 
         LineBox[{{
            DynamicLocation["VertexID$1", Automatic, Center], 
            DynamicLocation["VertexID$3", Automatic, Center]}, {
            DynamicLocation["VertexID$1", Automatic, Center], 
            DynamicLocation["VertexID$4", Automatic, Center]}, {
            DynamicLocation["VertexID$1", Automatic, Center], 
            DynamicLocation["VertexID$6", Automatic, Center]}, {
            DynamicLocation["VertexID$2", Automatic, Center], 
            DynamicLocation["VertexID$4", Automatic, Center]}, {
            DynamicLocation["VertexID$2", Automatic, Center], 
            DynamicLocation["VertexID$5", Automatic, Center]}, {
            DynamicLocation["VertexID$2", Automatic, Center], 
            DynamicLocation["VertexID$7", Automatic, Center]}, {
            DynamicLocation["VertexID$3", Automatic, Center], 
            DynamicLocation["VertexID$5", Automatic, Center]}, {
            DynamicLocation["VertexID$3", Automatic, Center], 
            DynamicLocation["VertexID$8", Automatic, Center]}, {
            DynamicLocation["VertexID$4", Automatic, Center], 
            DynamicLocation["VertexID$9", Automatic, Center]}, {
            DynamicLocation["VertexID$5", Automatic, Center], 
            DynamicLocation["VertexID$10", Automatic, Center]}, {
            DynamicLocation["VertexID$6", Automatic, Center], 
            DynamicLocation["VertexID$7", Automatic, Center]}, {
            DynamicLocation["VertexID$6", Automatic, Center], 
            DynamicLocation["VertexID$10", Automatic, Center]}, {
            DynamicLocation["VertexID$7", Automatic, Center], 
            DynamicLocation["VertexID$8", Automatic, Center]}, {
            DynamicLocation["VertexID$8", Automatic, Center], 
            DynamicLocation["VertexID$9", Automatic, Center]}, {
            DynamicLocation["VertexID$9", Automatic, Center], 
            DynamicLocation["VertexID$10", Automatic, Center]}}]}, {
         Directive[
          Hue[0.6, 0.2, 0.8], 
          EdgeForm[
           Directive[
            GrayLevel[0], 
            Opacity[0.7]]]], 
         TagBox[
          InsetBox[
           BoxData[
            FormBox[
             PaneBox["1", Alignment -> Center, ImageMargins -> 2], 
             TraditionalForm]], {0.9510565162951535, 0.30901699437494745`}, 
           BaseStyle -> "Graphics"], "DynamicName", BoxID -> "VertexID$1"], 
         TagBox[
          InsetBox[
           BoxData[
            FormBox[
             PaneBox["2", Alignment -> Center, ImageMargins -> 2], 
             TraditionalForm]], {0.5877852522924732, -0.8090169943749473}, 
           BaseStyle -> "Graphics"], "DynamicName", BoxID -> "VertexID$2"], 
         TagBox[
          InsetBox[
           BoxData[
            FormBox[
             PaneBox["3", Alignment -> Center, ImageMargins -> 2], 
             TraditionalForm]], {-0.587785252292473, -0.8090169943749476}, 
           BaseStyle -> "Graphics"], "DynamicName", BoxID -> "VertexID$3"], 
         TagBox[
          InsetBox[
           BoxData[
            FormBox[
             PaneBox["4", Alignment -> Center, ImageMargins -> 2], 
             TraditionalForm]], {-0.9510565162951536, 0.30901699437494723`}, 
           BaseStyle -> "Graphics"], "DynamicName", BoxID -> "VertexID$4"], 
         TagBox[
          InsetBox[
           BoxData[
            FormBox[
             PaneBox["5", Alignment -> Center, ImageMargins -> 2], 
             TraditionalForm]], {-2.4492935982947064`*^-16, 1.}, BaseStyle -> 
           "Graphics"], "DynamicName", BoxID -> "VertexID$5"], 
         TagBox[
          InsetBox[
           BoxData[
            FormBox[
             PaneBox["6", Alignment -> Center, ImageMargins -> 2], 
             TraditionalForm]], {1.902113032590307, 0.6180339887498949}, 
           BaseStyle -> "Graphics"], "DynamicName", BoxID -> "VertexID$6"], 
         TagBox[
          InsetBox[
           BoxData[
            FormBox[
             PaneBox["7", Alignment -> Center, ImageMargins -> 2], 
             TraditionalForm]], {1.1755705045849465`, -1.6180339887498947`}, 
           BaseStyle -> "Graphics"], "DynamicName", BoxID -> "VertexID$7"], 
         TagBox[
          InsetBox[
           BoxData[
            FormBox[
             PaneBox["8", Alignment -> Center, ImageMargins -> 2], 
             TraditionalForm]], {-1.175570504584946, -1.6180339887498951`}, 
           BaseStyle -> "Graphics"], "DynamicName", BoxID -> "VertexID$8"], 
         TagBox[
          InsetBox[
           BoxData[
            FormBox[
             PaneBox["9", Alignment -> Center, ImageMargins -> 2], 
             TraditionalForm]], {-1.9021130325903073`, 0.6180339887498945}, 
           BaseStyle -> "Graphics"], "DynamicName", BoxID -> "VertexID$9"], 
         TagBox[
          InsetBox[
           BoxData[
            FormBox[
             PaneBox["10", Alignment -> Center, ImageMargins -> 2], 
             TraditionalForm]], {-4.898587196589413*^-16, 2.}, BaseStyle -> 
           "Graphics"], "DynamicName", BoxID -> 
          "VertexID$10"]}}], $CellContext`flag}, 
      TagBox[
       DynamicBox[GraphComputation`NetworkGraphicsBox[
        3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
        CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
         SynchronousUpdating -> False, TrackedSymbols :> {$CellContext`flag}},
        
        ImageSizeCache->{{0., 109.99999999999997`}, {-59.10565162951536, 
         54.99999999999998}}],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False,
      UnsavedVariables:>{$CellContext`flag}]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    
    FrameTicks->None,
    ImageSize->110], ",", " ", "1"}], "]"}]], "Input",ExpressionUUID->\
"e62123f3-e1e5-4f91-a55e-92f860ac4446"],

Cell["A list of edges incident to vertex 1:", "Text",
 CellID->1578242228,ExpressionUUID->"0bf6f723-61e2-4aa8-b14d-a6baddf7949d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IncidenceList", "[", 
  RowBox[{
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {
        Null, {{1, 3}, {1, 4}, {1, 6}, {2, 4}, {2, 5}, {2, 7}, {3, 5}, {3, 
         8}, {4, 9}, {5, 10}, {6, 7}, {6, 10}, {7, 8}, {8, 9}, {9, 10}}}, {
        ImageSize -> 110, 
         VertexCoordinates -> {{0.9510565162951535, 0.30901699437494745`}, {
          0.5877852522924732, -0.8090169943749473}, {-0.587785252292473, \
-0.8090169943749476}, {-0.9510565162951536, 
          0.30901699437494723`}, {-2.4492935982947064`*^-16, 1.}, {
          1.902113032590307, 0.6180339887498949}, {
          1.1755705045849465`, -1.6180339887498947`}, {-1.175570504584946, \
-1.6180339887498951`}, {-1.9021130325903073`, 
          0.6180339887498945}, {-4.898587196589413*^-16, 2.}}, 
         VertexShapeFunction -> {"Name"}}]], Typeset`boxes, 
      Typeset`boxes$s2d = GraphicsGroupBox[{{
         Directive[
          Opacity[0.7], 
          Hue[0.6, 0.7, 0.5]], 
         LineBox[{{
            DynamicLocation["VertexID$1", Automatic, Center], 
            DynamicLocation["VertexID$3", Automatic, Center]}, {
            DynamicLocation["VertexID$1", Automatic, Center], 
            DynamicLocation["VertexID$4", Automatic, Center]}, {
            DynamicLocation["VertexID$1", Automatic, Center], 
            DynamicLocation["VertexID$6", Automatic, Center]}, {
            DynamicLocation["VertexID$2", Automatic, Center], 
            DynamicLocation["VertexID$4", Automatic, Center]}, {
            DynamicLocation["VertexID$2", Automatic, Center], 
            DynamicLocation["VertexID$5", Automatic, Center]}, {
            DynamicLocation["VertexID$2", Automatic, Center], 
            DynamicLocation["VertexID$7", Automatic, Center]}, {
            DynamicLocation["VertexID$3", Automatic, Center], 
            DynamicLocation["VertexID$5", Automatic, Center]}, {
            DynamicLocation["VertexID$3", Automatic, Center], 
            DynamicLocation["VertexID$8", Automatic, Center]}, {
            DynamicLocation["VertexID$4", Automatic, Center], 
            DynamicLocation["VertexID$9", Automatic, Center]}, {
            DynamicLocation["VertexID$5", Automatic, Center], 
            DynamicLocation["VertexID$10", Automatic, Center]}, {
            DynamicLocation["VertexID$6", Automatic, Center], 
            DynamicLocation["VertexID$7", Automatic, Center]}, {
            DynamicLocation["VertexID$6", Automatic, Center], 
            DynamicLocation["VertexID$10", Automatic, Center]}, {
            DynamicLocation["VertexID$7", Automatic, Center], 
            DynamicLocation["VertexID$8", Automatic, Center]}, {
            DynamicLocation["VertexID$8", Automatic, Center], 
            DynamicLocation["VertexID$9", Automatic, Center]}, {
            DynamicLocation["VertexID$9", Automatic, Center], 
            DynamicLocation["VertexID$10", Automatic, Center]}}]}, {
         Directive[
          Hue[0.6, 0.2, 0.8], 
          EdgeForm[
           Directive[
            GrayLevel[0], 
            Opacity[0.7]]]], 
         TagBox[
          InsetBox[
           BoxData[
            FormBox[
             PaneBox["1", Alignment -> Center, ImageMargins -> 2], 
             TraditionalForm]], {0.9510565162951535, 0.30901699437494745`}, 
           BaseStyle -> "Graphics"], "DynamicName", BoxID -> "VertexID$1"], 
         TagBox[
          InsetBox[
           BoxData[
            FormBox[
             PaneBox["2", Alignment -> Center, ImageMargins -> 2], 
             TraditionalForm]], {0.5877852522924732, -0.8090169943749473}, 
           BaseStyle -> "Graphics"], "DynamicName", BoxID -> "VertexID$2"], 
         TagBox[
          InsetBox[
           BoxData[
            FormBox[
             PaneBox["3", Alignment -> Center, ImageMargins -> 2], 
             TraditionalForm]], {-0.587785252292473, -0.8090169943749476}, 
           BaseStyle -> "Graphics"], "DynamicName", BoxID -> "VertexID$3"], 
         TagBox[
          InsetBox[
           BoxData[
            FormBox[
             PaneBox["4", Alignment -> Center, ImageMargins -> 2], 
             TraditionalForm]], {-0.9510565162951536, 0.30901699437494723`}, 
           BaseStyle -> "Graphics"], "DynamicName", BoxID -> "VertexID$4"], 
         TagBox[
          InsetBox[
           BoxData[
            FormBox[
             PaneBox["5", Alignment -> Center, ImageMargins -> 2], 
             TraditionalForm]], {-2.4492935982947064`*^-16, 1.}, BaseStyle -> 
           "Graphics"], "DynamicName", BoxID -> "VertexID$5"], 
         TagBox[
          InsetBox[
           BoxData[
            FormBox[
             PaneBox["6", Alignment -> Center, ImageMargins -> 2], 
             TraditionalForm]], {1.902113032590307, 0.6180339887498949}, 
           BaseStyle -> "Graphics"], "DynamicName", BoxID -> "VertexID$6"], 
         TagBox[
          InsetBox[
           BoxData[
            FormBox[
             PaneBox["7", Alignment -> Center, ImageMargins -> 2], 
             TraditionalForm]], {1.1755705045849465`, -1.6180339887498947`}, 
           BaseStyle -> "Graphics"], "DynamicName", BoxID -> "VertexID$7"], 
         TagBox[
          InsetBox[
           BoxData[
            FormBox[
             PaneBox["8", Alignment -> Center, ImageMargins -> 2], 
             TraditionalForm]], {-1.175570504584946, -1.6180339887498951`}, 
           BaseStyle -> "Graphics"], "DynamicName", BoxID -> "VertexID$8"], 
         TagBox[
          InsetBox[
           BoxData[
            FormBox[
             PaneBox["9", Alignment -> Center, ImageMargins -> 2], 
             TraditionalForm]], {-1.9021130325903073`, 0.6180339887498945}, 
           BaseStyle -> "Graphics"], "DynamicName", BoxID -> "VertexID$9"], 
         TagBox[
          InsetBox[
           BoxData[
            FormBox[
             PaneBox["10", Alignment -> Center, ImageMargins -> 2], 
             TraditionalForm]], {-4.898587196589413*^-16, 2.}, BaseStyle -> 
           "Graphics"], "DynamicName", BoxID -> 
          "VertexID$10"]}}], $CellContext`flag}, 
      TagBox[
       DynamicBox[GraphComputation`NetworkGraphicsBox[
        3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
        CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
         SynchronousUpdating -> False, TrackedSymbols :> {$CellContext`flag}},
        
        ImageSizeCache->{{0., 109.99999999999997`}, {-59.10565162951536, 
         54.99999999999998}}],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False,
      UnsavedVariables:>{$CellContext`flag}]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    
    FrameTicks->None,
    ImageSize->110], ",", "1"}], "]"}]], "Input",
 GraphicsBoxOptions->{ImageSize->100},
 CellLabel->"In[1]:=",
 CellID->1153148809,ExpressionUUID->"1916a536-ee8c-4de9-9416-aa4707729480"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"1", "\[UndirectedEdge]", "3"}], ",", 
   RowBox[{"1", "\[UndirectedEdge]", "4"}], ",", 
   RowBox[{"1", "\[UndirectedEdge]", "6"}]}], "}"}]], "Output",
 CellLabel->"Out[1]=",
 CellID->367677599,ExpressionUUID->"7c5d20fa-fd65-4f17-8813-a674f44f28a5"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"u", "=", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"v", "=", 
   RowBox[{"{", 
    RowBox[{"d", ",", "e", ",", "f"}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8665630025831785`*^9, 3.866563047273403*^9}},
 CellLabel->
  "In[167]:=",ExpressionUUID->"3600d773-99f4-4f02-9e4f-b25fce7380e4"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Incidence List", "Section",
 CellChangeTimes->{{3.866563488040393*^9, 
  3.866563490162632*^9}},ExpressionUUID->"ba0f9bfa-4a2b-478f-9026-\
a648a63a7593"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"u", ".", 
    RowBox[{"IncidenceList", "[", 
     RowBox[{
      GraphicsBox[
       NamespaceBox["NetworkGraphics",
        DynamicModuleBox[{Typeset`graph = HoldComplete[
          
          Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {
           Null, {{1, 3}, {1, 4}, {1, 6}, {2, 4}, {2, 5}, {2, 7}, {3, 5}, {3, 
            8}, {4, 9}, {5, 10}, {6, 7}, {6, 10}, {7, 8}, {8, 9}, {9, 10}}}, {
           ImageSize -> 110, 
            VertexCoordinates -> {{0.9510565162951535, 
             0.30901699437494745`}, {
             0.5877852522924732, -0.8090169943749473}, {-0.587785252292473, \
-0.8090169943749476}, {-0.9510565162951536, 
             0.30901699437494723`}, {-2.4492935982947064`*^-16, 1.}, {
             1.902113032590307, 0.6180339887498949}, {
             1.1755705045849465`, -1.6180339887498947`}, {-1.175570504584946, \
-1.6180339887498951`}, {-1.9021130325903073`, 
             0.6180339887498945}, {-4.898587196589413*^-16, 2.}}, 
            VertexShapeFunction -> {"Name"}}]], Typeset`boxes, 
         Typeset`boxes$s2d = GraphicsGroupBox[{{
            Directive[
             Opacity[0.7], 
             Hue[0.6, 0.7, 0.5]], 
            LineBox[{{
               DynamicLocation["VertexID$1", Automatic, Center], 
               DynamicLocation["VertexID$3", Automatic, Center]}, {
               DynamicLocation["VertexID$1", Automatic, Center], 
               DynamicLocation["VertexID$4", Automatic, Center]}, {
               DynamicLocation["VertexID$1", Automatic, Center], 
               DynamicLocation["VertexID$6", Automatic, Center]}, {
               DynamicLocation["VertexID$2", Automatic, Center], 
               DynamicLocation["VertexID$4", Automatic, Center]}, {
               DynamicLocation["VertexID$2", Automatic, Center], 
               DynamicLocation["VertexID$5", Automatic, Center]}, {
               DynamicLocation["VertexID$2", Automatic, Center], 
               DynamicLocation["VertexID$7", Automatic, Center]}, {
               DynamicLocation["VertexID$3", Automatic, Center], 
               DynamicLocation["VertexID$5", Automatic, Center]}, {
               DynamicLocation["VertexID$3", Automatic, Center], 
               DynamicLocation["VertexID$8", Automatic, Center]}, {
               DynamicLocation["VertexID$4", Automatic, Center], 
               DynamicLocation["VertexID$9", Automatic, Center]}, {
               DynamicLocation["VertexID$5", Automatic, Center], 
               DynamicLocation["VertexID$10", Automatic, Center]}, {
               DynamicLocation["VertexID$6", Automatic, Center], 
               DynamicLocation["VertexID$7", Automatic, Center]}, {
               DynamicLocation["VertexID$6", Automatic, Center], 
               DynamicLocation["VertexID$10", Automatic, Center]}, {
               DynamicLocation["VertexID$7", Automatic, Center], 
               DynamicLocation["VertexID$8", Automatic, Center]}, {
               DynamicLocation["VertexID$8", Automatic, Center], 
               DynamicLocation["VertexID$9", Automatic, Center]}, {
               DynamicLocation["VertexID$9", Automatic, Center], 
               DynamicLocation["VertexID$10", Automatic, Center]}}]}, {
            Directive[
             Hue[0.6, 0.2, 0.8], 
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.7]]]], 
            TagBox[
             InsetBox[
              BoxData[
               FormBox[
                PaneBox["1", Alignment -> Center, ImageMargins -> 2], 
                TraditionalForm]], {0.9510565162951535, 0.30901699437494745`},
               BaseStyle -> "Graphics"], "DynamicName", BoxID -> 
             "VertexID$1"], 
            TagBox[
             InsetBox[
              BoxData[
               FormBox[
                PaneBox["2", Alignment -> Center, ImageMargins -> 2], 
                TraditionalForm]], {0.5877852522924732, -0.8090169943749473}, 
              BaseStyle -> "Graphics"], "DynamicName", BoxID -> "VertexID$2"], 
            TagBox[
             InsetBox[
              BoxData[
               FormBox[
                PaneBox["3", Alignment -> Center, ImageMargins -> 2], 
                TraditionalForm]], {-0.587785252292473, -0.8090169943749476}, 
              BaseStyle -> "Graphics"], "DynamicName", BoxID -> "VertexID$3"], 
            TagBox[
             InsetBox[
              BoxData[
               FormBox[
                PaneBox["4", Alignment -> Center, ImageMargins -> 2], 
                TraditionalForm]], {-0.9510565162951536, 
              0.30901699437494723`}, BaseStyle -> "Graphics"], "DynamicName", 
             BoxID -> "VertexID$4"], 
            TagBox[
             InsetBox[
              BoxData[
               FormBox[
                PaneBox["5", Alignment -> Center, ImageMargins -> 2], 
                TraditionalForm]], {-2.4492935982947064`*^-16, 1.}, BaseStyle -> 
              "Graphics"], "DynamicName", BoxID -> "VertexID$5"], 
            TagBox[
             InsetBox[
              BoxData[
               FormBox[
                PaneBox["6", Alignment -> Center, ImageMargins -> 2], 
                TraditionalForm]], {1.902113032590307, 0.6180339887498949}, 
              BaseStyle -> "Graphics"], "DynamicName", BoxID -> "VertexID$6"], 
            TagBox[
             InsetBox[
              BoxData[
               FormBox[
                PaneBox["7", Alignment -> Center, ImageMargins -> 2], 
                TraditionalForm]], {
              1.1755705045849465`, -1.6180339887498947`}, BaseStyle -> 
              "Graphics"], "DynamicName", BoxID -> "VertexID$7"], 
            TagBox[
             InsetBox[
              BoxData[
               FormBox[
                PaneBox["8", Alignment -> Center, ImageMargins -> 2], 
                TraditionalForm]], {-1.175570504584946, -1.6180339887498951`},
               BaseStyle -> "Graphics"], "DynamicName", BoxID -> 
             "VertexID$8"], 
            TagBox[
             InsetBox[
              BoxData[
               FormBox[
                PaneBox["9", Alignment -> Center, ImageMargins -> 2], 
                TraditionalForm]], {-1.9021130325903073`, 0.6180339887498945},
               BaseStyle -> "Graphics"], "DynamicName", BoxID -> 
             "VertexID$9"], 
            TagBox[
             InsetBox[
              BoxData[
               FormBox[
                PaneBox["10", Alignment -> Center, ImageMargins -> 2], 
                TraditionalForm]], {-4.898587196589413*^-16, 2.}, BaseStyle -> 
              "Graphics"], "DynamicName", BoxID -> 
             "VertexID$10"]}}], $CellContext`flag}, 
         TagBox[
          
          DynamicBox[GraphComputation`NetworkGraphicsBox[
           3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
           CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
            SynchronousUpdating -> False, 
            TrackedSymbols :> {$CellContext`flag}},
           
           ImageSizeCache->{{0., 109.99999999999997`}, {-59.10565162951536, 
            54.99999999999998}}],
          MouseAppearanceTag["NetworkGraphics"]],
         AllowKernelInitialization->False,
         UnsavedVariables:>{$CellContext`flag}]],
       DefaultBaseStyle->{
        "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
         Hue[0.8, 1., 0.6]},
       FrameTicks->None,
       ImageSize->110], ",", "1"}], "]"}]}], "-", 
   RowBox[{"v", ".", 
    RowBox[{"IncidenceList", "[", 
     RowBox[{
      GraphicsBox[
       NamespaceBox["NetworkGraphics",
        DynamicModuleBox[{Typeset`graph = HoldComplete[
          
          Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {
           Null, {{1, 3}, {1, 4}, {1, 6}, {2, 4}, {2, 5}, {2, 7}, {3, 5}, {3, 
            8}, {4, 9}, {5, 10}, {6, 7}, {6, 10}, {7, 8}, {8, 9}, {9, 10}}}, {
           ImageSize -> 110, 
            VertexCoordinates -> {{0.9510565162951535, 
             0.30901699437494745`}, {
             0.5877852522924732, -0.8090169943749473}, {-0.587785252292473, \
-0.8090169943749476}, {-0.9510565162951536, 
             0.30901699437494723`}, {-2.4492935982947064`*^-16, 1.}, {
             1.902113032590307, 0.6180339887498949}, {
             1.1755705045849465`, -1.6180339887498947`}, {-1.175570504584946, \
-1.6180339887498951`}, {-1.9021130325903073`, 
             0.6180339887498945}, {-4.898587196589413*^-16, 2.}}, 
            VertexShapeFunction -> {"Name"}}]], Typeset`boxes, 
         Typeset`boxes$s2d = GraphicsGroupBox[{{
            Directive[
             Opacity[0.7], 
             Hue[0.6, 0.7, 0.5]], 
            LineBox[{{
               DynamicLocation["VertexID$1", Automatic, Center], 
               DynamicLocation["VertexID$3", Automatic, Center]}, {
               DynamicLocation["VertexID$1", Automatic, Center], 
               DynamicLocation["VertexID$4", Automatic, Center]}, {
               DynamicLocation["VertexID$1", Automatic, Center], 
               DynamicLocation["VertexID$6", Automatic, Center]}, {
               DynamicLocation["VertexID$2", Automatic, Center], 
               DynamicLocation["VertexID$4", Automatic, Center]}, {
               DynamicLocation["VertexID$2", Automatic, Center], 
               DynamicLocation["VertexID$5", Automatic, Center]}, {
               DynamicLocation["VertexID$2", Automatic, Center], 
               DynamicLocation["VertexID$7", Automatic, Center]}, {
               DynamicLocation["VertexID$3", Automatic, Center], 
               DynamicLocation["VertexID$5", Automatic, Center]}, {
               DynamicLocation["VertexID$3", Automatic, Center], 
               DynamicLocation["VertexID$8", Automatic, Center]}, {
               DynamicLocation["VertexID$4", Automatic, Center], 
               DynamicLocation["VertexID$9", Automatic, Center]}, {
               DynamicLocation["VertexID$5", Automatic, Center], 
               DynamicLocation["VertexID$10", Automatic, Center]}, {
               DynamicLocation["VertexID$6", Automatic, Center], 
               DynamicLocation["VertexID$7", Automatic, Center]}, {
               DynamicLocation["VertexID$6", Automatic, Center], 
               DynamicLocation["VertexID$10", Automatic, Center]}, {
               DynamicLocation["VertexID$7", Automatic, Center], 
               DynamicLocation["VertexID$8", Automatic, Center]}, {
               DynamicLocation["VertexID$8", Automatic, Center], 
               DynamicLocation["VertexID$9", Automatic, Center]}, {
               DynamicLocation["VertexID$9", Automatic, Center], 
               DynamicLocation["VertexID$10", Automatic, Center]}}]}, {
            Directive[
             Hue[0.6, 0.2, 0.8], 
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.7]]]], 
            TagBox[
             InsetBox[
              BoxData[
               FormBox[
                PaneBox["1", Alignment -> Center, ImageMargins -> 2], 
                TraditionalForm]], {0.9510565162951535, 0.30901699437494745`},
               BaseStyle -> "Graphics"], "DynamicName", BoxID -> 
             "VertexID$1"], 
            TagBox[
             InsetBox[
              BoxData[
               FormBox[
                PaneBox["2", Alignment -> Center, ImageMargins -> 2], 
                TraditionalForm]], {0.5877852522924732, -0.8090169943749473}, 
              BaseStyle -> "Graphics"], "DynamicName", BoxID -> "VertexID$2"], 
            TagBox[
             InsetBox[
              BoxData[
               FormBox[
                PaneBox["3", Alignment -> Center, ImageMargins -> 2], 
                TraditionalForm]], {-0.587785252292473, -0.8090169943749476}, 
              BaseStyle -> "Graphics"], "DynamicName", BoxID -> "VertexID$3"], 
            TagBox[
             InsetBox[
              BoxData[
               FormBox[
                PaneBox["4", Alignment -> Center, ImageMargins -> 2], 
                TraditionalForm]], {-0.9510565162951536, 
              0.30901699437494723`}, BaseStyle -> "Graphics"], "DynamicName", 
             BoxID -> "VertexID$4"], 
            TagBox[
             InsetBox[
              BoxData[
               FormBox[
                PaneBox["5", Alignment -> Center, ImageMargins -> 2], 
                TraditionalForm]], {-2.4492935982947064`*^-16, 1.}, BaseStyle -> 
              "Graphics"], "DynamicName", BoxID -> "VertexID$5"], 
            TagBox[
             InsetBox[
              BoxData[
               FormBox[
                PaneBox["6", Alignment -> Center, ImageMargins -> 2], 
                TraditionalForm]], {1.902113032590307, 0.6180339887498949}, 
              BaseStyle -> "Graphics"], "DynamicName", BoxID -> "VertexID$6"], 
            TagBox[
             InsetBox[
              BoxData[
               FormBox[
                PaneBox["7", Alignment -> Center, ImageMargins -> 2], 
                TraditionalForm]], {
              1.1755705045849465`, -1.6180339887498947`}, BaseStyle -> 
              "Graphics"], "DynamicName", BoxID -> "VertexID$7"], 
            TagBox[
             InsetBox[
              BoxData[
               FormBox[
                PaneBox["8", Alignment -> Center, ImageMargins -> 2], 
                TraditionalForm]], {-1.175570504584946, -1.6180339887498951`},
               BaseStyle -> "Graphics"], "DynamicName", BoxID -> 
             "VertexID$8"], 
            TagBox[
             InsetBox[
              BoxData[
               FormBox[
                PaneBox["9", Alignment -> Center, ImageMargins -> 2], 
                TraditionalForm]], {-1.9021130325903073`, 0.6180339887498945},
               BaseStyle -> "Graphics"], "DynamicName", BoxID -> 
             "VertexID$9"], 
            TagBox[
             InsetBox[
              BoxData[
               FormBox[
                PaneBox["10", Alignment -> Center, ImageMargins -> 2], 
                TraditionalForm]], {-4.898587196589413*^-16, 2.}, BaseStyle -> 
              "Graphics"], "DynamicName", BoxID -> 
             "VertexID$10"]}}], $CellContext`flag}, 
         TagBox[
          
          DynamicBox[GraphComputation`NetworkGraphicsBox[
           3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
           CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
            SynchronousUpdating -> False, 
            TrackedSymbols :> {$CellContext`flag}},
           
           ImageSizeCache->{{0., 109.99999999999997`}, {-59.10565162951536, 
            54.99999999999998}}],
          MouseAppearanceTag["NetworkGraphics"]],
         AllowKernelInitialization->False,
         UnsavedVariables:>{$CellContext`flag}]],
       DefaultBaseStyle->{
        "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
         Hue[0.8, 1., 0.6]},
       FrameTicks->None,
       ImageSize->110], ",", "1"}], "]"}]}]}], "==", "0"}]], "Input",
 CellChangeTimes->{{3.866563049550768*^9, 3.866563065701305*^9}},
 CellLabel->
  "In[169]:=",ExpressionUUID->"69dc546a-4eaf-450e-8be7-70ce837e8837"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"a", " ", 
    RowBox[{"(", 
     RowBox[{"1", "\[UndirectedEdge]", "3"}], ")"}]}], "-", 
   RowBox[{"d", " ", 
    RowBox[{"(", 
     RowBox[{"1", "\[UndirectedEdge]", "3"}], ")"}]}], "+", 
   RowBox[{"b", " ", 
    RowBox[{"(", 
     RowBox[{"1", "\[UndirectedEdge]", "4"}], ")"}]}], "-", 
   RowBox[{"e", " ", 
    RowBox[{"(", 
     RowBox[{"1", "\[UndirectedEdge]", "4"}], ")"}]}], "+", 
   RowBox[{"c", " ", 
    RowBox[{"(", 
     RowBox[{"1", "\[UndirectedEdge]", "6"}], ")"}]}], "-", 
   RowBox[{"f", " ", 
    RowBox[{"(", 
     RowBox[{"1", "\[UndirectedEdge]", "6"}], ")"}]}]}], "\[Equal]", 
  "0"}]], "Output",
 CellChangeTimes->{3.866563066518989*^9},
 CellLabel->
  "Out[169]=",ExpressionUUID->"51c4ce0c-b04e-40ce-980a-c5ca02ace668"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"u", ".", 
   RowBox[{"IncidenceList", "[", 
    RowBox[{
     GraphicsBox[
      NamespaceBox["NetworkGraphics",
       DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {
          Null, {{1, 3}, {1, 4}, {1, 6}, {2, 4}, {2, 5}, {2, 7}, {3, 5}, {3, 
           8}, {4, 9}, {5, 10}, {6, 7}, {6, 10}, {7, 8}, {8, 9}, {9, 10}}}, {
          ImageSize -> 110, 
           VertexCoordinates -> {{0.9510565162951535, 0.30901699437494745`}, {
            0.5877852522924732, -0.8090169943749473}, {-0.587785252292473, \
-0.8090169943749476}, {-0.9510565162951536, 
            0.30901699437494723`}, {-2.4492935982947064`*^-16, 1.}, {
            1.902113032590307, 0.6180339887498949}, {
            1.1755705045849465`, -1.6180339887498947`}, {-1.175570504584946, \
-1.6180339887498951`}, {-1.9021130325903073`, 
            0.6180339887498945}, {-4.898587196589413*^-16, 2.}}, 
           VertexShapeFunction -> {"Name"}}]], Typeset`boxes, 
        Typeset`boxes$s2d = GraphicsGroupBox[{{
           Directive[
            Opacity[0.7], 
            Hue[0.6, 0.7, 0.5]], 
           LineBox[{{
              DynamicLocation["VertexID$1", Automatic, Center], 
              DynamicLocation["VertexID$3", Automatic, Center]}, {
              DynamicLocation["VertexID$1", Automatic, Center], 
              DynamicLocation["VertexID$4", Automatic, Center]}, {
              DynamicLocation["VertexID$1", Automatic, Center], 
              DynamicLocation["VertexID$6", Automatic, Center]}, {
              DynamicLocation["VertexID$2", Automatic, Center], 
              DynamicLocation["VertexID$4", Automatic, Center]}, {
              DynamicLocation["VertexID$2", Automatic, Center], 
              DynamicLocation["VertexID$5", Automatic, Center]}, {
              DynamicLocation["VertexID$2", Automatic, Center], 
              DynamicLocation["VertexID$7", Automatic, Center]}, {
              DynamicLocation["VertexID$3", Automatic, Center], 
              DynamicLocation["VertexID$5", Automatic, Center]}, {
              DynamicLocation["VertexID$3", Automatic, Center], 
              DynamicLocation["VertexID$8", Automatic, Center]}, {
              DynamicLocation["VertexID$4", Automatic, Center], 
              DynamicLocation["VertexID$9", Automatic, Center]}, {
              DynamicLocation["VertexID$5", Automatic, Center], 
              DynamicLocation["VertexID$10", Automatic, Center]}, {
              DynamicLocation["VertexID$6", Automatic, Center], 
              DynamicLocation["VertexID$7", Automatic, Center]}, {
              DynamicLocation["VertexID$6", Automatic, Center], 
              DynamicLocation["VertexID$10", Automatic, Center]}, {
              DynamicLocation["VertexID$7", Automatic, Center], 
              DynamicLocation["VertexID$8", Automatic, Center]}, {
              DynamicLocation["VertexID$8", Automatic, Center], 
              DynamicLocation["VertexID$9", Automatic, Center]}, {
              DynamicLocation["VertexID$9", Automatic, Center], 
              DynamicLocation["VertexID$10", Automatic, Center]}}]}, {
           Directive[
            Hue[0.6, 0.2, 0.8], 
            EdgeForm[
             Directive[
              GrayLevel[0], 
              Opacity[0.7]]]], 
           TagBox[
            InsetBox[
             BoxData[
              FormBox[
               PaneBox["1", Alignment -> Center, ImageMargins -> 2], 
               TraditionalForm]], {0.9510565162951535, 0.30901699437494745`}, 
             BaseStyle -> "Graphics"], "DynamicName", BoxID -> "VertexID$1"], 
           
           TagBox[
            InsetBox[
             BoxData[
              FormBox[
               PaneBox["2", Alignment -> Center, ImageMargins -> 2], 
               TraditionalForm]], {0.5877852522924732, -0.8090169943749473}, 
             BaseStyle -> "Graphics"], "DynamicName", BoxID -> "VertexID$2"], 
           
           TagBox[
            InsetBox[
             BoxData[
              FormBox[
               PaneBox["3", Alignment -> Center, ImageMargins -> 2], 
               TraditionalForm]], {-0.587785252292473, -0.8090169943749476}, 
             BaseStyle -> "Graphics"], "DynamicName", BoxID -> "VertexID$3"], 
           
           TagBox[
            InsetBox[
             BoxData[
              FormBox[
               PaneBox["4", Alignment -> Center, ImageMargins -> 2], 
               TraditionalForm]], {-0.9510565162951536, 0.30901699437494723`},
              BaseStyle -> "Graphics"], "DynamicName", BoxID -> "VertexID$4"], 
           TagBox[
            InsetBox[
             BoxData[
              FormBox[
               PaneBox["5", Alignment -> Center, ImageMargins -> 2], 
               TraditionalForm]], {-2.4492935982947064`*^-16, 1.}, BaseStyle -> 
             "Graphics"], "DynamicName", BoxID -> "VertexID$5"], 
           TagBox[
            InsetBox[
             BoxData[
              FormBox[
               PaneBox["6", Alignment -> Center, ImageMargins -> 2], 
               TraditionalForm]], {1.902113032590307, 0.6180339887498949}, 
             BaseStyle -> "Graphics"], "DynamicName", BoxID -> "VertexID$6"], 
           
           TagBox[
            InsetBox[
             BoxData[
              FormBox[
               PaneBox["7", Alignment -> Center, ImageMargins -> 2], 
               TraditionalForm]], {1.1755705045849465`, -1.6180339887498947`},
              BaseStyle -> "Graphics"], "DynamicName", BoxID -> "VertexID$7"], 
           TagBox[
            InsetBox[
             BoxData[
              FormBox[
               PaneBox["8", Alignment -> Center, ImageMargins -> 2], 
               TraditionalForm]], {-1.175570504584946, -1.6180339887498951`}, 
             BaseStyle -> "Graphics"], "DynamicName", BoxID -> "VertexID$8"], 
           
           TagBox[
            InsetBox[
             BoxData[
              FormBox[
               PaneBox["9", Alignment -> Center, ImageMargins -> 2], 
               TraditionalForm]], {-1.9021130325903073`, 0.6180339887498945}, 
             BaseStyle -> "Graphics"], "DynamicName", BoxID -> "VertexID$9"], 
           
           TagBox[
            InsetBox[
             BoxData[
              FormBox[
               PaneBox["10", Alignment -> Center, ImageMargins -> 2], 
               TraditionalForm]], {-4.898587196589413*^-16, 2.}, BaseStyle -> 
             "Graphics"], "DynamicName", BoxID -> 
            "VertexID$10"]}}], $CellContext`flag}, 
        TagBox[
         DynamicBox[GraphComputation`NetworkGraphicsBox[
          3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
          CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
           SynchronousUpdating -> False, 
           TrackedSymbols :> {$CellContext`flag}},
          
          ImageSizeCache->{{0., 109.99999999999997`}, {-59.10565162951536, 
           54.99999999999998}}],
         MouseAppearanceTag["NetworkGraphics"]],
        AllowKernelInitialization->False,
        UnsavedVariables:>{$CellContext`flag}]],
      DefaultBaseStyle->{
       "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
        Hue[0.8, 1., 0.6]},
      FrameTicks->None,
      ImageSize->110], ",", "1"}], "]"}]}], "-", 
  RowBox[{"v", ".", 
   RowBox[{"IncidenceList", "[", 
    RowBox[{
     GraphicsBox[
      NamespaceBox["NetworkGraphics",
       DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {
          Null, {{1, 3}, {1, 4}, {1, 6}, {2, 4}, {2, 5}, {2, 7}, {3, 5}, {3, 
           8}, {4, 9}, {5, 10}, {6, 7}, {6, 10}, {7, 8}, {8, 9}, {9, 10}}}, {
          ImageSize -> 110, 
           VertexCoordinates -> {{0.9510565162951535, 0.30901699437494745`}, {
            0.5877852522924732, -0.8090169943749473}, {-0.587785252292473, \
-0.8090169943749476}, {-0.9510565162951536, 
            0.30901699437494723`}, {-2.4492935982947064`*^-16, 1.}, {
            1.902113032590307, 0.6180339887498949}, {
            1.1755705045849465`, -1.6180339887498947`}, {-1.175570504584946, \
-1.6180339887498951`}, {-1.9021130325903073`, 
            0.6180339887498945}, {-4.898587196589413*^-16, 2.}}, 
           VertexShapeFunction -> {"Name"}}]], Typeset`boxes, 
        Typeset`boxes$s2d = GraphicsGroupBox[{{
           Directive[
            Opacity[0.7], 
            Hue[0.6, 0.7, 0.5]], 
           LineBox[{{
              DynamicLocation["VertexID$1", Automatic, Center], 
              DynamicLocation["VertexID$3", Automatic, Center]}, {
              DynamicLocation["VertexID$1", Automatic, Center], 
              DynamicLocation["VertexID$4", Automatic, Center]}, {
              DynamicLocation["VertexID$1", Automatic, Center], 
              DynamicLocation["VertexID$6", Automatic, Center]}, {
              DynamicLocation["VertexID$2", Automatic, Center], 
              DynamicLocation["VertexID$4", Automatic, Center]}, {
              DynamicLocation["VertexID$2", Automatic, Center], 
              DynamicLocation["VertexID$5", Automatic, Center]}, {
              DynamicLocation["VertexID$2", Automatic, Center], 
              DynamicLocation["VertexID$7", Automatic, Center]}, {
              DynamicLocation["VertexID$3", Automatic, Center], 
              DynamicLocation["VertexID$5", Automatic, Center]}, {
              DynamicLocation["VertexID$3", Automatic, Center], 
              DynamicLocation["VertexID$8", Automatic, Center]}, {
              DynamicLocation["VertexID$4", Automatic, Center], 
              DynamicLocation["VertexID$9", Automatic, Center]}, {
              DynamicLocation["VertexID$5", Automatic, Center], 
              DynamicLocation["VertexID$10", Automatic, Center]}, {
              DynamicLocation["VertexID$6", Automatic, Center], 
              DynamicLocation["VertexID$7", Automatic, Center]}, {
              DynamicLocation["VertexID$6", Automatic, Center], 
              DynamicLocation["VertexID$10", Automatic, Center]}, {
              DynamicLocation["VertexID$7", Automatic, Center], 
              DynamicLocation["VertexID$8", Automatic, Center]}, {
              DynamicLocation["VertexID$8", Automatic, Center], 
              DynamicLocation["VertexID$9", Automatic, Center]}, {
              DynamicLocation["VertexID$9", Automatic, Center], 
              DynamicLocation["VertexID$10", Automatic, Center]}}]}, {
           Directive[
            Hue[0.6, 0.2, 0.8], 
            EdgeForm[
             Directive[
              GrayLevel[0], 
              Opacity[0.7]]]], 
           TagBox[
            InsetBox[
             BoxData[
              FormBox[
               PaneBox["1", Alignment -> Center, ImageMargins -> 2], 
               TraditionalForm]], {0.9510565162951535, 0.30901699437494745`}, 
             BaseStyle -> "Graphics"], "DynamicName", BoxID -> "VertexID$1"], 
           
           TagBox[
            InsetBox[
             BoxData[
              FormBox[
               PaneBox["2", Alignment -> Center, ImageMargins -> 2], 
               TraditionalForm]], {0.5877852522924732, -0.8090169943749473}, 
             BaseStyle -> "Graphics"], "DynamicName", BoxID -> "VertexID$2"], 
           
           TagBox[
            InsetBox[
             BoxData[
              FormBox[
               PaneBox["3", Alignment -> Center, ImageMargins -> 2], 
               TraditionalForm]], {-0.587785252292473, -0.8090169943749476}, 
             BaseStyle -> "Graphics"], "DynamicName", BoxID -> "VertexID$3"], 
           
           TagBox[
            InsetBox[
             BoxData[
              FormBox[
               PaneBox["4", Alignment -> Center, ImageMargins -> 2], 
               TraditionalForm]], {-0.9510565162951536, 0.30901699437494723`},
              BaseStyle -> "Graphics"], "DynamicName", BoxID -> "VertexID$4"], 
           TagBox[
            InsetBox[
             BoxData[
              FormBox[
               PaneBox["5", Alignment -> Center, ImageMargins -> 2], 
               TraditionalForm]], {-2.4492935982947064`*^-16, 1.}, BaseStyle -> 
             "Graphics"], "DynamicName", BoxID -> "VertexID$5"], 
           TagBox[
            InsetBox[
             BoxData[
              FormBox[
               PaneBox["6", Alignment -> Center, ImageMargins -> 2], 
               TraditionalForm]], {1.902113032590307, 0.6180339887498949}, 
             BaseStyle -> "Graphics"], "DynamicName", BoxID -> "VertexID$6"], 
           
           TagBox[
            InsetBox[
             BoxData[
              FormBox[
               PaneBox["7", Alignment -> Center, ImageMargins -> 2], 
               TraditionalForm]], {1.1755705045849465`, -1.6180339887498947`},
              BaseStyle -> "Graphics"], "DynamicName", BoxID -> "VertexID$7"], 
           TagBox[
            InsetBox[
             BoxData[
              FormBox[
               PaneBox["8", Alignment -> Center, ImageMargins -> 2], 
               TraditionalForm]], {-1.175570504584946, -1.6180339887498951`}, 
             BaseStyle -> "Graphics"], "DynamicName", BoxID -> "VertexID$8"], 
           
           TagBox[
            InsetBox[
             BoxData[
              FormBox[
               PaneBox["9", Alignment -> Center, ImageMargins -> 2], 
               TraditionalForm]], {-1.9021130325903073`, 0.6180339887498945}, 
             BaseStyle -> "Graphics"], "DynamicName", BoxID -> "VertexID$9"], 
           
           TagBox[
            InsetBox[
             BoxData[
              FormBox[
               PaneBox["10", Alignment -> Center, ImageMargins -> 2], 
               TraditionalForm]], {-4.898587196589413*^-16, 2.}, BaseStyle -> 
             "Graphics"], "DynamicName", BoxID -> 
            "VertexID$10"]}}], $CellContext`flag}, 
        TagBox[
         DynamicBox[GraphComputation`NetworkGraphicsBox[
          3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
          CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
           SynchronousUpdating -> False, 
           TrackedSymbols :> {$CellContext`flag}},
          
          ImageSizeCache->{{0., 109.99999999999997`}, {-59.10565162951536, 
           54.99999999999998}}],
         MouseAppearanceTag["NetworkGraphics"]],
        AllowKernelInitialization->False,
        UnsavedVariables:>{$CellContext`flag}]],
      DefaultBaseStyle->{
       "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
        Hue[0.8, 1., 0.6]},
      FrameTicks->None,
      ImageSize->110], ",", "1"}], "]"}]}]}]], "Input",
 CellChangeTimes->{
  3.8665634996228*^9},ExpressionUUID->"3b39cec0-dec3-429c-aa67-d454acf67f4a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"u", ".", 
    RowBox[{"IncidenceList", "[", 
     RowBox[{
      GraphicsBox[
       NamespaceBox["NetworkGraphics",
        DynamicModuleBox[{Typeset`graph = HoldComplete[
          
          Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {
           Null, {{1, 3}, {1, 4}, {1, 6}, {2, 4}, {2, 5}, {2, 7}, {3, 5}, {3, 
            8}, {4, 9}, {5, 10}, {6, 7}, {6, 10}, {7, 8}, {8, 9}, {9, 10}}}, {
           ImageSize -> 110, 
            VertexCoordinates -> {{0.9510565162951535, 
             0.30901699437494745`}, {
             0.5877852522924732, -0.8090169943749473}, {-0.587785252292473, \
-0.8090169943749476}, {-0.9510565162951536, 
             0.30901699437494723`}, {-2.4492935982947064`*^-16, 1.}, {
             1.902113032590307, 0.6180339887498949}, {
             1.1755705045849465`, -1.6180339887498947`}, {-1.175570504584946, \
-1.6180339887498951`}, {-1.9021130325903073`, 
             0.6180339887498945}, {-4.898587196589413*^-16, 2.}}, 
            VertexShapeFunction -> {"Name"}}]], Typeset`boxes, 
         Typeset`boxes$s2d = GraphicsGroupBox[{{
            Directive[
             Opacity[0.7], 
             Hue[0.6, 0.7, 0.5]], 
            LineBox[{{
               DynamicLocation["VertexID$1", Automatic, Center], 
               DynamicLocation["VertexID$3", Automatic, Center]}, {
               DynamicLocation["VertexID$1", Automatic, Center], 
               DynamicLocation["VertexID$4", Automatic, Center]}, {
               DynamicLocation["VertexID$1", Automatic, Center], 
               DynamicLocation["VertexID$6", Automatic, Center]}, {
               DynamicLocation["VertexID$2", Automatic, Center], 
               DynamicLocation["VertexID$4", Automatic, Center]}, {
               DynamicLocation["VertexID$2", Automatic, Center], 
               DynamicLocation["VertexID$5", Automatic, Center]}, {
               DynamicLocation["VertexID$2", Automatic, Center], 
               DynamicLocation["VertexID$7", Automatic, Center]}, {
               DynamicLocation["VertexID$3", Automatic, Center], 
               DynamicLocation["VertexID$5", Automatic, Center]}, {
               DynamicLocation["VertexID$3", Automatic, Center], 
               DynamicLocation["VertexID$8", Automatic, Center]}, {
               DynamicLocation["VertexID$4", Automatic, Center], 
               DynamicLocation["VertexID$9", Automatic, Center]}, {
               DynamicLocation["VertexID$5", Automatic, Center], 
               DynamicLocation["VertexID$10", Automatic, Center]}, {
               DynamicLocation["VertexID$6", Automatic, Center], 
               DynamicLocation["VertexID$7", Automatic, Center]}, {
               DynamicLocation["VertexID$6", Automatic, Center], 
               DynamicLocation["VertexID$10", Automatic, Center]}, {
               DynamicLocation["VertexID$7", Automatic, Center], 
               DynamicLocation["VertexID$8", Automatic, Center]}, {
               DynamicLocation["VertexID$8", Automatic, Center], 
               DynamicLocation["VertexID$9", Automatic, Center]}, {
               DynamicLocation["VertexID$9", Automatic, Center], 
               DynamicLocation["VertexID$10", Automatic, Center]}}]}, {
            Directive[
             Hue[0.6, 0.2, 0.8], 
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.7]]]], 
            TagBox[
             InsetBox[
              BoxData[
               FormBox[
                PaneBox["1", Alignment -> Center, ImageMargins -> 2], 
                TraditionalForm]], {0.9510565162951535, 0.30901699437494745`},
               BaseStyle -> "Graphics"], "DynamicName", BoxID -> 
             "VertexID$1"], 
            TagBox[
             InsetBox[
              BoxData[
               FormBox[
                PaneBox["2", Alignment -> Center, ImageMargins -> 2], 
                TraditionalForm]], {0.5877852522924732, -0.8090169943749473}, 
              BaseStyle -> "Graphics"], "DynamicName", BoxID -> "VertexID$2"], 
            TagBox[
             InsetBox[
              BoxData[
               FormBox[
                PaneBox["3", Alignment -> Center, ImageMargins -> 2], 
                TraditionalForm]], {-0.587785252292473, -0.8090169943749476}, 
              BaseStyle -> "Graphics"], "DynamicName", BoxID -> "VertexID$3"], 
            TagBox[
             InsetBox[
              BoxData[
               FormBox[
                PaneBox["4", Alignment -> Center, ImageMargins -> 2], 
                TraditionalForm]], {-0.9510565162951536, 
              0.30901699437494723`}, BaseStyle -> "Graphics"], "DynamicName", 
             BoxID -> "VertexID$4"], 
            TagBox[
             InsetBox[
              BoxData[
               FormBox[
                PaneBox["5", Alignment -> Center, ImageMargins -> 2], 
                TraditionalForm]], {-2.4492935982947064`*^-16, 1.}, BaseStyle -> 
              "Graphics"], "DynamicName", BoxID -> "VertexID$5"], 
            TagBox[
             InsetBox[
              BoxData[
               FormBox[
                PaneBox["6", Alignment -> Center, ImageMargins -> 2], 
                TraditionalForm]], {1.902113032590307, 0.6180339887498949}, 
              BaseStyle -> "Graphics"], "DynamicName", BoxID -> "VertexID$6"], 
            TagBox[
             InsetBox[
              BoxData[
               FormBox[
                PaneBox["7", Alignment -> Center, ImageMargins -> 2], 
                TraditionalForm]], {
              1.1755705045849465`, -1.6180339887498947`}, BaseStyle -> 
              "Graphics"], "DynamicName", BoxID -> "VertexID$7"], 
            TagBox[
             InsetBox[
              BoxData[
               FormBox[
                PaneBox["8", Alignment -> Center, ImageMargins -> 2], 
                TraditionalForm]], {-1.175570504584946, -1.6180339887498951`},
               BaseStyle -> "Graphics"], "DynamicName", BoxID -> 
             "VertexID$8"], 
            TagBox[
             InsetBox[
              BoxData[
               FormBox[
                PaneBox["9", Alignment -> Center, ImageMargins -> 2], 
                TraditionalForm]], {-1.9021130325903073`, 0.6180339887498945},
               BaseStyle -> "Graphics"], "DynamicName", BoxID -> 
             "VertexID$9"], 
            TagBox[
             InsetBox[
              BoxData[
               FormBox[
                PaneBox["10", Alignment -> Center, ImageMargins -> 2], 
                TraditionalForm]], {-4.898587196589413*^-16, 2.}, BaseStyle -> 
              "Graphics"], "DynamicName", BoxID -> 
             "VertexID$10"]}}], $CellContext`flag}, 
         TagBox[
          
          DynamicBox[GraphComputation`NetworkGraphicsBox[
           3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
           CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
            SynchronousUpdating -> False, 
            TrackedSymbols :> {$CellContext`flag}},
           
           ImageSizeCache->{{0., 109.99999999999997`}, {-59.10565162951536, 
            54.99999999999998}}],
          MouseAppearanceTag["NetworkGraphics"]],
         AllowKernelInitialization->False,
         UnsavedVariables:>{$CellContext`flag}]],
       DefaultBaseStyle->{
        "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
         Hue[0.8, 1., 0.6]},
       FrameTicks->None,
       ImageSize->110], ",", "1"}], "]"}]}], "-", 
   RowBox[{"v", ".", 
    RowBox[{"IncidenceList", "[", 
     RowBox[{
      GraphicsBox[
       NamespaceBox["NetworkGraphics",
        DynamicModuleBox[{Typeset`graph = HoldComplete[
          
          Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {
           Null, {{1, 3}, {1, 4}, {1, 6}, {2, 4}, {2, 5}, {2, 7}, {3, 5}, {3, 
            8}, {4, 9}, {5, 10}, {6, 7}, {6, 10}, {7, 8}, {8, 9}, {9, 10}}}, {
           ImageSize -> 110, 
            VertexCoordinates -> {{0.9510565162951535, 
             0.30901699437494745`}, {
             0.5877852522924732, -0.8090169943749473}, {-0.587785252292473, \
-0.8090169943749476}, {-0.9510565162951536, 
             0.30901699437494723`}, {-2.4492935982947064`*^-16, 1.}, {
             1.902113032590307, 0.6180339887498949}, {
             1.1755705045849465`, -1.6180339887498947`}, {-1.175570504584946, \
-1.6180339887498951`}, {-1.9021130325903073`, 
             0.6180339887498945}, {-4.898587196589413*^-16, 2.}}, 
            VertexShapeFunction -> {"Name"}}]], Typeset`boxes, 
         Typeset`boxes$s2d = GraphicsGroupBox[{{
            Directive[
             Opacity[0.7], 
             Hue[0.6, 0.7, 0.5]], 
            LineBox[{{
               DynamicLocation["VertexID$1", Automatic, Center], 
               DynamicLocation["VertexID$3", Automatic, Center]}, {
               DynamicLocation["VertexID$1", Automatic, Center], 
               DynamicLocation["VertexID$4", Automatic, Center]}, {
               DynamicLocation["VertexID$1", Automatic, Center], 
               DynamicLocation["VertexID$6", Automatic, Center]}, {
               DynamicLocation["VertexID$2", Automatic, Center], 
               DynamicLocation["VertexID$4", Automatic, Center]}, {
               DynamicLocation["VertexID$2", Automatic, Center], 
               DynamicLocation["VertexID$5", Automatic, Center]}, {
               DynamicLocation["VertexID$2", Automatic, Center], 
               DynamicLocation["VertexID$7", Automatic, Center]}, {
               DynamicLocation["VertexID$3", Automatic, Center], 
               DynamicLocation["VertexID$5", Automatic, Center]}, {
               DynamicLocation["VertexID$3", Automatic, Center], 
               DynamicLocation["VertexID$8", Automatic, Center]}, {
               DynamicLocation["VertexID$4", Automatic, Center], 
               DynamicLocation["VertexID$9", Automatic, Center]}, {
               DynamicLocation["VertexID$5", Automatic, Center], 
               DynamicLocation["VertexID$10", Automatic, Center]}, {
               DynamicLocation["VertexID$6", Automatic, Center], 
               DynamicLocation["VertexID$7", Automatic, Center]}, {
               DynamicLocation["VertexID$6", Automatic, Center], 
               DynamicLocation["VertexID$10", Automatic, Center]}, {
               DynamicLocation["VertexID$7", Automatic, Center], 
               DynamicLocation["VertexID$8", Automatic, Center]}, {
               DynamicLocation["VertexID$8", Automatic, Center], 
               DynamicLocation["VertexID$9", Automatic, Center]}, {
               DynamicLocation["VertexID$9", Automatic, Center], 
               DynamicLocation["VertexID$10", Automatic, Center]}}]}, {
            Directive[
             Hue[0.6, 0.2, 0.8], 
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.7]]]], 
            TagBox[
             InsetBox[
              BoxData[
               FormBox[
                PaneBox["1", Alignment -> Center, ImageMargins -> 2], 
                TraditionalForm]], {0.9510565162951535, 0.30901699437494745`},
               BaseStyle -> "Graphics"], "DynamicName", BoxID -> 
             "VertexID$1"], 
            TagBox[
             InsetBox[
              BoxData[
               FormBox[
                PaneBox["2", Alignment -> Center, ImageMargins -> 2], 
                TraditionalForm]], {0.5877852522924732, -0.8090169943749473}, 
              BaseStyle -> "Graphics"], "DynamicName", BoxID -> "VertexID$2"], 
            TagBox[
             InsetBox[
              BoxData[
               FormBox[
                PaneBox["3", Alignment -> Center, ImageMargins -> 2], 
                TraditionalForm]], {-0.587785252292473, -0.8090169943749476}, 
              BaseStyle -> "Graphics"], "DynamicName", BoxID -> "VertexID$3"], 
            TagBox[
             InsetBox[
              BoxData[
               FormBox[
                PaneBox["4", Alignment -> Center, ImageMargins -> 2], 
                TraditionalForm]], {-0.9510565162951536, 
              0.30901699437494723`}, BaseStyle -> "Graphics"], "DynamicName", 
             BoxID -> "VertexID$4"], 
            TagBox[
             InsetBox[
              BoxData[
               FormBox[
                PaneBox["5", Alignment -> Center, ImageMargins -> 2], 
                TraditionalForm]], {-2.4492935982947064`*^-16, 1.}, BaseStyle -> 
              "Graphics"], "DynamicName", BoxID -> "VertexID$5"], 
            TagBox[
             InsetBox[
              BoxData[
               FormBox[
                PaneBox["6", Alignment -> Center, ImageMargins -> 2], 
                TraditionalForm]], {1.902113032590307, 0.6180339887498949}, 
              BaseStyle -> "Graphics"], "DynamicName", BoxID -> "VertexID$6"], 
            TagBox[
             InsetBox[
              BoxData[
               FormBox[
                PaneBox["7", Alignment -> Center, ImageMargins -> 2], 
                TraditionalForm]], {
              1.1755705045849465`, -1.6180339887498947`}, BaseStyle -> 
              "Graphics"], "DynamicName", BoxID -> "VertexID$7"], 
            TagBox[
             InsetBox[
              BoxData[
               FormBox[
                PaneBox["8", Alignment -> Center, ImageMargins -> 2], 
                TraditionalForm]], {-1.175570504584946, -1.6180339887498951`},
               BaseStyle -> "Graphics"], "DynamicName", BoxID -> 
             "VertexID$8"], 
            TagBox[
             InsetBox[
              BoxData[
               FormBox[
                PaneBox["9", Alignment -> Center, ImageMargins -> 2], 
                TraditionalForm]], {-1.9021130325903073`, 0.6180339887498945},
               BaseStyle -> "Graphics"], "DynamicName", BoxID -> 
             "VertexID$9"], 
            TagBox[
             InsetBox[
              BoxData[
               FormBox[
                PaneBox["10", Alignment -> Center, ImageMargins -> 2], 
                TraditionalForm]], {-4.898587196589413*^-16, 2.}, BaseStyle -> 
              "Graphics"], "DynamicName", BoxID -> 
             "VertexID$10"]}}], $CellContext`flag}, 
         TagBox[
          
          DynamicBox[GraphComputation`NetworkGraphicsBox[
           3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
           CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
            SynchronousUpdating -> False, 
            TrackedSymbols :> {$CellContext`flag}},
           
           ImageSizeCache->{{0., 109.99999999999997`}, {-59.10565162951536, 
            54.99999999999998}}],
          MouseAppearanceTag["NetworkGraphics"]],
         AllowKernelInitialization->False,
         UnsavedVariables:>{$CellContext`flag}]],
       DefaultBaseStyle->{
        "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
         Hue[0.8, 1., 0.6]},
       FrameTicks->None,
       ImageSize->110], ",", "1"}], "]"}]}]}], "==", "0"}]], "Input",
 CellChangeTimes->{3.8665635086191587`*^9},
 CellLabel->
  "In[174]:=",ExpressionUUID->"4636ff98-4ede-4452-b40d-a367207cef6a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"a", " ", 
    RowBox[{"(", 
     RowBox[{"1", "\[UndirectedEdge]", "3"}], ")"}]}], "-", 
   RowBox[{"d", " ", 
    RowBox[{"(", 
     RowBox[{"1", "\[UndirectedEdge]", "3"}], ")"}]}], "+", 
   RowBox[{"b", " ", 
    RowBox[{"(", 
     RowBox[{"1", "\[UndirectedEdge]", "4"}], ")"}]}], "-", 
   RowBox[{"e", " ", 
    RowBox[{"(", 
     RowBox[{"1", "\[UndirectedEdge]", "4"}], ")"}]}], "+", 
   RowBox[{"c", " ", 
    RowBox[{"(", 
     RowBox[{"1", "\[UndirectedEdge]", "6"}], ")"}]}], "-", 
   RowBox[{"f", " ", 
    RowBox[{"(", 
     RowBox[{"1", "\[UndirectedEdge]", "6"}], ")"}]}]}], "\[Equal]", 
  "0"}]], "Output",
 CellChangeTimes->{3.8665635093552094`*^9},
 CellLabel->
  "Out[174]=",ExpressionUUID->"2af0561a-6002-47f0-b9bd-29d677b5c27d"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"u", "=", 
  RowBox[{"{", 
   RowBox[{"a", ",", "b", ",", "c", ",", "g"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.866563514199621*^9, 
  3.866563521556371*^9}},ExpressionUUID->"893a9d40-63d4-4f00-8876-\
3c6e2b2894dc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Position", "[", 
  RowBox[{
   RowBox[{"EdgeList", "[", 
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {
         Null, {{1, 3}, {1, 4}, {1, 6}, {2, 4}, {2, 5}, {2, 7}, {3, 5}, {3, 
          8}, {4, 9}, {5, 10}, {6, 7}, {6, 10}, {7, 8}, {8, 9}, {9, 10}}}, {
         ImageSize -> 110, 
          VertexCoordinates -> {{0.9510565162951535, 0.30901699437494745`}, {
           0.5877852522924732, -0.8090169943749473}, {-0.587785252292473, \
-0.8090169943749476}, {-0.9510565162951536, 
           0.30901699437494723`}, {-2.4492935982947064`*^-16, 1.}, {
           1.902113032590307, 0.6180339887498949}, {
           1.1755705045849465`, -1.6180339887498947`}, {-1.175570504584946, \
-1.6180339887498951`}, {-1.9021130325903073`, 
           0.6180339887498945}, {-4.898587196589413*^-16, 2.}}, 
          VertexShapeFunction -> {"Name"}}]], Typeset`boxes, 
       Typeset`boxes$s2d = GraphicsGroupBox[{{
          Directive[
           Opacity[0.7], 
           Hue[0.6, 0.7, 0.5]], 
          LineBox[{{
             DynamicLocation["VertexID$1", Automatic, Center], 
             DynamicLocation["VertexID$3", Automatic, Center]}, {
             DynamicLocation["VertexID$1", Automatic, Center], 
             DynamicLocation["VertexID$4", Automatic, Center]}, {
             DynamicLocation["VertexID$1", Automatic, Center], 
             DynamicLocation["VertexID$6", Automatic, Center]}, {
             DynamicLocation["VertexID$2", Automatic, Center], 
             DynamicLocation["VertexID$4", Automatic, Center]}, {
             DynamicLocation["VertexID$2", Automatic, Center], 
             DynamicLocation["VertexID$5", Automatic, Center]}, {
             DynamicLocation["VertexID$2", Automatic, Center], 
             DynamicLocation["VertexID$7", Automatic, Center]}, {
             DynamicLocation["VertexID$3", Automatic, Center], 
             DynamicLocation["VertexID$5", Automatic, Center]}, {
             DynamicLocation["VertexID$3", Automatic, Center], 
             DynamicLocation["VertexID$8", Automatic, Center]}, {
             DynamicLocation["VertexID$4", Automatic, Center], 
             DynamicLocation["VertexID$9", Automatic, Center]}, {
             DynamicLocation["VertexID$5", Automatic, Center], 
             DynamicLocation["VertexID$10", Automatic, Center]}, {
             DynamicLocation["VertexID$6", Automatic, Center], 
             DynamicLocation["VertexID$7", Automatic, Center]}, {
             DynamicLocation["VertexID$6", Automatic, Center], 
             DynamicLocation["VertexID$10", Automatic, Center]}, {
             DynamicLocation["VertexID$7", Automatic, Center], 
             DynamicLocation["VertexID$8", Automatic, Center]}, {
             DynamicLocation["VertexID$8", Automatic, Center], 
             DynamicLocation["VertexID$9", Automatic, Center]}, {
             DynamicLocation["VertexID$9", Automatic, Center], 
             DynamicLocation["VertexID$10", Automatic, Center]}}]}, {
          Directive[
           Hue[0.6, 0.2, 0.8], 
           EdgeForm[
            Directive[
             GrayLevel[0], 
             Opacity[0.7]]]], 
          TagBox[
           InsetBox[
            BoxData[
             FormBox[
              PaneBox["1", Alignment -> Center, ImageMargins -> 2], 
              TraditionalForm]], {0.9510565162951535, 0.30901699437494745`}, 
            BaseStyle -> "Graphics"], "DynamicName", BoxID -> "VertexID$1"], 
          TagBox[
           InsetBox[
            BoxData[
             FormBox[
              PaneBox["2", Alignment -> Center, ImageMargins -> 2], 
              TraditionalForm]], {0.5877852522924732, -0.8090169943749473}, 
            BaseStyle -> "Graphics"], "DynamicName", BoxID -> "VertexID$2"], 
          TagBox[
           InsetBox[
            BoxData[
             FormBox[
              PaneBox["3", Alignment -> Center, ImageMargins -> 2], 
              TraditionalForm]], {-0.587785252292473, -0.8090169943749476}, 
            BaseStyle -> "Graphics"], "DynamicName", BoxID -> "VertexID$3"], 
          TagBox[
           InsetBox[
            BoxData[
             FormBox[
              PaneBox["4", Alignment -> Center, ImageMargins -> 2], 
              TraditionalForm]], {-0.9510565162951536, 0.30901699437494723`}, 
            BaseStyle -> "Graphics"], "DynamicName", BoxID -> "VertexID$4"], 
          TagBox[
           InsetBox[
            BoxData[
             FormBox[
              PaneBox["5", Alignment -> Center, ImageMargins -> 2], 
              TraditionalForm]], {-2.4492935982947064`*^-16, 1.}, BaseStyle -> 
            "Graphics"], "DynamicName", BoxID -> "VertexID$5"], 
          TagBox[
           InsetBox[
            BoxData[
             FormBox[
              PaneBox["6", Alignment -> Center, ImageMargins -> 2], 
              TraditionalForm]], {1.902113032590307, 0.6180339887498949}, 
            BaseStyle -> "Graphics"], "DynamicName", BoxID -> "VertexID$6"], 
          TagBox[
           InsetBox[
            BoxData[
             FormBox[
              PaneBox["7", Alignment -> Center, ImageMargins -> 2], 
              TraditionalForm]], {1.1755705045849465`, -1.6180339887498947`}, 
            BaseStyle -> "Graphics"], "DynamicName", BoxID -> "VertexID$7"], 
          TagBox[
           InsetBox[
            BoxData[
             FormBox[
              PaneBox["8", Alignment -> Center, ImageMargins -> 2], 
              TraditionalForm]], {-1.175570504584946, -1.6180339887498951`}, 
            BaseStyle -> "Graphics"], "DynamicName", BoxID -> "VertexID$8"], 
          TagBox[
           InsetBox[
            BoxData[
             FormBox[
              PaneBox["9", Alignment -> Center, ImageMargins -> 2], 
              TraditionalForm]], {-1.9021130325903073`, 0.6180339887498945}, 
            BaseStyle -> "Graphics"], "DynamicName", BoxID -> "VertexID$9"], 
          TagBox[
           InsetBox[
            BoxData[
             FormBox[
              PaneBox["10", Alignment -> Center, ImageMargins -> 2], 
              TraditionalForm]], {-4.898587196589413*^-16, 2.}, BaseStyle -> 
            "Graphics"], "DynamicName", BoxID -> 
           "VertexID$10"]}}], $CellContext`flag}, 
       TagBox[
        DynamicBox[GraphComputation`NetworkGraphicsBox[
         3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
         CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
          SynchronousUpdating -> False, TrackedSymbols :> {$CellContext`flag}},
         ImageSizeCache->{{0., 109.99999999999997`}, {-59.10565162951536, 
          54.99999999999998}}],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False,
       UnsavedVariables:>{$CellContext`flag}]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FrameTicks->None,
     ImageSize->110], "]"}], ",", 
   RowBox[{"1", "\[UndirectedEdge]", "_"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.866563547274105*^9, 3.8665635836851273`*^9}},
 CellLabel->
  "In[176]:=",ExpressionUUID->"9376d498-7e80-442f-814c-69e8d30b9c69"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"{", "2", "}"}], ",", 
   RowBox[{"{", "3", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8665635757473154`*^9, 3.8665635841235*^9}},
 CellLabel->
  "Out[176]=",ExpressionUUID->"0859426e-9a97-42f7-9073-fd9612189d39"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Extract", "[", 
  RowBox[{
   RowBox[{"EdgeList", "[", 
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {
         Null, {{1, 3}, {1, 4}, {1, 6}, {2, 4}, {2, 5}, {2, 7}, {3, 5}, {3, 
          8}, {4, 9}, {5, 10}, {6, 7}, {6, 10}, {7, 8}, {8, 9}, {9, 10}}}, {
         ImageSize -> 110, 
          VertexCoordinates -> {{0.9510565162951535, 0.30901699437494745`}, {
           0.5877852522924732, -0.8090169943749473}, {-0.587785252292473, \
-0.8090169943749476}, {-0.9510565162951536, 
           0.30901699437494723`}, {-2.4492935982947064`*^-16, 1.}, {
           1.902113032590307, 0.6180339887498949}, {
           1.1755705045849465`, -1.6180339887498947`}, {-1.175570504584946, \
-1.6180339887498951`}, {-1.9021130325903073`, 
           0.6180339887498945}, {-4.898587196589413*^-16, 2.}}, 
          VertexShapeFunction -> {"Name"}}]], Typeset`boxes, 
       Typeset`boxes$s2d = GraphicsGroupBox[{{
          Directive[
           Opacity[0.7], 
           Hue[0.6, 0.7, 0.5]], 
          LineBox[{{
             DynamicLocation["VertexID$1", Automatic, Center], 
             DynamicLocation["VertexID$3", Automatic, Center]}, {
             DynamicLocation["VertexID$1", Automatic, Center], 
             DynamicLocation["VertexID$4", Automatic, Center]}, {
             DynamicLocation["VertexID$1", Automatic, Center], 
             DynamicLocation["VertexID$6", Automatic, Center]}, {
             DynamicLocation["VertexID$2", Automatic, Center], 
             DynamicLocation["VertexID$4", Automatic, Center]}, {
             DynamicLocation["VertexID$2", Automatic, Center], 
             DynamicLocation["VertexID$5", Automatic, Center]}, {
             DynamicLocation["VertexID$2", Automatic, Center], 
             DynamicLocation["VertexID$7", Automatic, Center]}, {
             DynamicLocation["VertexID$3", Automatic, Center], 
             DynamicLocation["VertexID$5", Automatic, Center]}, {
             DynamicLocation["VertexID$3", Automatic, Center], 
             DynamicLocation["VertexID$8", Automatic, Center]}, {
             DynamicLocation["VertexID$4", Automatic, Center], 
             DynamicLocation["VertexID$9", Automatic, Center]}, {
             DynamicLocation["VertexID$5", Automatic, Center], 
             DynamicLocation["VertexID$10", Automatic, Center]}, {
             DynamicLocation["VertexID$6", Automatic, Center], 
             DynamicLocation["VertexID$7", Automatic, Center]}, {
             DynamicLocation["VertexID$6", Automatic, Center], 
             DynamicLocation["VertexID$10", Automatic, Center]}, {
             DynamicLocation["VertexID$7", Automatic, Center], 
             DynamicLocation["VertexID$8", Automatic, Center]}, {
             DynamicLocation["VertexID$8", Automatic, Center], 
             DynamicLocation["VertexID$9", Automatic, Center]}, {
             DynamicLocation["VertexID$9", Automatic, Center], 
             DynamicLocation["VertexID$10", Automatic, Center]}}]}, {
          Directive[
           Hue[0.6, 0.2, 0.8], 
           EdgeForm[
            Directive[
             GrayLevel[0], 
             Opacity[0.7]]]], 
          TagBox[
           InsetBox[
            BoxData[
             FormBox[
              PaneBox["1", Alignment -> Center, ImageMargins -> 2], 
              TraditionalForm]], {0.9510565162951535, 0.30901699437494745`}, 
            BaseStyle -> "Graphics"], "DynamicName", BoxID -> "VertexID$1"], 
          TagBox[
           InsetBox[
            BoxData[
             FormBox[
              PaneBox["2", Alignment -> Center, ImageMargins -> 2], 
              TraditionalForm]], {0.5877852522924732, -0.8090169943749473}, 
            BaseStyle -> "Graphics"], "DynamicName", BoxID -> "VertexID$2"], 
          TagBox[
           InsetBox[
            BoxData[
             FormBox[
              PaneBox["3", Alignment -> Center, ImageMargins -> 2], 
              TraditionalForm]], {-0.587785252292473, -0.8090169943749476}, 
            BaseStyle -> "Graphics"], "DynamicName", BoxID -> "VertexID$3"], 
          TagBox[
           InsetBox[
            BoxData[
             FormBox[
              PaneBox["4", Alignment -> Center, ImageMargins -> 2], 
              TraditionalForm]], {-0.9510565162951536, 0.30901699437494723`}, 
            BaseStyle -> "Graphics"], "DynamicName", BoxID -> "VertexID$4"], 
          TagBox[
           InsetBox[
            BoxData[
             FormBox[
              PaneBox["5", Alignment -> Center, ImageMargins -> 2], 
              TraditionalForm]], {-2.4492935982947064`*^-16, 1.}, BaseStyle -> 
            "Graphics"], "DynamicName", BoxID -> "VertexID$5"], 
          TagBox[
           InsetBox[
            BoxData[
             FormBox[
              PaneBox["6", Alignment -> Center, ImageMargins -> 2], 
              TraditionalForm]], {1.902113032590307, 0.6180339887498949}, 
            BaseStyle -> "Graphics"], "DynamicName", BoxID -> "VertexID$6"], 
          TagBox[
           InsetBox[
            BoxData[
             FormBox[
              PaneBox["7", Alignment -> Center, ImageMargins -> 2], 
              TraditionalForm]], {1.1755705045849465`, -1.6180339887498947`}, 
            BaseStyle -> "Graphics"], "DynamicName", BoxID -> "VertexID$7"], 
          TagBox[
           InsetBox[
            BoxData[
             FormBox[
              PaneBox["8", Alignment -> Center, ImageMargins -> 2], 
              TraditionalForm]], {-1.175570504584946, -1.6180339887498951`}, 
            BaseStyle -> "Graphics"], "DynamicName", BoxID -> "VertexID$8"], 
          TagBox[
           InsetBox[
            BoxData[
             FormBox[
              PaneBox["9", Alignment -> Center, ImageMargins -> 2], 
              TraditionalForm]], {-1.9021130325903073`, 0.6180339887498945}, 
            BaseStyle -> "Graphics"], "DynamicName", BoxID -> "VertexID$9"], 
          TagBox[
           InsetBox[
            BoxData[
             FormBox[
              PaneBox["10", Alignment -> Center, ImageMargins -> 2], 
              TraditionalForm]], {-4.898587196589413*^-16, 2.}, BaseStyle -> 
            "Graphics"], "DynamicName", BoxID -> 
           "VertexID$10"]}}], $CellContext`flag}, 
       TagBox[
        DynamicBox[GraphComputation`NetworkGraphicsBox[
         3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
         CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
          SynchronousUpdating -> False, TrackedSymbols :> {$CellContext`flag}},
         ImageSizeCache->{{0., 109.99999999999997`}, {-59.10565162951536, 
          54.99999999999998}}],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False,
       UnsavedVariables:>{$CellContext`flag}]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FrameTicks->None,
     ImageSize->110], "]"}], ",", 
   RowBox[{"Position", "[", 
    RowBox[{
     RowBox[{"EdgeList", "[", 
      GraphicsBox[
       NamespaceBox["NetworkGraphics",
        DynamicModuleBox[{Typeset`graph = HoldComplete[
          
          Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {
           Null, {{1, 3}, {1, 4}, {1, 6}, {2, 4}, {2, 5}, {2, 7}, {3, 5}, {3, 
            8}, {4, 9}, {5, 10}, {6, 7}, {6, 10}, {7, 8}, {8, 9}, {9, 10}}}, {
           ImageSize -> 110, 
            VertexCoordinates -> {{0.9510565162951535, 
             0.30901699437494745`}, {
             0.5877852522924732, -0.8090169943749473}, {-0.587785252292473, \
-0.8090169943749476}, {-0.9510565162951536, 
             0.30901699437494723`}, {-2.4492935982947064`*^-16, 1.}, {
             1.902113032590307, 0.6180339887498949}, {
             1.1755705045849465`, -1.6180339887498947`}, {-1.175570504584946, \
-1.6180339887498951`}, {-1.9021130325903073`, 
             0.6180339887498945}, {-4.898587196589413*^-16, 2.}}, 
            VertexShapeFunction -> {"Name"}}]], Typeset`boxes, 
         Typeset`boxes$s2d = GraphicsGroupBox[{{
            Directive[
             Opacity[0.7], 
             Hue[0.6, 0.7, 0.5]], 
            LineBox[{{
               DynamicLocation["VertexID$1", Automatic, Center], 
               DynamicLocation["VertexID$3", Automatic, Center]}, {
               DynamicLocation["VertexID$1", Automatic, Center], 
               DynamicLocation["VertexID$4", Automatic, Center]}, {
               DynamicLocation["VertexID$1", Automatic, Center], 
               DynamicLocation["VertexID$6", Automatic, Center]}, {
               DynamicLocation["VertexID$2", Automatic, Center], 
               DynamicLocation["VertexID$4", Automatic, Center]}, {
               DynamicLocation["VertexID$2", Automatic, Center], 
               DynamicLocation["VertexID$5", Automatic, Center]}, {
               DynamicLocation["VertexID$2", Automatic, Center], 
               DynamicLocation["VertexID$7", Automatic, Center]}, {
               DynamicLocation["VertexID$3", Automatic, Center], 
               DynamicLocation["VertexID$5", Automatic, Center]}, {
               DynamicLocation["VertexID$3", Automatic, Center], 
               DynamicLocation["VertexID$8", Automatic, Center]}, {
               DynamicLocation["VertexID$4", Automatic, Center], 
               DynamicLocation["VertexID$9", Automatic, Center]}, {
               DynamicLocation["VertexID$5", Automatic, Center], 
               DynamicLocation["VertexID$10", Automatic, Center]}, {
               DynamicLocation["VertexID$6", Automatic, Center], 
               DynamicLocation["VertexID$7", Automatic, Center]}, {
               DynamicLocation["VertexID$6", Automatic, Center], 
               DynamicLocation["VertexID$10", Automatic, Center]}, {
               DynamicLocation["VertexID$7", Automatic, Center], 
               DynamicLocation["VertexID$8", Automatic, Center]}, {
               DynamicLocation["VertexID$8", Automatic, Center], 
               DynamicLocation["VertexID$9", Automatic, Center]}, {
               DynamicLocation["VertexID$9", Automatic, Center], 
               DynamicLocation["VertexID$10", Automatic, Center]}}]}, {
            Directive[
             Hue[0.6, 0.2, 0.8], 
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.7]]]], 
            TagBox[
             InsetBox[
              BoxData[
               FormBox[
                PaneBox["1", Alignment -> Center, ImageMargins -> 2], 
                TraditionalForm]], {0.9510565162951535, 0.30901699437494745`},
               BaseStyle -> "Graphics"], "DynamicName", BoxID -> 
             "VertexID$1"], 
            TagBox[
             InsetBox[
              BoxData[
               FormBox[
                PaneBox["2", Alignment -> Center, ImageMargins -> 2], 
                TraditionalForm]], {0.5877852522924732, -0.8090169943749473}, 
              BaseStyle -> "Graphics"], "DynamicName", BoxID -> "VertexID$2"], 
            TagBox[
             InsetBox[
              BoxData[
               FormBox[
                PaneBox["3", Alignment -> Center, ImageMargins -> 2], 
                TraditionalForm]], {-0.587785252292473, -0.8090169943749476}, 
              BaseStyle -> "Graphics"], "DynamicName", BoxID -> "VertexID$3"], 
            TagBox[
             InsetBox[
              BoxData[
               FormBox[
                PaneBox["4", Alignment -> Center, ImageMargins -> 2], 
                TraditionalForm]], {-0.9510565162951536, 
              0.30901699437494723`}, BaseStyle -> "Graphics"], "DynamicName", 
             BoxID -> "VertexID$4"], 
            TagBox[
             InsetBox[
              BoxData[
               FormBox[
                PaneBox["5", Alignment -> Center, ImageMargins -> 2], 
                TraditionalForm]], {-2.4492935982947064`*^-16, 1.}, BaseStyle -> 
              "Graphics"], "DynamicName", BoxID -> "VertexID$5"], 
            TagBox[
             InsetBox[
              BoxData[
               FormBox[
                PaneBox["6", Alignment -> Center, ImageMargins -> 2], 
                TraditionalForm]], {1.902113032590307, 0.6180339887498949}, 
              BaseStyle -> "Graphics"], "DynamicName", BoxID -> "VertexID$6"], 
            TagBox[
             InsetBox[
              BoxData[
               FormBox[
                PaneBox["7", Alignment -> Center, ImageMargins -> 2], 
                TraditionalForm]], {
              1.1755705045849465`, -1.6180339887498947`}, BaseStyle -> 
              "Graphics"], "DynamicName", BoxID -> "VertexID$7"], 
            TagBox[
             InsetBox[
              BoxData[
               FormBox[
                PaneBox["8", Alignment -> Center, ImageMargins -> 2], 
                TraditionalForm]], {-1.175570504584946, -1.6180339887498951`},
               BaseStyle -> "Graphics"], "DynamicName", BoxID -> 
             "VertexID$8"], 
            TagBox[
             InsetBox[
              BoxData[
               FormBox[
                PaneBox["9", Alignment -> Center, ImageMargins -> 2], 
                TraditionalForm]], {-1.9021130325903073`, 0.6180339887498945},
               BaseStyle -> "Graphics"], "DynamicName", BoxID -> 
             "VertexID$9"], 
            TagBox[
             InsetBox[
              BoxData[
               FormBox[
                PaneBox["10", Alignment -> Center, ImageMargins -> 2], 
                TraditionalForm]], {-4.898587196589413*^-16, 2.}, BaseStyle -> 
              "Graphics"], "DynamicName", BoxID -> 
             "VertexID$10"]}}], $CellContext`flag}, 
         TagBox[
          
          DynamicBox[GraphComputation`NetworkGraphicsBox[
           3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
           CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
            SynchronousUpdating -> False, 
            TrackedSymbols :> {$CellContext`flag}},
           
           ImageSizeCache->{{0., 109.99999999999997`}, {-59.10565162951536, 
            54.99999999999998}}],
          MouseAppearanceTag["NetworkGraphics"]],
         AllowKernelInitialization->False,
         UnsavedVariables:>{$CellContext`flag}]],
       DefaultBaseStyle->{
        "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
         Hue[0.8, 1., 0.6]},
       FrameTicks->None,
       ImageSize->110], "]"}], ",", 
     RowBox[{"1", "\[UndirectedEdge]", "_"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8665635925345216`*^9, 3.8665636104096746`*^9}, {
  3.8665636488409567`*^9, 3.8665636540798454`*^9}},
 CellLabel->
  "In[179]:=",ExpressionUUID->"c856cf2d-90c3-468e-8612-bdde39ed3160"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"1", "\[UndirectedEdge]", "3"}], ",", 
   RowBox[{"1", "\[UndirectedEdge]", "4"}], ",", 
   RowBox[{"1", "\[UndirectedEdge]", "6"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.866563595703657*^9, 3.8665636124570785`*^9}, 
   3.866563654991868*^9},
 CellLabel->
  "Out[179]=",ExpressionUUID->"56995b6e-7a8d-4466-b259-b85117990a44"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Function", "Section",
 CellChangeTimes->{{3.866563493940073*^9, 
  3.866563496057974*^9}},ExpressionUUID->"c905aa83-c265-4f43-bb27-\
5a0c9113a046"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SimplifiedVertexModel", "[", 
   RowBox[{"g_", "?", "GraphQ"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "res", ",", "n", ",", "m", ",", "a", ",", "b", ",", "u", ",", "v"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"n", "=", 
      RowBox[{"VertexCount", "[", "g", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"m", "=", 
      RowBox[{"Transpose", "[", 
       RowBox[{"IncidenceMatrix", "[", "g", "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"res", "=", 
      RowBox[{"LinearOptimization", "[", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Total", "[", 
          RowBox[{"u", "+", "v"}], "]"}]}], 
        RowBox[{"(*", 
         RowBox[{
         "I", " ", "understand", " ", "this", " ", "objective", " ", 
          "function", " ", "and", " ", "the", " ", "linear", " ", 
          "optimization"}], "*)"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"u", "+", "v"}], " ", "\[VectorGreaterEqual]", "1"}], 
          RowBox[{"(*", 
           RowBox[{
           "I", " ", "understand", " ", "this", " ", "as", " ", "saying"}], 
           " ", "*)"}], 
          RowBox[{"(*", 
           RowBox[{",", 
            RowBox[{
             RowBox[{
              RowBox[{"a", ".", "u"}], " ", "+", 
              RowBox[{"b", ".", "v"}]}], "\[VectorLessEqual]", "1"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"a", ".", "v"}], " ", "+", 
              RowBox[{"b", ".", "u"}]}], "\[VectorLessEqual]", "1"}], ",", 
            RowBox[{
             RowBox[{"Total", "[", "u", "]"}], "\[VectorGreaterEqual]", "1"}],
             ",", 
            RowBox[{
             RowBox[{"Total", "[", "v", "]"}], "\[VectorGreaterEqual]", "1"}],
             ",", 
            RowBox[{"u", "\[VectorGreaterEqual]", "0"}], ",", 
            RowBox[{"v", "\[VectorGreaterEqual]", "0"}], ",", 
            RowBox[{"u", "\[VectorLessEqual]", "1"}], ",", 
            RowBox[{"v", "\[VectorLessEqual]", "1"}]}], "*)"}], ",", 
          RowBox[{"u", "\[VectorGreaterEqual]", "0"}], ",", 
          RowBox[{"v", "\[VectorGreaterEqual]", "0"}], ",", 
          RowBox[{"Echo", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"Extract", "[", 
                 RowBox[{"u", ",", 
                  RowBox[{"Position", "[", 
                   RowBox[{
                    RowBox[{"EdgeList", "[", "g", "]"}], ",", 
                    RowBox[{"#", "\[UndirectedEdge]", "_"}]}], "]"}]}], "]"}],
                 ".", 
                RowBox[{"IncidenceList", "[", 
                 RowBox[{"g", ",", "#"}], "]"}]}], "-", 
               RowBox[{
                RowBox[{"Extract", "[", 
                 RowBox[{"v", ",", 
                  RowBox[{"Position", "[", 
                   RowBox[{
                    RowBox[{"EdgeList", "[", "g", "]"}], ",", 
                    RowBox[{"#", "\[UndirectedEdge]", "_"}]}], "]"}]}], "]"}],
                 ".", 
                RowBox[{"IncidenceList", "[", 
                 RowBox[{"g", ",", "#"}], "]"}]}]}], "&"}], "/@", 
             RowBox[{"VertexList", "[", "g", "]"}]}], "==", 
            RowBox[{"ConstantArray", "[", 
             RowBox[{"0", ",", 
              RowBox[{"VertexCount", "[", "g", "]"}]}], "]"}]}], "]"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"u", "\[Element]", 
           RowBox[{"Vectors", "[", 
            RowBox[{"n", ",", "Integers"}], "]"}]}], ",", 
          RowBox[{"v", "\[Element]", 
           RowBox[{"Vectors", "[", 
            RowBox[{"n", ",", "Integers"}], "]"}]}]}], "}"}]}], "]"}]}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8665632388221226`*^9, 3.866563334149482*^9}, {
   3.866563375820717*^9, 3.8665634273129873`*^9}, {3.8665636681308126`*^9, 
   3.8665637052014017`*^9}, 3.8665638195307817`*^9, {3.8665638552250056`*^9, 
   3.866563858543206*^9}},
 CellLabel->
  "In[182]:=",ExpressionUUID->"28e75d98-2bec-461d-aa90-0e8ae05cd5ab"],

Cell[BoxData[
 RowBox[{"Extract", "[", 
  RowBox[{",", 
   RowBox[{"Position", "[", 
    RowBox[{
     RowBox[{"EdgeList", "[", 
      GraphicsBox[
       NamespaceBox["NetworkGraphics",
        DynamicModuleBox[{Typeset`graph = HoldComplete[
          
          Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {
           Null, {{1, 3}, {1, 4}, {1, 6}, {2, 4}, {2, 5}, {2, 7}, {3, 5}, {3, 
            8}, {4, 9}, {5, 10}, {6, 7}, {6, 10}, {7, 8}, {8, 9}, {9, 10}}}, {
           ImageSize -> 110, 
            VertexCoordinates -> {{0.9510565162951535, 
             0.30901699437494745`}, {
             0.5877852522924732, -0.8090169943749473}, {-0.587785252292473, \
-0.8090169943749476}, {-0.9510565162951536, 
             0.30901699437494723`}, {-2.4492935982947064`*^-16, 1.}, {
             1.902113032590307, 0.6180339887498949}, {
             1.1755705045849465`, -1.6180339887498947`}, {-1.175570504584946, \
-1.6180339887498951`}, {-1.9021130325903073`, 
             0.6180339887498945}, {-4.898587196589413*^-16, 2.}}, 
            VertexShapeFunction -> {"Name"}}]], Typeset`boxes, 
         Typeset`boxes$s2d = GraphicsGroupBox[{{
            Directive[
             Opacity[0.7], 
             Hue[0.6, 0.7, 0.5]], 
            LineBox[{{
               DynamicLocation["VertexID$1", Automatic, Center], 
               DynamicLocation["VertexID$3", Automatic, Center]}, {
               DynamicLocation["VertexID$1", Automatic, Center], 
               DynamicLocation["VertexID$4", Automatic, Center]}, {
               DynamicLocation["VertexID$1", Automatic, Center], 
               DynamicLocation["VertexID$6", Automatic, Center]}, {
               DynamicLocation["VertexID$2", Automatic, Center], 
               DynamicLocation["VertexID$4", Automatic, Center]}, {
               DynamicLocation["VertexID$2", Automatic, Center], 
               DynamicLocation["VertexID$5", Automatic, Center]}, {
               DynamicLocation["VertexID$2", Automatic, Center], 
               DynamicLocation["VertexID$7", Automatic, Center]}, {
               DynamicLocation["VertexID$3", Automatic, Center], 
               DynamicLocation["VertexID$5", Automatic, Center]}, {
               DynamicLocation["VertexID$3", Automatic, Center], 
               DynamicLocation["VertexID$8", Automatic, Center]}, {
               DynamicLocation["VertexID$4", Automatic, Center], 
               DynamicLocation["VertexID$9", Automatic, Center]}, {
               DynamicLocation["VertexID$5", Automatic, Center], 
               DynamicLocation["VertexID$10", Automatic, Center]}, {
               DynamicLocation["VertexID$6", Automatic, Center], 
               DynamicLocation["VertexID$7", Automatic, Center]}, {
               DynamicLocation["VertexID$6", Automatic, Center], 
               DynamicLocation["VertexID$10", Automatic, Center]}, {
               DynamicLocation["VertexID$7", Automatic, Center], 
               DynamicLocation["VertexID$8", Automatic, Center]}, {
               DynamicLocation["VertexID$8", Automatic, Center], 
               DynamicLocation["VertexID$9", Automatic, Center]}, {
               DynamicLocation["VertexID$9", Automatic, Center], 
               DynamicLocation["VertexID$10", Automatic, Center]}}]}, {
            Directive[
             Hue[0.6, 0.2, 0.8], 
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.7]]]], 
            TagBox[
             InsetBox[
              BoxData[
               FormBox[
                PaneBox["1", Alignment -> Center, ImageMargins -> 2], 
                TraditionalForm]], {0.9510565162951535, 0.30901699437494745`},
               BaseStyle -> "Graphics"], "DynamicName", BoxID -> 
             "VertexID$1"], 
            TagBox[
             InsetBox[
              BoxData[
               FormBox[
                PaneBox["2", Alignment -> Center, ImageMargins -> 2], 
                TraditionalForm]], {0.5877852522924732, -0.8090169943749473}, 
              BaseStyle -> "Graphics"], "DynamicName", BoxID -> "VertexID$2"], 
            TagBox[
             InsetBox[
              BoxData[
               FormBox[
                PaneBox["3", Alignment -> Center, ImageMargins -> 2], 
                TraditionalForm]], {-0.587785252292473, -0.8090169943749476}, 
              BaseStyle -> "Graphics"], "DynamicName", BoxID -> "VertexID$3"], 
            TagBox[
             InsetBox[
              BoxData[
               FormBox[
                PaneBox["4", Alignment -> Center, ImageMargins -> 2], 
                TraditionalForm]], {-0.9510565162951536, 
              0.30901699437494723`}, BaseStyle -> "Graphics"], "DynamicName", 
             BoxID -> "VertexID$4"], 
            TagBox[
             InsetBox[
              BoxData[
               FormBox[
                PaneBox["5", Alignment -> Center, ImageMargins -> 2], 
                TraditionalForm]], {-2.4492935982947064`*^-16, 1.}, BaseStyle -> 
              "Graphics"], "DynamicName", BoxID -> "VertexID$5"], 
            TagBox[
             InsetBox[
              BoxData[
               FormBox[
                PaneBox["6", Alignment -> Center, ImageMargins -> 2], 
                TraditionalForm]], {1.902113032590307, 0.6180339887498949}, 
              BaseStyle -> "Graphics"], "DynamicName", BoxID -> "VertexID$6"], 
            TagBox[
             InsetBox[
              BoxData[
               FormBox[
                PaneBox["7", Alignment -> Center, ImageMargins -> 2], 
                TraditionalForm]], {
              1.1755705045849465`, -1.6180339887498947`}, BaseStyle -> 
              "Graphics"], "DynamicName", BoxID -> "VertexID$7"], 
            TagBox[
             InsetBox[
              BoxData[
               FormBox[
                PaneBox["8", Alignment -> Center, ImageMargins -> 2], 
                TraditionalForm]], {-1.175570504584946, -1.6180339887498951`},
               BaseStyle -> "Graphics"], "DynamicName", BoxID -> 
             "VertexID$8"], 
            TagBox[
             InsetBox[
              BoxData[
               FormBox[
                PaneBox["9", Alignment -> Center, ImageMargins -> 2], 
                TraditionalForm]], {-1.9021130325903073`, 0.6180339887498945},
               BaseStyle -> "Graphics"], "DynamicName", BoxID -> 
             "VertexID$9"], 
            TagBox[
             InsetBox[
              BoxData[
               FormBox[
                PaneBox["10", Alignment -> Center, ImageMargins -> 2], 
                TraditionalForm]], {-4.898587196589413*^-16, 2.}, BaseStyle -> 
              "Graphics"], "DynamicName", BoxID -> 
             "VertexID$10"]}}], $CellContext`flag}, 
         TagBox[
          
          DynamicBox[GraphComputation`NetworkGraphicsBox[
           3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
           CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
            SynchronousUpdating -> False, 
            TrackedSymbols :> {$CellContext`flag}},
           
           ImageSizeCache->{{0., 109.99999999999997`}, {-59.10565162951536, 
            54.99999999999998}}],
          MouseAppearanceTag["NetworkGraphics"]],
         AllowKernelInitialization->False,
         UnsavedVariables:>{$CellContext`flag}]],
       DefaultBaseStyle->{
        "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
         Hue[0.8, 1., 0.6]},
       FrameTicks->None,
       ImageSize->110], "]"}], ",", 
     RowBox[{"1", "\[UndirectedEdge]", "_"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.866563758852364*^9, 
  3.8665637614611006`*^9}},ExpressionUUID->"6b85344d-4527-4a60-99e0-\
5720160f48d9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SimplifiedVertexModel", "[", "undirectedgraph", "]"}]], "Input",
 CellChangeTimes->{{3.866563429979084*^9, 3.8665634432489424`*^9}},
 CellLabel->
  "In[181]:=",ExpressionUUID->"b40217f7-19f6-4764-a02f-0d406fb9f172"],

Cell[BoxData[
 TemplateBox[{
  "Extract", "partd", 
   "\"Part specification \\!\\(\\*RowBox[{\\\"{\\\", \\\"1\\\", \
\\\"}\\\"}]\\) is longer than depth of object.\"", 2, 181, 28, 
   19443120556376979017, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.866563443612954*^9, 3.866563708566215*^9},
 CellLabel->
  "During evaluation of \
In[181]:=",ExpressionUUID->"299d3935-f8d5-4d9b-8371-22295a7c31f1"],

Cell[BoxData[
 TemplateBox[{
  "Extract", "partd", 
   "\"Part specification \\!\\(\\*RowBox[{\\\"{\\\", \\\"1\\\", \
\\\"}\\\"}]\\) is longer than depth of object.\"", 2, 181, 29, 
   19443120556376979017, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.866563443612954*^9, 3.866563709787699*^9},
 CellLabel->
  "During evaluation of \
In[181]:=",ExpressionUUID->"2906cfbe-e2c4-4315-9e2b-0f2f1c5f5785"],

Cell[BoxData[
 TemplateBox[{
  "Extract", "partd", 
   "\"Part specification \\!\\(\\*RowBox[{\\\"{\\\", \\\"1\\\", \
\\\"}\\\"}]\\) is longer than depth of object.\"", 2, 181, 30, 
   19443120556376979017, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.866563443612954*^9, 3.8665637110274*^9},
 CellLabel->
  "During evaluation of \
In[181]:=",ExpressionUUID->"f1dda3fb-2ec8-45e1-ab64-66e115bc9be8"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Extract\\\", \
\\\"::\\\", \\\"partd\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"", 2, 181, 31, 19443120556376979017, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.866563443612954*^9, 3.8665637123151226`*^9},
 CellLabel->
  "During evaluation of \
In[181]:=",ExpressionUUID->"811500a2-0b5b-45fd-a37e-46c43ec65943"],

Cell[BoxData[
 TemplateBox[{
  "Dot", "dotsh", 
   "\"Tensors \\!\\(\\*RowBox[{\\\"{\\\", \\\"}\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"1\\\", \
\\\"\[UndirectedEdge]\\\", \\\"14\\\"}], \\\",\\\", RowBox[{\\\"6\\\", \\\"\
\[UndirectedEdge]\\\", \\\"14\\\"}], \\\",\\\", RowBox[{\\\"9\\\", \\\"\
\[UndirectedEdge]\\\", \\\"14\\\"}], \\\",\\\", RowBox[{\\\"11\\\", \\\"\
\[UndirectedEdge]\\\", \\\"14\\\"}], \\\",\\\", RowBox[{\\\"12\\\", \\\"\
\[UndirectedEdge]\\\", \\\"14\\\"}], \\\",\\\", RowBox[{\\\"13\\\", \\\"\
\[UndirectedEdge]\\\", \\\"14\\\"}]}], \\\"}\\\"}]\\) have incompatible \
shapes.\"", 2, 181, 32, 19443120556376979017, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.866563443612954*^9, 3.8665637135860167`*^9},
 CellLabel->
  "During evaluation of \
In[181]:=",ExpressionUUID->"cde7caf2-c648-4b77-87b8-e44676881d85"],

Cell[BoxData[
 TemplateBox[{
  "Dot", "dotsh", 
   "\"Tensors \\!\\(\\*RowBox[{\\\"{\\\", \\\"}\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"1\\\", \
\\\"\[UndirectedEdge]\\\", \\\"14\\\"}], \\\",\\\", RowBox[{\\\"6\\\", \\\"\
\[UndirectedEdge]\\\", \\\"14\\\"}], \\\",\\\", RowBox[{\\\"9\\\", \\\"\
\[UndirectedEdge]\\\", \\\"14\\\"}], \\\",\\\", RowBox[{\\\"11\\\", \\\"\
\[UndirectedEdge]\\\", \\\"14\\\"}], \\\",\\\", RowBox[{\\\"12\\\", \\\"\
\[UndirectedEdge]\\\", \\\"14\\\"}], \\\",\\\", RowBox[{\\\"13\\\", \\\"\
\[UndirectedEdge]\\\", \\\"14\\\"}]}], \\\"}\\\"}]\\) have incompatible \
shapes.\"", 2, 181, 33, 19443120556376979017, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.866563443612954*^9, 3.86656371490514*^9},
 CellLabel->
  "During evaluation of \
In[181]:=",ExpressionUUID->"9cbb8d06-c6d8-4e0f-aa3b-83c079c08095"],

Cell[BoxData[
 TemplateBox[{
  "Dot", "dotsh", 
   "\"Tensors \\!\\(\\*RowBox[{\\\"{\\\", \\\"}\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"11\\\", \\\"\[UndirectedEdge]\\\", \\\
\"15\\\"}], \\\"}\\\"}]\\) have incompatible shapes.\"", 2, 181, 34, 
   19443120556376979017, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.866563443612954*^9, 3.866563716211239*^9},
 CellLabel->
  "During evaluation of \
In[181]:=",ExpressionUUID->"1dc5781c-a349-4a92-a789-595259f214af"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Dot\\\", \\\"::\\\", \\\
\"dotsh\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 181, 35, 19443120556376979017, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.866563443612954*^9, 3.8665637175532775`*^9},
 CellLabel->
  "During evaluation of \
In[181]:=",ExpressionUUID->"0c6e4238-0c99-458b-b190-693136779909"],

Cell[BoxData[
 TemplateBox[{
  "LinearOptimization", "cteqna", 
   "\"The equality constraint \\!\\(\\*RowBox[{RowBox[{\\\"{\\\", \
RowBox[{RowBox[{RowBox[{RowBox[{\\\"Extract\\\", \\\"[\\\", \
RowBox[{\\\"u\\\", \\\",\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
\\\"1\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \\\"2\\\", \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", \\\"3\\\", \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", \\\"4\\\", \\\"}\\\"}]}], \\\"}\\\"}]}], \\\"]\\\"}], \
\\\".\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"1\\\", \
\\\"\[UndirectedEdge]\\\", \\\"3\\\"}], \\\",\\\", RowBox[{\\\"1\\\", \\\"\
\[UndirectedEdge]\\\", \\\"6\\\"}], \\\",\\\", RowBox[{\\\"1\\\", \\\"\
\[UndirectedEdge]\\\", \\\"10\\\"}], \\\",\\\", RowBox[{\\\"1\\\", \\\"\
\[UndirectedEdge]\\\", \\\"14\\\"}]}], \\\"}\\\"}]}], \\\"-\\\", \
RowBox[{RowBox[{\\\"Extract\\\", \\\"[\\\", RowBox[{\\\"v\\\", \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\
\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\
\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}]}], \
\\\"}\\\"}]}], \\\"]\\\"}], \\\".\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"1\\\", \\\"\[UndirectedEdge]\\\", \\\"3\\\"}], \\\",\\\", \
RowBox[{\\\"1\\\", \\\"\[UndirectedEdge]\\\", \\\"6\\\"}], \\\",\\\", \
RowBox[{\\\"1\\\", \\\"\[UndirectedEdge]\\\", \\\"10\\\"}], \\\",\\\", \
RowBox[{\\\"1\\\", \\\"\[UndirectedEdge]\\\", \\\"14\\\"}]}], \
\\\"}\\\"}]}]}], \\\",\\\", RowBox[{RowBox[{RowBox[{\\\"Extract\\\", \
\\\"[\\\", RowBox[{\\\"u\\\", \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", \\\"5\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\
\", \\\"6\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \\\"7\\\", \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \\\"8\\\", \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", \\\"9\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
\\\"10\\\", \\\"}\\\"}]}], \\\"}\\\"}]}], \\\"]\\\"}], \\\".\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"2\\\", \\\"\[UndirectedEdge]\\\", \
\\\"3\\\"}], \\\",\\\", RowBox[{\\\"2\\\", \\\"\[UndirectedEdge]\\\", \\\"5\\\
\"}], \\\",\\\", RowBox[{\\\"2\\\", \\\"\[UndirectedEdge]\\\", \\\"7\\\"}], \
\\\",\\\", RowBox[{\\\"2\\\", \\\"\[UndirectedEdge]\\\", \\\"9\\\"}], \\\",\\\
\", RowBox[{\\\"2\\\", \\\"\[UndirectedEdge]\\\", \\\"12\\\"}], \\\",\\\", \
RowBox[{\\\"2\\\", \\\"\[UndirectedEdge]\\\", \\\"13\\\"}]}], \\\"}\\\"}]}], \
\\\"-\\\", RowBox[{RowBox[{\\\"Extract\\\", \\\"[\\\", RowBox[{\\\"v\\\", \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\
\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\
\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}]}], \
\\\"}\\\"}]}], \\\"]\\\"}], \\\".\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"2\\\", \\\"\[UndirectedEdge]\\\", \\\"3\\\"}], \\\",\\\", \
RowBox[{\\\"2\\\", \\\"\[UndirectedEdge]\\\", \\\"5\\\"}], \\\",\\\", \
RowBox[{\\\"2\\\", \\\"\[UndirectedEdge]\\\", \\\"7\\\"}], \\\",\\\", \
RowBox[{\\\"2\\\", \\\"\[UndirectedEdge]\\\", \\\"9\\\"}], \\\",\\\", \
RowBox[{\\\"2\\\", \\\"\[UndirectedEdge]\\\", \\\"12\\\"}], \\\",\\\", \
RowBox[{\\\"2\\\", \\\"\[UndirectedEdge]\\\", \\\"13\\\"}]}], \
\\\"}\\\"}]}]}], \\\",\\\", RowBox[{RowBox[{RowBox[{\\\"Extract\\\", \
\\\"[\\\", RowBox[{\\\"u\\\", \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", \\\"11\\\", \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", \\\"12\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
\\\"13\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \\\"14\\\", \
\\\"}\\\"}]}], \\\"}\\\"}]}], \\\"]\\\"}], \\\".\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"1\\\", \\\"\[UndirectedEdge]\\\", \\\"3\\\"}], \\\",\\\", \
RowBox[{\\\"2\\\", \\\"\[UndirectedEdge]\\\", \\\"3\\\"}], \\\",\\\", \
RowBox[{\\\"3\\\", \\\"\[UndirectedEdge]\\\", \\\"4\\\"}], \\\",\\\", \
RowBox[{\\\"3\\\", \\\"\[UndirectedEdge]\\\", \\\"8\\\"}], \\\",\\\", \
RowBox[{\\\"3\\\", \\\"\[UndirectedEdge]\\\", \\\"11\\\"}], \\\",\\\", \
RowBox[{\\\"3\\\", \\\"\[UndirectedEdge]\\\", \\\"13\\\"}]}], \\\"}\\\"}]}], \
\\\"-\\\", RowBox[{RowBox[{\\\"Extract\\\", \\\"[\\\", RowBox[{\\\"v\\\", \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\
\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}]}], \\\"}\\\"}]}], \
\\\"]\\\"}], \\\".\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"1\\\", \\\"\
\[UndirectedEdge]\\\", \\\"3\\\"}], \\\",\\\", RowBox[{\\\"2\\\", \\\"\
\[UndirectedEdge]\\\", \\\"3\\\"}], \\\",\\\", RowBox[{\\\"3\\\", \\\"\
\[UndirectedEdge]\\\", \\\"4\\\"}], \\\",\\\", RowBox[{\\\"3\\\", \\\"\
\[UndirectedEdge]\\\", \\\"8\\\"}], \\\",\\\", RowBox[{\\\"3\\\", \\\"\
\[UndirectedEdge]\\\", \\\"11\\\"}], \\\",\\\", RowBox[{\\\"3\\\", \\\"\
\[UndirectedEdge]\\\", \\\"13\\\"}]}], \\\"}\\\"}]}]}], \\\",\\\", RowBox[{\\\
\"\[LeftSkeleton]\\\", \\\"6\\\", \\\"\[RightSkeleton]\\\"}], \\\",\\\", \
RowBox[{RowBox[{RowBox[{\\\"Extract\\\", \\\"[\\\", RowBox[{\\\"u\\\", \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \\\"28\\\", \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \\\"29\\\", \\\"}\\\"}]}], \\\"}\\\
\"}]}], \\\"]\\\"}], \\\".\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"1\\\", \
\\\"\[UndirectedEdge]\\\", \\\"10\\\"}], \\\",\\\", RowBox[{\\\"4\\\", \\\"\
\[UndirectedEdge]\\\", \\\"10\\\"}], \\\",\\\", RowBox[{\\\"8\\\", \\\"\
\[UndirectedEdge]\\\", \\\"10\\\"}], \\\",\\\", RowBox[{\\\"9\\\", \\\"\
\[UndirectedEdge]\\\", \\\"10\\\"}], \\\",\\\", RowBox[{\\\"10\\\", \\\"\
\[UndirectedEdge]\\\", \\\"12\\\"}], \\\",\\\", RowBox[{\\\"10\\\", \\\"\
\[UndirectedEdge]\\\", \\\"13\\\"}]}], \\\"}\\\"}]}], \\\"-\\\", \
RowBox[{RowBox[{\\\"Extract\\\", \\\"[\\\", RowBox[{\\\"v\\\", \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\
\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}]}], \\\"}\\\"}]}], \
\\\"]\\\"}], \\\".\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"1\\\", \\\"\
\[UndirectedEdge]\\\", \\\"10\\\"}], \\\",\\\", RowBox[{\\\"4\\\", \\\"\
\[UndirectedEdge]\\\", \\\"10\\\"}], \\\",\\\", RowBox[{\\\"8\\\", \\\"\
\[UndirectedEdge]\\\", \\\"10\\\"}], \\\",\\\", RowBox[{\\\"9\\\", \\\"\
\[UndirectedEdge]\\\", \\\"10\\\"}], \\\",\\\", RowBox[{\\\"10\\\", \\\"\
\[UndirectedEdge]\\\", \\\"12\\\"}], \\\",\\\", RowBox[{\\\"10\\\", \\\"\
\[UndirectedEdge]\\\", \\\"13\\\"}]}], \\\"}\\\"}]}]}], \\\",\\\", RowBox[{\\\
\"\[LeftSkeleton]\\\", \\\"5\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \
\\\"\[Equal]\\\", RowBox[{\\\"{\\\", RowBox[{\\\"0\\\", \\\",\\\", \\\"0\\\", \
\\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \
\\\",\\\", \\\"0\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"5\\\", \
\\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}]}]\\) is nonlinear. Equality \
constraints must be affine.\"", 2, 181, 36, 19443120556376979017, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.866563443612954*^9, 3.8665637189786835`*^9},
 CellLabel->
  "During evaluation of \
In[181]:=",ExpressionUUID->"fcef4cdf-89b5-45cf-a2f1-5bc86aa3923f"],

Cell[BoxData[
 TemplateBox[{
  "Extract", "partw", 
   "\"Part \\!\\(\\*RowBox[{\\\"4\\\"}]\\) of \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"a\\\", \\\",\\\", \\\"b\\\", \\\",\\\", \\\"c\\\"}], \
\\\"}\\\"}]\\) does not exist.\"", 2, 181, 37, 19443120556376979017, "Local"},
  
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.866563443612954*^9, 3.866563720441224*^9},
 CellLabel->
  "During evaluation of \
In[181]:=",ExpressionUUID->"5000d793-10c0-4754-ba3e-44d9402a752e"],

Cell[BoxData[
 TemplateBox[{
  "Extract", "partw", 
   "\"Part \\!\\(\\*RowBox[{\\\"4\\\"}]\\) of \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"d\\\", \\\",\\\", \\\"e\\\", \\\",\\\", \\\"f\\\"}], \
\\\"}\\\"}]\\) does not exist.\"", 2, 181, 38, 19443120556376979017, "Local"},
  
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.866563443612954*^9, 3.8665637217849607`*^9},
 CellLabel->
  "During evaluation of \
In[181]:=",ExpressionUUID->"fdb538de-b784-42ce-98ae-867c5696dea5"],

Cell[BoxData[
 TemplateBox[{
  "Extract", "partw", 
   "\"Part \\!\\(\\*RowBox[{\\\"5\\\"}]\\) of \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"a\\\", \\\",\\\", \\\"b\\\", \\\",\\\", \\\"c\\\"}], \
\\\"}\\\"}]\\) does not exist.\"", 2, 181, 39, 19443120556376979017, "Local"},
  
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.866563443612954*^9, 3.8665637231631355`*^9},
 CellLabel->
  "During evaluation of \
In[181]:=",ExpressionUUID->"901bc7ed-915b-4ea7-a449-c19cee8a35b2"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Extract\\\", \
\\\"::\\\", \\\"partw\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"", 2, 181, 40, 19443120556376979017, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.866563443612954*^9, 3.866563724530451*^9},
 CellLabel->
  "During evaluation of \
In[181]:=",ExpressionUUID->"c0ea9d4b-9728-4ac1-b00e-f2cf41e4a748"],

Cell[BoxData[
 TemplateBox[{
  "LinearOptimization", "bdspec", 
   "\"The argument \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"False\\\", \\\",\\\
\", \\\"False\\\"}], \\\"}\\\"}]\\) at position \
\\!\\(\\*RowBox[{\\\"3\\\"}]\\) of \
\\!\\(\\*RowBox[{\\\"LinearOptimization\\\", \\\"[\\\", \
RowBox[{RowBox[{RowBox[{\\\"-\\\", \\\"a\\\"}], \\\"-\\\", \\\"b\\\", \\\"-\\\
\", \\\"c\\\", \\\"-\\\", \\\"d\\\", \\\"-\\\", \\\"e\\\", \\\"-\\\", \\\"f\\\
\"}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"False\\\", \
\\\",\\\", \\\"False\\\"}], \\\"}\\\"}]}], \\\"]\\\"}]\\) should be a \
specification for either variables, equality constraints, domains, or \
solution properties.\"", 2, 181, 41, 19443120556376979017, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.866563443612954*^9, 3.86656372595919*^9},
 CellLabel->
  "During evaluation of \
In[181]:=",ExpressionUUID->"a6da2631-a0da-48f5-9fac-e07686cf0c27"],

Cell[BoxData[
 RowBox[{"LinearOptimization", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "a"}], "-", "b", "-", "c", "-", "d", "-", "e", "-", "f"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"a", "+", "d"}], ",", 
        RowBox[{"b", "+", "e"}], ",", 
        RowBox[{"c", "+", "f"}]}], "}"}], "\[VectorGreaterEqual]", "1"}], ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a", ",", "b", ",", "c"}], "}"}], "\[VectorGreaterEqual]", 
      "0"}], ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"d", ",", "e", ",", "f"}], "}"}], "\[VectorGreaterEqual]", 
      "0"}], ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Extract", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", "1", "}"}], ",", 
              RowBox[{"{", "2", "}"}], ",", 
              RowBox[{"{", "3", "}"}], ",", 
              RowBox[{"{", "4", "}"}]}], "}"}]}], "]"}], ".", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1", "\[UndirectedEdge]", "3"}], ",", 
            RowBox[{"1", "\[UndirectedEdge]", "6"}], ",", 
            RowBox[{"1", "\[UndirectedEdge]", "10"}], ",", 
            RowBox[{"1", "\[UndirectedEdge]", "14"}]}], "}"}]}], "-", 
         RowBox[{
          RowBox[{"Extract", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"d", ",", "e", ",", "f"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", "1", "}"}], ",", 
              RowBox[{"{", "2", "}"}], ",", 
              RowBox[{"{", "3", "}"}], ",", 
              RowBox[{"{", "4", "}"}]}], "}"}]}], "]"}], ".", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1", "\[UndirectedEdge]", "3"}], ",", 
            RowBox[{"1", "\[UndirectedEdge]", "6"}], ",", 
            RowBox[{"1", "\[UndirectedEdge]", "10"}], ",", 
            RowBox[{"1", "\[UndirectedEdge]", "14"}]}], "}"}]}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Extract", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", "5", "}"}], ",", 
              RowBox[{"{", "6", "}"}], ",", 
              RowBox[{"{", "7", "}"}], ",", 
              RowBox[{"{", "8", "}"}], ",", 
              RowBox[{"{", "9", "}"}], ",", 
              RowBox[{"{", "10", "}"}]}], "}"}]}], "]"}], ".", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"2", "\[UndirectedEdge]", "3"}], ",", 
            RowBox[{"2", "\[UndirectedEdge]", "5"}], ",", 
            RowBox[{"2", "\[UndirectedEdge]", "7"}], ",", 
            RowBox[{"2", "\[UndirectedEdge]", "9"}], ",", 
            RowBox[{"2", "\[UndirectedEdge]", "12"}], ",", 
            RowBox[{"2", "\[UndirectedEdge]", "13"}]}], "}"}]}], "-", 
         RowBox[{
          RowBox[{"Extract", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"d", ",", "e", ",", "f"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", "5", "}"}], ",", 
              RowBox[{"{", "6", "}"}], ",", 
              RowBox[{"{", "7", "}"}], ",", 
              RowBox[{"{", "8", "}"}], ",", 
              RowBox[{"{", "9", "}"}], ",", 
              RowBox[{"{", "10", "}"}]}], "}"}]}], "]"}], ".", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"2", "\[UndirectedEdge]", "3"}], ",", 
            RowBox[{"2", "\[UndirectedEdge]", "5"}], ",", 
            RowBox[{"2", "\[UndirectedEdge]", "7"}], ",", 
            RowBox[{"2", "\[UndirectedEdge]", "9"}], ",", 
            RowBox[{"2", "\[UndirectedEdge]", "12"}], ",", 
            RowBox[{"2", "\[UndirectedEdge]", "13"}]}], "}"}]}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Extract", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", "11", "}"}], ",", 
              RowBox[{"{", "12", "}"}], ",", 
              RowBox[{"{", "13", "}"}], ",", 
              RowBox[{"{", "14", "}"}]}], "}"}]}], "]"}], ".", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1", "\[UndirectedEdge]", "3"}], ",", 
            RowBox[{"2", "\[UndirectedEdge]", "3"}], ",", 
            RowBox[{"3", "\[UndirectedEdge]", "4"}], ",", 
            RowBox[{"3", "\[UndirectedEdge]", "8"}], ",", 
            RowBox[{"3", "\[UndirectedEdge]", "11"}], ",", 
            RowBox[{"3", "\[UndirectedEdge]", "13"}]}], "}"}]}], "-", 
         RowBox[{
          RowBox[{"Extract", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"d", ",", "e", ",", "f"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", "11", "}"}], ",", 
              RowBox[{"{", "12", "}"}], ",", 
              RowBox[{"{", "13", "}"}], ",", 
              RowBox[{"{", "14", "}"}]}], "}"}]}], "]"}], ".", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1", "\[UndirectedEdge]", "3"}], ",", 
            RowBox[{"2", "\[UndirectedEdge]", "3"}], ",", 
            RowBox[{"3", "\[UndirectedEdge]", "4"}], ",", 
            RowBox[{"3", "\[UndirectedEdge]", "8"}], ",", 
            RowBox[{"3", "\[UndirectedEdge]", "11"}], ",", 
            RowBox[{"3", "\[UndirectedEdge]", "13"}]}], "}"}]}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Extract", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", "15", "}"}], ",", 
              RowBox[{"{", "16", "}"}], ",", 
              RowBox[{"{", "17", "}"}], ",", 
              RowBox[{"{", "18", "}"}]}], "}"}]}], "]"}], ".", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"3", "\[UndirectedEdge]", "4"}], ",", 
            RowBox[{"4", "\[UndirectedEdge]", "6"}], ",", 
            RowBox[{"4", "\[UndirectedEdge]", "8"}], ",", 
            RowBox[{"4", "\[UndirectedEdge]", "10"}], ",", 
            RowBox[{"4", "\[UndirectedEdge]", "12"}]}], "}"}]}], "-", 
         RowBox[{
          RowBox[{"Extract", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"d", ",", "e", ",", "f"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", "15", "}"}], ",", 
              RowBox[{"{", "16", "}"}], ",", 
              RowBox[{"{", "17", "}"}], ",", 
              RowBox[{"{", "18", "}"}]}], "}"}]}], "]"}], ".", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"3", "\[UndirectedEdge]", "4"}], ",", 
            RowBox[{"4", "\[UndirectedEdge]", "6"}], ",", 
            RowBox[{"4", "\[UndirectedEdge]", "8"}], ",", 
            RowBox[{"4", "\[UndirectedEdge]", "10"}], ",", 
            RowBox[{"4", "\[UndirectedEdge]", "12"}]}], "}"}]}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Extract", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"{", "19", "}"}], "}"}]}], "]"}], ".", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"2", "\[UndirectedEdge]", "5"}], ",", 
            RowBox[{"5", "\[UndirectedEdge]", "9"}]}], "}"}]}], "-", 
         RowBox[{
          RowBox[{"Extract", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"d", ",", "e", ",", "f"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"{", "19", "}"}], "}"}]}], "]"}], ".", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"2", "\[UndirectedEdge]", "5"}], ",", 
            RowBox[{"5", "\[UndirectedEdge]", "9"}]}], "}"}]}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Extract", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", "20", "}"}], ",", 
              RowBox[{"{", "21", "}"}]}], "}"}]}], "]"}], ".", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1", "\[UndirectedEdge]", "6"}], ",", 
            RowBox[{"4", "\[UndirectedEdge]", "6"}], ",", 
            RowBox[{"6", "\[UndirectedEdge]", "12"}], ",", 
            RowBox[{"6", "\[UndirectedEdge]", "14"}]}], "}"}]}], "-", 
         RowBox[{
          RowBox[{"Extract", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"d", ",", "e", ",", "f"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", "20", "}"}], ",", 
              RowBox[{"{", "21", "}"}]}], "}"}]}], "]"}], ".", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1", "\[UndirectedEdge]", "6"}], ",", 
            RowBox[{"4", "\[UndirectedEdge]", "6"}], ",", 
            RowBox[{"6", "\[UndirectedEdge]", "12"}], ",", 
            RowBox[{"6", "\[UndirectedEdge]", "14"}]}], "}"}]}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Extract", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", "22", "}"}], ",", 
              RowBox[{"{", "23", "}"}]}], "}"}]}], "]"}], ".", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"2", "\[UndirectedEdge]", "7"}], ",", 
            RowBox[{"7", "\[UndirectedEdge]", "8"}], ",", 
            RowBox[{"7", "\[UndirectedEdge]", "13"}]}], "}"}]}], "-", 
         RowBox[{
          RowBox[{"Extract", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"d", ",", "e", ",", "f"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", "22", "}"}], ",", 
              RowBox[{"{", "23", "}"}]}], "}"}]}], "]"}], ".", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"2", "\[UndirectedEdge]", "7"}], ",", 
            RowBox[{"7", "\[UndirectedEdge]", "8"}], ",", 
            RowBox[{"7", "\[UndirectedEdge]", "13"}]}], "}"}]}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Extract", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", "24", "}"}], ",", 
              RowBox[{"{", "25", "}"}]}], "}"}]}], "]"}], ".", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"3", "\[UndirectedEdge]", "8"}], ",", 
            RowBox[{"4", "\[UndirectedEdge]", "8"}], ",", 
            RowBox[{"7", "\[UndirectedEdge]", "8"}], ",", 
            RowBox[{"8", "\[UndirectedEdge]", "10"}], ",", 
            RowBox[{"8", "\[UndirectedEdge]", "11"}]}], "}"}]}], "-", 
         RowBox[{
          RowBox[{"Extract", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"d", ",", "e", ",", "f"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", "24", "}"}], ",", 
              RowBox[{"{", "25", "}"}]}], "}"}]}], "]"}], ".", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"3", "\[UndirectedEdge]", "8"}], ",", 
            RowBox[{"4", "\[UndirectedEdge]", "8"}], ",", 
            RowBox[{"7", "\[UndirectedEdge]", "8"}], ",", 
            RowBox[{"8", "\[UndirectedEdge]", "10"}], ",", 
            RowBox[{"8", "\[UndirectedEdge]", "11"}]}], "}"}]}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Extract", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", "26", "}"}], ",", 
              RowBox[{"{", "27", "}"}]}], "}"}]}], "]"}], ".", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"2", "\[UndirectedEdge]", "9"}], ",", 
            RowBox[{"5", "\[UndirectedEdge]", "9"}], ",", 
            RowBox[{"9", "\[UndirectedEdge]", "10"}], ",", 
            RowBox[{"9", "\[UndirectedEdge]", "14"}]}], "}"}]}], "-", 
         RowBox[{
          RowBox[{"Extract", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"d", ",", "e", ",", "f"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", "26", "}"}], ",", 
              RowBox[{"{", "27", "}"}]}], "}"}]}], "]"}], ".", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"2", "\[UndirectedEdge]", "9"}], ",", 
            RowBox[{"5", "\[UndirectedEdge]", "9"}], ",", 
            RowBox[{"9", "\[UndirectedEdge]", "10"}], ",", 
            RowBox[{"9", "\[UndirectedEdge]", "14"}]}], "}"}]}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Extract", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", "28", "}"}], ",", 
              RowBox[{"{", "29", "}"}]}], "}"}]}], "]"}], ".", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1", "\[UndirectedEdge]", "10"}], ",", 
            RowBox[{"4", "\[UndirectedEdge]", "10"}], ",", 
            RowBox[{"8", "\[UndirectedEdge]", "10"}], ",", 
            RowBox[{"9", "\[UndirectedEdge]", "10"}], ",", 
            RowBox[{"10", "\[UndirectedEdge]", "12"}], ",", 
            RowBox[{"10", "\[UndirectedEdge]", "13"}]}], "}"}]}], "-", 
         RowBox[{
          RowBox[{"Extract", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"d", ",", "e", ",", "f"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", "28", "}"}], ",", 
              RowBox[{"{", "29", "}"}]}], "}"}]}], "]"}], ".", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1", "\[UndirectedEdge]", "10"}], ",", 
            RowBox[{"4", "\[UndirectedEdge]", "10"}], ",", 
            RowBox[{"8", "\[UndirectedEdge]", "10"}], ",", 
            RowBox[{"9", "\[UndirectedEdge]", "10"}], ",", 
            RowBox[{"10", "\[UndirectedEdge]", "12"}], ",", 
            RowBox[{"10", "\[UndirectedEdge]", "13"}]}], "}"}]}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Extract", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", "30", "}"}], ",", 
              RowBox[{"{", "31", "}"}], ",", 
              RowBox[{"{", "32", "}"}]}], "}"}]}], "]"}], ".", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"3", "\[UndirectedEdge]", "11"}], ",", 
            RowBox[{"8", "\[UndirectedEdge]", "11"}], ",", 
            RowBox[{"11", "\[UndirectedEdge]", "13"}], ",", 
            RowBox[{"11", "\[UndirectedEdge]", "14"}], ",", 
            RowBox[{"11", "\[UndirectedEdge]", "15"}]}], "}"}]}], "-", 
         RowBox[{
          RowBox[{"Extract", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"d", ",", "e", ",", "f"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", "30", "}"}], ",", 
              RowBox[{"{", "31", "}"}], ",", 
              RowBox[{"{", "32", "}"}]}], "}"}]}], "]"}], ".", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"3", "\[UndirectedEdge]", "11"}], ",", 
            RowBox[{"8", "\[UndirectedEdge]", "11"}], ",", 
            RowBox[{"11", "\[UndirectedEdge]", "13"}], ",", 
            RowBox[{"11", "\[UndirectedEdge]", "14"}], ",", 
            RowBox[{"11", "\[UndirectedEdge]", "15"}]}], "}"}]}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Extract", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", "33", "}"}], ",", 
              RowBox[{"{", "34", "}"}]}], "}"}]}], "]"}], ".", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"2", "\[UndirectedEdge]", "12"}], ",", 
            RowBox[{"4", "\[UndirectedEdge]", "12"}], ",", 
            RowBox[{"6", "\[UndirectedEdge]", "12"}], ",", 
            RowBox[{"10", "\[UndirectedEdge]", "12"}], ",", 
            RowBox[{"12", "\[UndirectedEdge]", "13"}], ",", 
            RowBox[{"12", "\[UndirectedEdge]", "14"}]}], "}"}]}], "-", 
         RowBox[{
          RowBox[{"Extract", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"d", ",", "e", ",", "f"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", "33", "}"}], ",", 
              RowBox[{"{", "34", "}"}]}], "}"}]}], "]"}], ".", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"2", "\[UndirectedEdge]", "12"}], ",", 
            RowBox[{"4", "\[UndirectedEdge]", "12"}], ",", 
            RowBox[{"6", "\[UndirectedEdge]", "12"}], ",", 
            RowBox[{"10", "\[UndirectedEdge]", "12"}], ",", 
            RowBox[{"12", "\[UndirectedEdge]", "13"}], ",", 
            RowBox[{"12", "\[UndirectedEdge]", "14"}]}], "}"}]}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Extract", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"{", "35", "}"}], "}"}]}], "]"}], ".", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"2", "\[UndirectedEdge]", "13"}], ",", 
            RowBox[{"3", "\[UndirectedEdge]", "13"}], ",", 
            RowBox[{"7", "\[UndirectedEdge]", "13"}], ",", 
            RowBox[{"10", "\[UndirectedEdge]", "13"}], ",", 
            RowBox[{"11", "\[UndirectedEdge]", "13"}], ",", 
            RowBox[{"12", "\[UndirectedEdge]", "13"}], ",", 
            RowBox[{"13", "\[UndirectedEdge]", "14"}]}], "}"}]}], "-", 
         RowBox[{
          RowBox[{"Extract", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"d", ",", "e", ",", "f"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"{", "35", "}"}], "}"}]}], "]"}], ".", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"2", "\[UndirectedEdge]", "13"}], ",", 
            RowBox[{"3", "\[UndirectedEdge]", "13"}], ",", 
            RowBox[{"7", "\[UndirectedEdge]", "13"}], ",", 
            RowBox[{"10", "\[UndirectedEdge]", "13"}], ",", 
            RowBox[{"11", "\[UndirectedEdge]", "13"}], ",", 
            RowBox[{"12", "\[UndirectedEdge]", "13"}], ",", 
            RowBox[{"13", "\[UndirectedEdge]", "14"}]}], "}"}]}]}], ",", "0", 
        ",", "0"}], "}"}], "\[Equal]", 
      RowBox[{"{", 
       RowBox[{
       "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
        "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
        "0"}], "}"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"False", ",", "False"}], "}"}]}], "]"}]], "Output",
 CellChangeTimes->{3.8665634498545256`*^9, 3.8665637274545145`*^9},
 CellLabel->
  "Out[181]=",ExpressionUUID->"7bd7219f-123b-4ac8-b022-984ee55fe671"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SimplifiedVertexModel", "[", "undirectedgraph", "]"}]], "Input",
 CellChangeTimes->{{3.866563429979084*^9, 3.8665634432489424`*^9}, 
   3.8665638639293613`*^9},
 CellLabel->
  "In[185]:=",ExpressionUUID->"89810ba0-43c3-4e72-9343-2e419f767dae"],

Cell[BoxData[
 TemplateBox[{
  "Extract", "partd", 
   "\"Part specification \\!\\(\\*RowBox[{\\\"{\\\", \\\"1\\\", \
\\\"}\\\"}]\\) is longer than depth of object.\"", 2, 185, 60, 
   19443120556376979017, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8665638646495395`*^9, 3.8665639287330675`*^9},
 CellLabel->
  "During evaluation of \
In[185]:=",ExpressionUUID->"3823add7-85e4-4114-bd27-af6876cc2618"],

Cell[BoxData[
 TemplateBox[{
  "Extract", "partd", 
   "\"Part specification \\!\\(\\*RowBox[{\\\"{\\\", \\\"1\\\", \
\\\"}\\\"}]\\) is longer than depth of object.\"", 2, 185, 61, 
   19443120556376979017, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8665638646495395`*^9, 3.8665639301124425`*^9},
 CellLabel->
  "During evaluation of \
In[185]:=",ExpressionUUID->"a874a6f6-d0fb-4f83-bddd-780a563afbdf"],

Cell[BoxData[
 TemplateBox[{
  "Extract", "partd", 
   "\"Part specification \\!\\(\\*RowBox[{\\\"{\\\", \\\"1\\\", \
\\\"}\\\"}]\\) is longer than depth of object.\"", 2, 185, 62, 
   19443120556376979017, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8665638646495395`*^9, 3.866563931558256*^9},
 CellLabel->
  "During evaluation of \
In[185]:=",ExpressionUUID->"f56aab37-c841-4195-8a1b-82bca37e2671"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Extract\\\", \
\\\"::\\\", \\\"partd\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"", 2, 185, 63, 19443120556376979017, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8665638646495395`*^9, 3.866563933044854*^9},
 CellLabel->
  "During evaluation of \
In[185]:=",ExpressionUUID->"f3edc015-79a2-4996-9034-876fba652a4f"],

Cell[BoxData[
 TemplateBox[{
  "Dot", "dotsh", 
   "\"Tensors \\!\\(\\*RowBox[{\\\"{\\\", \\\"}\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"1\\\", \
\\\"\[UndirectedEdge]\\\", \\\"14\\\"}], \\\",\\\", RowBox[{\\\"6\\\", \\\"\
\[UndirectedEdge]\\\", \\\"14\\\"}], \\\",\\\", RowBox[{\\\"9\\\", \\\"\
\[UndirectedEdge]\\\", \\\"14\\\"}], \\\",\\\", RowBox[{\\\"11\\\", \\\"\
\[UndirectedEdge]\\\", \\\"14\\\"}], \\\",\\\", RowBox[{\\\"12\\\", \\\"\
\[UndirectedEdge]\\\", \\\"14\\\"}], \\\",\\\", RowBox[{\\\"13\\\", \\\"\
\[UndirectedEdge]\\\", \\\"14\\\"}]}], \\\"}\\\"}]\\) have incompatible \
shapes.\"", 2, 185, 64, 19443120556376979017, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8665638646495395`*^9, 3.8665639345138316`*^9},
 CellLabel->
  "During evaluation of \
In[185]:=",ExpressionUUID->"2198cd6a-0c46-4edd-8bf8-45e1be38b53a"],

Cell[BoxData[
 TemplateBox[{
  "Dot", "dotsh", 
   "\"Tensors \\!\\(\\*RowBox[{\\\"{\\\", \\\"}\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"1\\\", \
\\\"\[UndirectedEdge]\\\", \\\"14\\\"}], \\\",\\\", RowBox[{\\\"6\\\", \\\"\
\[UndirectedEdge]\\\", \\\"14\\\"}], \\\",\\\", RowBox[{\\\"9\\\", \\\"\
\[UndirectedEdge]\\\", \\\"14\\\"}], \\\",\\\", RowBox[{\\\"11\\\", \\\"\
\[UndirectedEdge]\\\", \\\"14\\\"}], \\\",\\\", RowBox[{\\\"12\\\", \\\"\
\[UndirectedEdge]\\\", \\\"14\\\"}], \\\",\\\", RowBox[{\\\"13\\\", \\\"\
\[UndirectedEdge]\\\", \\\"14\\\"}]}], \\\"}\\\"}]\\) have incompatible \
shapes.\"", 2, 185, 65, 19443120556376979017, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8665638646495395`*^9, 3.866563936009392*^9},
 CellLabel->
  "During evaluation of \
In[185]:=",ExpressionUUID->"752fd60c-cfd2-4d26-8030-b90b36b0e06a"],

Cell[BoxData[
 TemplateBox[{
  "Dot", "dotsh", 
   "\"Tensors \\!\\(\\*RowBox[{\\\"{\\\", \\\"}\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"11\\\", \\\"\[UndirectedEdge]\\\", \\\
\"15\\\"}], \\\"}\\\"}]\\) have incompatible shapes.\"", 2, 185, 66, 
   19443120556376979017, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8665638646495395`*^9, 3.8665639374957952`*^9},
 CellLabel->
  "During evaluation of \
In[185]:=",ExpressionUUID->"9ea06203-dcbd-41f5-a44f-b2743f96edc1"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Dot\\\", \\\"::\\\", \\\
\"dotsh\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 185, 67, 19443120556376979017, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8665638646495395`*^9, 3.866563939001031*^9},
 CellLabel->
  "During evaluation of \
In[185]:=",ExpressionUUID->"ba8a2e04-5b38-4ab4-b774-3ba01e4cd1b0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Extract", "[", 
       RowBox[{"u", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "1", "}"}], ",", 
          RowBox[{"{", "2", "}"}], ",", 
          RowBox[{"{", "3", "}"}], ",", 
          RowBox[{"{", "4", "}"}]}], "}"}]}], "]"}], ".", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"1", "\[UndirectedEdge]", "3"}], ",", 
        RowBox[{"1", "\[UndirectedEdge]", "6"}], ",", 
        RowBox[{"1", "\[UndirectedEdge]", "10"}], ",", 
        RowBox[{"1", "\[UndirectedEdge]", "14"}]}], "}"}]}], "-", 
     RowBox[{
      RowBox[{"Extract", "[", 
       RowBox[{"v", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "1", "}"}], ",", 
          RowBox[{"{", "2", "}"}], ",", 
          RowBox[{"{", "3", "}"}], ",", 
          RowBox[{"{", "4", "}"}]}], "}"}]}], "]"}], ".", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"1", "\[UndirectedEdge]", "3"}], ",", 
        RowBox[{"1", "\[UndirectedEdge]", "6"}], ",", 
        RowBox[{"1", "\[UndirectedEdge]", "10"}], ",", 
        RowBox[{"1", "\[UndirectedEdge]", "14"}]}], "}"}]}]}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"Extract", "[", 
       RowBox[{"u", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "5", "}"}], ",", 
          RowBox[{"{", "6", "}"}], ",", 
          RowBox[{"{", "7", "}"}], ",", 
          RowBox[{"{", "8", "}"}], ",", 
          RowBox[{"{", "9", "}"}], ",", 
          RowBox[{"{", "10", "}"}]}], "}"}]}], "]"}], ".", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"2", "\[UndirectedEdge]", "3"}], ",", 
        RowBox[{"2", "\[UndirectedEdge]", "5"}], ",", 
        RowBox[{"2", "\[UndirectedEdge]", "7"}], ",", 
        RowBox[{"2", "\[UndirectedEdge]", "9"}], ",", 
        RowBox[{"2", "\[UndirectedEdge]", "12"}], ",", 
        RowBox[{"2", "\[UndirectedEdge]", "13"}]}], "}"}]}], "-", 
     RowBox[{
      RowBox[{"Extract", "[", 
       RowBox[{"v", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "5", "}"}], ",", 
          RowBox[{"{", "6", "}"}], ",", 
          RowBox[{"{", "7", "}"}], ",", 
          RowBox[{"{", "8", "}"}], ",", 
          RowBox[{"{", "9", "}"}], ",", 
          RowBox[{"{", "10", "}"}]}], "}"}]}], "]"}], ".", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"2", "\[UndirectedEdge]", "3"}], ",", 
        RowBox[{"2", "\[UndirectedEdge]", "5"}], ",", 
        RowBox[{"2", "\[UndirectedEdge]", "7"}], ",", 
        RowBox[{"2", "\[UndirectedEdge]", "9"}], ",", 
        RowBox[{"2", "\[UndirectedEdge]", "12"}], ",", 
        RowBox[{"2", "\[UndirectedEdge]", "13"}]}], "}"}]}]}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"Extract", "[", 
       RowBox[{"u", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "11", "}"}], ",", 
          RowBox[{"{", "12", "}"}], ",", 
          RowBox[{"{", "13", "}"}], ",", 
          RowBox[{"{", "14", "}"}]}], "}"}]}], "]"}], ".", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"1", "\[UndirectedEdge]", "3"}], ",", 
        RowBox[{"2", "\[UndirectedEdge]", "3"}], ",", 
        RowBox[{"3", "\[UndirectedEdge]", "4"}], ",", 
        RowBox[{"3", "\[UndirectedEdge]", "8"}], ",", 
        RowBox[{"3", "\[UndirectedEdge]", "11"}], ",", 
        RowBox[{"3", "\[UndirectedEdge]", "13"}]}], "}"}]}], "-", 
     RowBox[{
      RowBox[{"Extract", "[", 
       RowBox[{"v", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "11", "}"}], ",", 
          RowBox[{"{", "12", "}"}], ",", 
          RowBox[{"{", "13", "}"}], ",", 
          RowBox[{"{", "14", "}"}]}], "}"}]}], "]"}], ".", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"1", "\[UndirectedEdge]", "3"}], ",", 
        RowBox[{"2", "\[UndirectedEdge]", "3"}], ",", 
        RowBox[{"3", "\[UndirectedEdge]", "4"}], ",", 
        RowBox[{"3", "\[UndirectedEdge]", "8"}], ",", 
        RowBox[{"3", "\[UndirectedEdge]", "11"}], ",", 
        RowBox[{"3", "\[UndirectedEdge]", "13"}]}], "}"}]}]}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"Extract", "[", 
       RowBox[{"u", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "15", "}"}], ",", 
          RowBox[{"{", "16", "}"}], ",", 
          RowBox[{"{", "17", "}"}], ",", 
          RowBox[{"{", "18", "}"}]}], "}"}]}], "]"}], ".", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"3", "\[UndirectedEdge]", "4"}], ",", 
        RowBox[{"4", "\[UndirectedEdge]", "6"}], ",", 
        RowBox[{"4", "\[UndirectedEdge]", "8"}], ",", 
        RowBox[{"4", "\[UndirectedEdge]", "10"}], ",", 
        RowBox[{"4", "\[UndirectedEdge]", "12"}]}], "}"}]}], "-", 
     RowBox[{
      RowBox[{"Extract", "[", 
       RowBox[{"v", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "15", "}"}], ",", 
          RowBox[{"{", "16", "}"}], ",", 
          RowBox[{"{", "17", "}"}], ",", 
          RowBox[{"{", "18", "}"}]}], "}"}]}], "]"}], ".", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"3", "\[UndirectedEdge]", "4"}], ",", 
        RowBox[{"4", "\[UndirectedEdge]", "6"}], ",", 
        RowBox[{"4", "\[UndirectedEdge]", "8"}], ",", 
        RowBox[{"4", "\[UndirectedEdge]", "10"}], ",", 
        RowBox[{"4", "\[UndirectedEdge]", "12"}]}], "}"}]}]}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"Extract", "[", 
       RowBox[{"u", ",", 
        RowBox[{"{", 
         RowBox[{"{", "19", "}"}], "}"}]}], "]"}], ".", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"2", "\[UndirectedEdge]", "5"}], ",", 
        RowBox[{"5", "\[UndirectedEdge]", "9"}]}], "}"}]}], "-", 
     RowBox[{
      RowBox[{"Extract", "[", 
       RowBox[{"v", ",", 
        RowBox[{"{", 
         RowBox[{"{", "19", "}"}], "}"}]}], "]"}], ".", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"2", "\[UndirectedEdge]", "5"}], ",", 
        RowBox[{"5", "\[UndirectedEdge]", "9"}]}], "}"}]}]}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"Extract", "[", 
       RowBox[{"u", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "20", "}"}], ",", 
          RowBox[{"{", "21", "}"}]}], "}"}]}], "]"}], ".", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"1", "\[UndirectedEdge]", "6"}], ",", 
        RowBox[{"4", "\[UndirectedEdge]", "6"}], ",", 
        RowBox[{"6", "\[UndirectedEdge]", "12"}], ",", 
        RowBox[{"6", "\[UndirectedEdge]", "14"}]}], "}"}]}], "-", 
     RowBox[{
      RowBox[{"Extract", "[", 
       RowBox[{"v", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "20", "}"}], ",", 
          RowBox[{"{", "21", "}"}]}], "}"}]}], "]"}], ".", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"1", "\[UndirectedEdge]", "6"}], ",", 
        RowBox[{"4", "\[UndirectedEdge]", "6"}], ",", 
        RowBox[{"6", "\[UndirectedEdge]", "12"}], ",", 
        RowBox[{"6", "\[UndirectedEdge]", "14"}]}], "}"}]}]}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"Extract", "[", 
       RowBox[{"u", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "22", "}"}], ",", 
          RowBox[{"{", "23", "}"}]}], "}"}]}], "]"}], ".", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"2", "\[UndirectedEdge]", "7"}], ",", 
        RowBox[{"7", "\[UndirectedEdge]", "8"}], ",", 
        RowBox[{"7", "\[UndirectedEdge]", "13"}]}], "}"}]}], "-", 
     RowBox[{
      RowBox[{"Extract", "[", 
       RowBox[{"v", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "22", "}"}], ",", 
          RowBox[{"{", "23", "}"}]}], "}"}]}], "]"}], ".", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"2", "\[UndirectedEdge]", "7"}], ",", 
        RowBox[{"7", "\[UndirectedEdge]", "8"}], ",", 
        RowBox[{"7", "\[UndirectedEdge]", "13"}]}], "}"}]}]}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"Extract", "[", 
       RowBox[{"u", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "24", "}"}], ",", 
          RowBox[{"{", "25", "}"}]}], "}"}]}], "]"}], ".", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"3", "\[UndirectedEdge]", "8"}], ",", 
        RowBox[{"4", "\[UndirectedEdge]", "8"}], ",", 
        RowBox[{"7", "\[UndirectedEdge]", "8"}], ",", 
        RowBox[{"8", "\[UndirectedEdge]", "10"}], ",", 
        RowBox[{"8", "\[UndirectedEdge]", "11"}]}], "}"}]}], "-", 
     RowBox[{
      RowBox[{"Extract", "[", 
       RowBox[{"v", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "24", "}"}], ",", 
          RowBox[{"{", "25", "}"}]}], "}"}]}], "]"}], ".", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"3", "\[UndirectedEdge]", "8"}], ",", 
        RowBox[{"4", "\[UndirectedEdge]", "8"}], ",", 
        RowBox[{"7", "\[UndirectedEdge]", "8"}], ",", 
        RowBox[{"8", "\[UndirectedEdge]", "10"}], ",", 
        RowBox[{"8", "\[UndirectedEdge]", "11"}]}], "}"}]}]}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"Extract", "[", 
       RowBox[{"u", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "26", "}"}], ",", 
          RowBox[{"{", "27", "}"}]}], "}"}]}], "]"}], ".", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"2", "\[UndirectedEdge]", "9"}], ",", 
        RowBox[{"5", "\[UndirectedEdge]", "9"}], ",", 
        RowBox[{"9", "\[UndirectedEdge]", "10"}], ",", 
        RowBox[{"9", "\[UndirectedEdge]", "14"}]}], "}"}]}], "-", 
     RowBox[{
      RowBox[{"Extract", "[", 
       RowBox[{"v", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "26", "}"}], ",", 
          RowBox[{"{", "27", "}"}]}], "}"}]}], "]"}], ".", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"2", "\[UndirectedEdge]", "9"}], ",", 
        RowBox[{"5", "\[UndirectedEdge]", "9"}], ",", 
        RowBox[{"9", "\[UndirectedEdge]", "10"}], ",", 
        RowBox[{"9", "\[UndirectedEdge]", "14"}]}], "}"}]}]}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"Extract", "[", 
       RowBox[{"u", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "28", "}"}], ",", 
          RowBox[{"{", "29", "}"}]}], "}"}]}], "]"}], ".", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"1", "\[UndirectedEdge]", "10"}], ",", 
        RowBox[{"4", "\[UndirectedEdge]", "10"}], ",", 
        RowBox[{"8", "\[UndirectedEdge]", "10"}], ",", 
        RowBox[{"9", "\[UndirectedEdge]", "10"}], ",", 
        RowBox[{"10", "\[UndirectedEdge]", "12"}], ",", 
        RowBox[{"10", "\[UndirectedEdge]", "13"}]}], "}"}]}], "-", 
     RowBox[{
      RowBox[{"Extract", "[", 
       RowBox[{"v", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "28", "}"}], ",", 
          RowBox[{"{", "29", "}"}]}], "}"}]}], "]"}], ".", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"1", "\[UndirectedEdge]", "10"}], ",", 
        RowBox[{"4", "\[UndirectedEdge]", "10"}], ",", 
        RowBox[{"8", "\[UndirectedEdge]", "10"}], ",", 
        RowBox[{"9", "\[UndirectedEdge]", "10"}], ",", 
        RowBox[{"10", "\[UndirectedEdge]", "12"}], ",", 
        RowBox[{"10", "\[UndirectedEdge]", "13"}]}], "}"}]}]}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"Extract", "[", 
       RowBox[{"u", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "30", "}"}], ",", 
          RowBox[{"{", "31", "}"}], ",", 
          RowBox[{"{", "32", "}"}]}], "}"}]}], "]"}], ".", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"3", "\[UndirectedEdge]", "11"}], ",", 
        RowBox[{"8", "\[UndirectedEdge]", "11"}], ",", 
        RowBox[{"11", "\[UndirectedEdge]", "13"}], ",", 
        RowBox[{"11", "\[UndirectedEdge]", "14"}], ",", 
        RowBox[{"11", "\[UndirectedEdge]", "15"}]}], "}"}]}], "-", 
     RowBox[{
      RowBox[{"Extract", "[", 
       RowBox[{"v", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "30", "}"}], ",", 
          RowBox[{"{", "31", "}"}], ",", 
          RowBox[{"{", "32", "}"}]}], "}"}]}], "]"}], ".", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"3", "\[UndirectedEdge]", "11"}], ",", 
        RowBox[{"8", "\[UndirectedEdge]", "11"}], ",", 
        RowBox[{"11", "\[UndirectedEdge]", "13"}], ",", 
        RowBox[{"11", "\[UndirectedEdge]", "14"}], ",", 
        RowBox[{"11", "\[UndirectedEdge]", "15"}]}], "}"}]}]}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"Extract", "[", 
       RowBox[{"u", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "33", "}"}], ",", 
          RowBox[{"{", "34", "}"}]}], "}"}]}], "]"}], ".", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"2", "\[UndirectedEdge]", "12"}], ",", 
        RowBox[{"4", "\[UndirectedEdge]", "12"}], ",", 
        RowBox[{"6", "\[UndirectedEdge]", "12"}], ",", 
        RowBox[{"10", "\[UndirectedEdge]", "12"}], ",", 
        RowBox[{"12", "\[UndirectedEdge]", "13"}], ",", 
        RowBox[{"12", "\[UndirectedEdge]", "14"}]}], "}"}]}], "-", 
     RowBox[{
      RowBox[{"Extract", "[", 
       RowBox[{"v", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "33", "}"}], ",", 
          RowBox[{"{", "34", "}"}]}], "}"}]}], "]"}], ".", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"2", "\[UndirectedEdge]", "12"}], ",", 
        RowBox[{"4", "\[UndirectedEdge]", "12"}], ",", 
        RowBox[{"6", "\[UndirectedEdge]", "12"}], ",", 
        RowBox[{"10", "\[UndirectedEdge]", "12"}], ",", 
        RowBox[{"12", "\[UndirectedEdge]", "13"}], ",", 
        RowBox[{"12", "\[UndirectedEdge]", "14"}]}], "}"}]}]}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"Extract", "[", 
       RowBox[{"u", ",", 
        RowBox[{"{", 
         RowBox[{"{", "35", "}"}], "}"}]}], "]"}], ".", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"2", "\[UndirectedEdge]", "13"}], ",", 
        RowBox[{"3", "\[UndirectedEdge]", "13"}], ",", 
        RowBox[{"7", "\[UndirectedEdge]", "13"}], ",", 
        RowBox[{"10", "\[UndirectedEdge]", "13"}], ",", 
        RowBox[{"11", "\[UndirectedEdge]", "13"}], ",", 
        RowBox[{"12", "\[UndirectedEdge]", "13"}], ",", 
        RowBox[{"13", "\[UndirectedEdge]", "14"}]}], "}"}]}], "-", 
     RowBox[{
      RowBox[{"Extract", "[", 
       RowBox[{"v", ",", 
        RowBox[{"{", 
         RowBox[{"{", "35", "}"}], "}"}]}], "]"}], ".", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"2", "\[UndirectedEdge]", "13"}], ",", 
        RowBox[{"3", "\[UndirectedEdge]", "13"}], ",", 
        RowBox[{"7", "\[UndirectedEdge]", "13"}], ",", 
        RowBox[{"10", "\[UndirectedEdge]", "13"}], ",", 
        RowBox[{"11", "\[UndirectedEdge]", "13"}], ",", 
        RowBox[{"12", "\[UndirectedEdge]", "13"}], ",", 
        RowBox[{"13", "\[UndirectedEdge]", "14"}]}], "}"}]}]}], ",", "0", ",",
     "0"}], "}"}], "\[Equal]", 
  RowBox[{"{", 
   RowBox[{
   "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
    ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
   "}"}]}]], "Echo",
 CellChangeTimes->{
  3.8665639404876413`*^9},ExpressionUUID->"e16b3e85-d8ec-4b82-9ebb-\
4898467f61b8"],

Cell[BoxData[
 TemplateBox[{
  "LinearOptimization", "cteqna", 
   "\"The equality constraint \\!\\(\\*RowBox[{RowBox[{\\\"{\\\", \
RowBox[{RowBox[{RowBox[{RowBox[{\\\"Extract\\\", \\\"[\\\", \
RowBox[{\\\"u\\\", \\\",\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
\\\"1\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \\\"2\\\", \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", \\\"3\\\", \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", \\\"4\\\", \\\"}\\\"}]}], \\\"}\\\"}]}], \\\"]\\\"}], \
\\\".\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"1\\\", \
\\\"\[UndirectedEdge]\\\", \\\"3\\\"}], \\\",\\\", RowBox[{\\\"1\\\", \\\"\
\[UndirectedEdge]\\\", \\\"6\\\"}], \\\",\\\", RowBox[{\\\"1\\\", \\\"\
\[UndirectedEdge]\\\", \\\"10\\\"}], \\\",\\\", RowBox[{\\\"1\\\", \\\"\
\[UndirectedEdge]\\\", \\\"14\\\"}]}], \\\"}\\\"}]}], \\\"-\\\", \
RowBox[{RowBox[{\\\"Extract\\\", \\\"[\\\", RowBox[{\\\"v\\\", \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\
\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\
\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}]}], \
\\\"}\\\"}]}], \\\"]\\\"}], \\\".\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"1\\\", \\\"\[UndirectedEdge]\\\", \\\"3\\\"}], \\\",\\\", \
RowBox[{\\\"1\\\", \\\"\[UndirectedEdge]\\\", \\\"6\\\"}], \\\",\\\", \
RowBox[{\\\"1\\\", \\\"\[UndirectedEdge]\\\", \\\"10\\\"}], \\\",\\\", \
RowBox[{\\\"1\\\", \\\"\[UndirectedEdge]\\\", \\\"14\\\"}]}], \
\\\"}\\\"}]}]}], \\\",\\\", RowBox[{RowBox[{RowBox[{\\\"Extract\\\", \
\\\"[\\\", RowBox[{\\\"u\\\", \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", \\\"5\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\
\", \\\"6\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \\\"7\\\", \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \\\"8\\\", \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", \\\"9\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
\\\"10\\\", \\\"}\\\"}]}], \\\"}\\\"}]}], \\\"]\\\"}], \\\".\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"2\\\", \\\"\[UndirectedEdge]\\\", \
\\\"3\\\"}], \\\",\\\", RowBox[{\\\"2\\\", \\\"\[UndirectedEdge]\\\", \\\"5\\\
\"}], \\\",\\\", RowBox[{\\\"2\\\", \\\"\[UndirectedEdge]\\\", \\\"7\\\"}], \
\\\",\\\", RowBox[{\\\"2\\\", \\\"\[UndirectedEdge]\\\", \\\"9\\\"}], \\\",\\\
\", RowBox[{\\\"2\\\", \\\"\[UndirectedEdge]\\\", \\\"12\\\"}], \\\",\\\", \
RowBox[{\\\"2\\\", \\\"\[UndirectedEdge]\\\", \\\"13\\\"}]}], \\\"}\\\"}]}], \
\\\"-\\\", RowBox[{RowBox[{\\\"Extract\\\", \\\"[\\\", RowBox[{\\\"v\\\", \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\
\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\
\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}]}], \
\\\"}\\\"}]}], \\\"]\\\"}], \\\".\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"2\\\", \\\"\[UndirectedEdge]\\\", \\\"3\\\"}], \\\",\\\", \
RowBox[{\\\"2\\\", \\\"\[UndirectedEdge]\\\", \\\"5\\\"}], \\\",\\\", \
RowBox[{\\\"2\\\", \\\"\[UndirectedEdge]\\\", \\\"7\\\"}], \\\",\\\", \
RowBox[{\\\"2\\\", \\\"\[UndirectedEdge]\\\", \\\"9\\\"}], \\\",\\\", \
RowBox[{\\\"2\\\", \\\"\[UndirectedEdge]\\\", \\\"12\\\"}], \\\",\\\", \
RowBox[{\\\"2\\\", \\\"\[UndirectedEdge]\\\", \\\"13\\\"}]}], \
\\\"}\\\"}]}]}], \\\",\\\", RowBox[{RowBox[{RowBox[{\\\"Extract\\\", \
\\\"[\\\", RowBox[{\\\"u\\\", \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", \\\"11\\\", \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", \\\"12\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
\\\"13\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \\\"14\\\", \
\\\"}\\\"}]}], \\\"}\\\"}]}], \\\"]\\\"}], \\\".\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"1\\\", \\\"\[UndirectedEdge]\\\", \\\"3\\\"}], \\\",\\\", \
RowBox[{\\\"2\\\", \\\"\[UndirectedEdge]\\\", \\\"3\\\"}], \\\",\\\", \
RowBox[{\\\"3\\\", \\\"\[UndirectedEdge]\\\", \\\"4\\\"}], \\\",\\\", \
RowBox[{\\\"3\\\", \\\"\[UndirectedEdge]\\\", \\\"8\\\"}], \\\",\\\", \
RowBox[{\\\"3\\\", \\\"\[UndirectedEdge]\\\", \\\"11\\\"}], \\\",\\\", \
RowBox[{\\\"3\\\", \\\"\[UndirectedEdge]\\\", \\\"13\\\"}]}], \\\"}\\\"}]}], \
\\\"-\\\", RowBox[{RowBox[{\\\"Extract\\\", \\\"[\\\", RowBox[{\\\"v\\\", \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\
\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}]}], \\\"}\\\"}]}], \
\\\"]\\\"}], \\\".\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"1\\\", \\\"\
\[UndirectedEdge]\\\", \\\"3\\\"}], \\\",\\\", RowBox[{\\\"2\\\", \\\"\
\[UndirectedEdge]\\\", \\\"3\\\"}], \\\",\\\", RowBox[{\\\"3\\\", \\\"\
\[UndirectedEdge]\\\", \\\"4\\\"}], \\\",\\\", RowBox[{\\\"3\\\", \\\"\
\[UndirectedEdge]\\\", \\\"8\\\"}], \\\",\\\", RowBox[{\\\"3\\\", \\\"\
\[UndirectedEdge]\\\", \\\"11\\\"}], \\\",\\\", RowBox[{\\\"3\\\", \\\"\
\[UndirectedEdge]\\\", \\\"13\\\"}]}], \\\"}\\\"}]}]}], \\\",\\\", RowBox[{\\\
\"\[LeftSkeleton]\\\", \\\"6\\\", \\\"\[RightSkeleton]\\\"}], \\\",\\\", \
RowBox[{RowBox[{RowBox[{\\\"Extract\\\", \\\"[\\\", RowBox[{\\\"u\\\", \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \\\"28\\\", \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \\\"29\\\", \\\"}\\\"}]}], \\\"}\\\
\"}]}], \\\"]\\\"}], \\\".\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"1\\\", \
\\\"\[UndirectedEdge]\\\", \\\"10\\\"}], \\\",\\\", RowBox[{\\\"4\\\", \\\"\
\[UndirectedEdge]\\\", \\\"10\\\"}], \\\",\\\", RowBox[{\\\"8\\\", \\\"\
\[UndirectedEdge]\\\", \\\"10\\\"}], \\\",\\\", RowBox[{\\\"9\\\", \\\"\
\[UndirectedEdge]\\\", \\\"10\\\"}], \\\",\\\", RowBox[{\\\"10\\\", \\\"\
\[UndirectedEdge]\\\", \\\"12\\\"}], \\\",\\\", RowBox[{\\\"10\\\", \\\"\
\[UndirectedEdge]\\\", \\\"13\\\"}]}], \\\"}\\\"}]}], \\\"-\\\", \
RowBox[{RowBox[{\\\"Extract\\\", \\\"[\\\", RowBox[{\\\"v\\\", \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\
\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}]}], \\\"}\\\"}]}], \
\\\"]\\\"}], \\\".\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"1\\\", \\\"\
\[UndirectedEdge]\\\", \\\"10\\\"}], \\\",\\\", RowBox[{\\\"4\\\", \\\"\
\[UndirectedEdge]\\\", \\\"10\\\"}], \\\",\\\", RowBox[{\\\"8\\\", \\\"\
\[UndirectedEdge]\\\", \\\"10\\\"}], \\\",\\\", RowBox[{\\\"9\\\", \\\"\
\[UndirectedEdge]\\\", \\\"10\\\"}], \\\",\\\", RowBox[{\\\"10\\\", \\\"\
\[UndirectedEdge]\\\", \\\"12\\\"}], \\\",\\\", RowBox[{\\\"10\\\", \\\"\
\[UndirectedEdge]\\\", \\\"13\\\"}]}], \\\"}\\\"}]}]}], \\\",\\\", RowBox[{\\\
\"\[LeftSkeleton]\\\", \\\"5\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \
\\\"\[Equal]\\\", RowBox[{\\\"{\\\", RowBox[{\\\"0\\\", \\\",\\\", \\\"0\\\", \
\\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \
\\\",\\\", \\\"0\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"5\\\", \
\\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}]}]\\) is nonlinear. Equality \
constraints must be affine.\"", 2, 185, 68, 19443120556376979017, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8665638646495395`*^9, 3.866563941984394*^9},
 CellLabel->
  "During evaluation of \
In[185]:=",ExpressionUUID->"cf347a12-5248-4271-bb82-8bc9b869fbe6"],

Cell[BoxData[
 TemplateBox[{
  "LinearOptimization", "cteqna", 
   "\"The equality constraint \\!\\(\\*RowBox[{RowBox[{\\\"{\\\", \
RowBox[{RowBox[{RowBox[{RowBox[{\\\"Extract\\\", \\\"[\\\", \
RowBox[{\\\"u\\\", \\\",\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
\\\"1\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \\\"2\\\", \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", \\\"3\\\", \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", \\\"4\\\", \\\"}\\\"}]}], \\\"}\\\"}]}], \\\"]\\\"}], \
\\\".\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"1\\\", \
\\\"\[UndirectedEdge]\\\", \\\"3\\\"}], \\\",\\\", RowBox[{\\\"1\\\", \\\"\
\[UndirectedEdge]\\\", \\\"6\\\"}], \\\",\\\", RowBox[{\\\"1\\\", \\\"\
\[UndirectedEdge]\\\", \\\"10\\\"}], \\\",\\\", RowBox[{\\\"1\\\", \\\"\
\[UndirectedEdge]\\\", \\\"14\\\"}]}], \\\"}\\\"}]}], \\\"-\\\", \
RowBox[{RowBox[{\\\"Extract\\\", \\\"[\\\", RowBox[{\\\"v\\\", \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\
\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\
\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}]}], \
\\\"}\\\"}]}], \\\"]\\\"}], \\\".\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"1\\\", \\\"\[UndirectedEdge]\\\", \\\"3\\\"}], \\\",\\\", \
RowBox[{\\\"1\\\", \\\"\[UndirectedEdge]\\\", \\\"6\\\"}], \\\",\\\", \
RowBox[{\\\"1\\\", \\\"\[UndirectedEdge]\\\", \\\"10\\\"}], \\\",\\\", \
RowBox[{\\\"1\\\", \\\"\[UndirectedEdge]\\\", \\\"14\\\"}]}], \
\\\"}\\\"}]}]}], \\\",\\\", RowBox[{RowBox[{RowBox[{\\\"Extract\\\", \
\\\"[\\\", RowBox[{\\\"u\\\", \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", \\\"5\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\
\", \\\"6\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \\\"7\\\", \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \\\"8\\\", \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", \\\"9\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
\\\"10\\\", \\\"}\\\"}]}], \\\"}\\\"}]}], \\\"]\\\"}], \\\".\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"2\\\", \\\"\[UndirectedEdge]\\\", \
\\\"3\\\"}], \\\",\\\", RowBox[{\\\"2\\\", \\\"\[UndirectedEdge]\\\", \\\"5\\\
\"}], \\\",\\\", RowBox[{\\\"2\\\", \\\"\[UndirectedEdge]\\\", \\\"7\\\"}], \
\\\",\\\", RowBox[{\\\"2\\\", \\\"\[UndirectedEdge]\\\", \\\"9\\\"}], \\\",\\\
\", RowBox[{\\\"2\\\", \\\"\[UndirectedEdge]\\\", \\\"12\\\"}], \\\",\\\", \
RowBox[{\\\"2\\\", \\\"\[UndirectedEdge]\\\", \\\"13\\\"}]}], \\\"}\\\"}]}], \
\\\"-\\\", RowBox[{RowBox[{\\\"Extract\\\", \\\"[\\\", RowBox[{\\\"v\\\", \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\
\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\
\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}]}], \
\\\"}\\\"}]}], \\\"]\\\"}], \\\".\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"2\\\", \\\"\[UndirectedEdge]\\\", \\\"3\\\"}], \\\",\\\", \
RowBox[{\\\"2\\\", \\\"\[UndirectedEdge]\\\", \\\"5\\\"}], \\\",\\\", \
RowBox[{\\\"2\\\", \\\"\[UndirectedEdge]\\\", \\\"7\\\"}], \\\",\\\", \
RowBox[{\\\"2\\\", \\\"\[UndirectedEdge]\\\", \\\"9\\\"}], \\\",\\\", \
RowBox[{\\\"2\\\", \\\"\[UndirectedEdge]\\\", \\\"12\\\"}], \\\",\\\", \
RowBox[{\\\"2\\\", \\\"\[UndirectedEdge]\\\", \\\"13\\\"}]}], \
\\\"}\\\"}]}]}], \\\",\\\", RowBox[{RowBox[{RowBox[{\\\"Extract\\\", \
\\\"[\\\", RowBox[{\\\"u\\\", \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", \\\"11\\\", \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", \\\"12\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
\\\"13\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \\\"14\\\", \
\\\"}\\\"}]}], \\\"}\\\"}]}], \\\"]\\\"}], \\\".\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"1\\\", \\\"\[UndirectedEdge]\\\", \\\"3\\\"}], \\\",\\\", \
RowBox[{\\\"2\\\", \\\"\[UndirectedEdge]\\\", \\\"3\\\"}], \\\",\\\", \
RowBox[{\\\"3\\\", \\\"\[UndirectedEdge]\\\", \\\"4\\\"}], \\\",\\\", \
RowBox[{\\\"3\\\", \\\"\[UndirectedEdge]\\\", \\\"8\\\"}], \\\",\\\", \
RowBox[{\\\"3\\\", \\\"\[UndirectedEdge]\\\", \\\"11\\\"}], \\\",\\\", \
RowBox[{\\\"3\\\", \\\"\[UndirectedEdge]\\\", \\\"13\\\"}]}], \\\"}\\\"}]}], \
\\\"-\\\", RowBox[{RowBox[{\\\"Extract\\\", \\\"[\\\", RowBox[{\\\"v\\\", \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\
\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}]}], \\\"}\\\"}]}], \
\\\"]\\\"}], \\\".\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"1\\\", \\\"\
\[UndirectedEdge]\\\", \\\"3\\\"}], \\\",\\\", RowBox[{\\\"2\\\", \\\"\
\[UndirectedEdge]\\\", \\\"3\\\"}], \\\",\\\", RowBox[{\\\"3\\\", \\\"\
\[UndirectedEdge]\\\", \\\"4\\\"}], \\\",\\\", RowBox[{\\\"3\\\", \\\"\
\[UndirectedEdge]\\\", \\\"8\\\"}], \\\",\\\", RowBox[{\\\"3\\\", \\\"\
\[UndirectedEdge]\\\", \\\"11\\\"}], \\\",\\\", RowBox[{\\\"3\\\", \\\"\
\[UndirectedEdge]\\\", \\\"13\\\"}]}], \\\"}\\\"}]}]}], \\\",\\\", RowBox[{\\\
\"\[LeftSkeleton]\\\", \\\"6\\\", \\\"\[RightSkeleton]\\\"}], \\\",\\\", \
RowBox[{RowBox[{RowBox[{\\\"Extract\\\", \\\"[\\\", RowBox[{\\\"u\\\", \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \\\"28\\\", \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \\\"29\\\", \\\"}\\\"}]}], \\\"}\\\
\"}]}], \\\"]\\\"}], \\\".\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"1\\\", \
\\\"\[UndirectedEdge]\\\", \\\"10\\\"}], \\\",\\\", RowBox[{\\\"4\\\", \\\"\
\[UndirectedEdge]\\\", \\\"10\\\"}], \\\",\\\", RowBox[{\\\"8\\\", \\\"\
\[UndirectedEdge]\\\", \\\"10\\\"}], \\\",\\\", RowBox[{\\\"9\\\", \\\"\
\[UndirectedEdge]\\\", \\\"10\\\"}], \\\",\\\", RowBox[{\\\"10\\\", \\\"\
\[UndirectedEdge]\\\", \\\"12\\\"}], \\\",\\\", RowBox[{\\\"10\\\", \\\"\
\[UndirectedEdge]\\\", \\\"13\\\"}]}], \\\"}\\\"}]}], \\\"-\\\", \
RowBox[{RowBox[{\\\"Extract\\\", \\\"[\\\", RowBox[{\\\"v\\\", \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\
\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}]}], \\\"}\\\"}]}], \
\\\"]\\\"}], \\\".\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"1\\\", \\\"\
\[UndirectedEdge]\\\", \\\"10\\\"}], \\\",\\\", RowBox[{\\\"4\\\", \\\"\
\[UndirectedEdge]\\\", \\\"10\\\"}], \\\",\\\", RowBox[{\\\"8\\\", \\\"\
\[UndirectedEdge]\\\", \\\"10\\\"}], \\\",\\\", RowBox[{\\\"9\\\", \\\"\
\[UndirectedEdge]\\\", \\\"10\\\"}], \\\",\\\", RowBox[{\\\"10\\\", \\\"\
\[UndirectedEdge]\\\", \\\"12\\\"}], \\\",\\\", RowBox[{\\\"10\\\", \\\"\
\[UndirectedEdge]\\\", \\\"13\\\"}]}], \\\"}\\\"}]}]}], \\\",\\\", RowBox[{\\\
\"\[LeftSkeleton]\\\", \\\"5\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \
\\\"\[Equal]\\\", RowBox[{\\\"{\\\", RowBox[{\\\"0\\\", \\\",\\\", \\\"0\\\", \
\\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \
\\\",\\\", \\\"0\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"5\\\", \
\\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}]}]\\) is nonlinear. Equality \
constraints must be affine.\"", 2, 185, 69, 19443120556376979017, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8665638646495395`*^9, 3.8665639434932942`*^9},
 CellLabel->
  "During evaluation of \
In[185]:=",ExpressionUUID->"15fc2acd-e624-4a4b-b7f4-2d33dcab6c20"],

Cell[BoxData[
 RowBox[{"LinearOptimization", "[", 
  RowBox[{
   RowBox[{"-", 
    RowBox[{"Total", "[", 
     RowBox[{"u", "+", "v"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"u", "+", "v"}], "\[VectorGreaterEqual]", "1"}], ",", 
     RowBox[{"u", "\[VectorGreaterEqual]", "0"}], ",", 
     RowBox[{"v", "\[VectorGreaterEqual]", "0"}], ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Extract", "[", 
           RowBox[{"u", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", "1", "}"}], ",", 
              RowBox[{"{", "2", "}"}], ",", 
              RowBox[{"{", "3", "}"}], ",", 
              RowBox[{"{", "4", "}"}]}], "}"}]}], "]"}], ".", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1", "\[UndirectedEdge]", "3"}], ",", 
            RowBox[{"1", "\[UndirectedEdge]", "6"}], ",", 
            RowBox[{"1", "\[UndirectedEdge]", "10"}], ",", 
            RowBox[{"1", "\[UndirectedEdge]", "14"}]}], "}"}]}], "-", 
         RowBox[{
          RowBox[{"Extract", "[", 
           RowBox[{"v", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", "1", "}"}], ",", 
              RowBox[{"{", "2", "}"}], ",", 
              RowBox[{"{", "3", "}"}], ",", 
              RowBox[{"{", "4", "}"}]}], "}"}]}], "]"}], ".", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1", "\[UndirectedEdge]", "3"}], ",", 
            RowBox[{"1", "\[UndirectedEdge]", "6"}], ",", 
            RowBox[{"1", "\[UndirectedEdge]", "10"}], ",", 
            RowBox[{"1", "\[UndirectedEdge]", "14"}]}], "}"}]}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Extract", "[", 
           RowBox[{"u", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", "5", "}"}], ",", 
              RowBox[{"{", "6", "}"}], ",", 
              RowBox[{"{", "7", "}"}], ",", 
              RowBox[{"{", "8", "}"}], ",", 
              RowBox[{"{", "9", "}"}], ",", 
              RowBox[{"{", "10", "}"}]}], "}"}]}], "]"}], ".", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"2", "\[UndirectedEdge]", "3"}], ",", 
            RowBox[{"2", "\[UndirectedEdge]", "5"}], ",", 
            RowBox[{"2", "\[UndirectedEdge]", "7"}], ",", 
            RowBox[{"2", "\[UndirectedEdge]", "9"}], ",", 
            RowBox[{"2", "\[UndirectedEdge]", "12"}], ",", 
            RowBox[{"2", "\[UndirectedEdge]", "13"}]}], "}"}]}], "-", 
         RowBox[{
          RowBox[{"Extract", "[", 
           RowBox[{"v", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", "5", "}"}], ",", 
              RowBox[{"{", "6", "}"}], ",", 
              RowBox[{"{", "7", "}"}], ",", 
              RowBox[{"{", "8", "}"}], ",", 
              RowBox[{"{", "9", "}"}], ",", 
              RowBox[{"{", "10", "}"}]}], "}"}]}], "]"}], ".", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"2", "\[UndirectedEdge]", "3"}], ",", 
            RowBox[{"2", "\[UndirectedEdge]", "5"}], ",", 
            RowBox[{"2", "\[UndirectedEdge]", "7"}], ",", 
            RowBox[{"2", "\[UndirectedEdge]", "9"}], ",", 
            RowBox[{"2", "\[UndirectedEdge]", "12"}], ",", 
            RowBox[{"2", "\[UndirectedEdge]", "13"}]}], "}"}]}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Extract", "[", 
           RowBox[{"u", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", "11", "}"}], ",", 
              RowBox[{"{", "12", "}"}], ",", 
              RowBox[{"{", "13", "}"}], ",", 
              RowBox[{"{", "14", "}"}]}], "}"}]}], "]"}], ".", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1", "\[UndirectedEdge]", "3"}], ",", 
            RowBox[{"2", "\[UndirectedEdge]", "3"}], ",", 
            RowBox[{"3", "\[UndirectedEdge]", "4"}], ",", 
            RowBox[{"3", "\[UndirectedEdge]", "8"}], ",", 
            RowBox[{"3", "\[UndirectedEdge]", "11"}], ",", 
            RowBox[{"3", "\[UndirectedEdge]", "13"}]}], "}"}]}], "-", 
         RowBox[{
          RowBox[{"Extract", "[", 
           RowBox[{"v", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", "11", "}"}], ",", 
              RowBox[{"{", "12", "}"}], ",", 
              RowBox[{"{", "13", "}"}], ",", 
              RowBox[{"{", "14", "}"}]}], "}"}]}], "]"}], ".", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1", "\[UndirectedEdge]", "3"}], ",", 
            RowBox[{"2", "\[UndirectedEdge]", "3"}], ",", 
            RowBox[{"3", "\[UndirectedEdge]", "4"}], ",", 
            RowBox[{"3", "\[UndirectedEdge]", "8"}], ",", 
            RowBox[{"3", "\[UndirectedEdge]", "11"}], ",", 
            RowBox[{"3", "\[UndirectedEdge]", "13"}]}], "}"}]}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Extract", "[", 
           RowBox[{"u", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", "15", "}"}], ",", 
              RowBox[{"{", "16", "}"}], ",", 
              RowBox[{"{", "17", "}"}], ",", 
              RowBox[{"{", "18", "}"}]}], "}"}]}], "]"}], ".", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"3", "\[UndirectedEdge]", "4"}], ",", 
            RowBox[{"4", "\[UndirectedEdge]", "6"}], ",", 
            RowBox[{"4", "\[UndirectedEdge]", "8"}], ",", 
            RowBox[{"4", "\[UndirectedEdge]", "10"}], ",", 
            RowBox[{"4", "\[UndirectedEdge]", "12"}]}], "}"}]}], "-", 
         RowBox[{
          RowBox[{"Extract", "[", 
           RowBox[{"v", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", "15", "}"}], ",", 
              RowBox[{"{", "16", "}"}], ",", 
              RowBox[{"{", "17", "}"}], ",", 
              RowBox[{"{", "18", "}"}]}], "}"}]}], "]"}], ".", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"3", "\[UndirectedEdge]", "4"}], ",", 
            RowBox[{"4", "\[UndirectedEdge]", "6"}], ",", 
            RowBox[{"4", "\[UndirectedEdge]", "8"}], ",", 
            RowBox[{"4", "\[UndirectedEdge]", "10"}], ",", 
            RowBox[{"4", "\[UndirectedEdge]", "12"}]}], "}"}]}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Extract", "[", 
           RowBox[{"u", ",", 
            RowBox[{"{", 
             RowBox[{"{", "19", "}"}], "}"}]}], "]"}], ".", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"2", "\[UndirectedEdge]", "5"}], ",", 
            RowBox[{"5", "\[UndirectedEdge]", "9"}]}], "}"}]}], "-", 
         RowBox[{
          RowBox[{"Extract", "[", 
           RowBox[{"v", ",", 
            RowBox[{"{", 
             RowBox[{"{", "19", "}"}], "}"}]}], "]"}], ".", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"2", "\[UndirectedEdge]", "5"}], ",", 
            RowBox[{"5", "\[UndirectedEdge]", "9"}]}], "}"}]}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Extract", "[", 
           RowBox[{"u", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", "20", "}"}], ",", 
              RowBox[{"{", "21", "}"}]}], "}"}]}], "]"}], ".", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1", "\[UndirectedEdge]", "6"}], ",", 
            RowBox[{"4", "\[UndirectedEdge]", "6"}], ",", 
            RowBox[{"6", "\[UndirectedEdge]", "12"}], ",", 
            RowBox[{"6", "\[UndirectedEdge]", "14"}]}], "}"}]}], "-", 
         RowBox[{
          RowBox[{"Extract", "[", 
           RowBox[{"v", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", "20", "}"}], ",", 
              RowBox[{"{", "21", "}"}]}], "}"}]}], "]"}], ".", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1", "\[UndirectedEdge]", "6"}], ",", 
            RowBox[{"4", "\[UndirectedEdge]", "6"}], ",", 
            RowBox[{"6", "\[UndirectedEdge]", "12"}], ",", 
            RowBox[{"6", "\[UndirectedEdge]", "14"}]}], "}"}]}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Extract", "[", 
           RowBox[{"u", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", "22", "}"}], ",", 
              RowBox[{"{", "23", "}"}]}], "}"}]}], "]"}], ".", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"2", "\[UndirectedEdge]", "7"}], ",", 
            RowBox[{"7", "\[UndirectedEdge]", "8"}], ",", 
            RowBox[{"7", "\[UndirectedEdge]", "13"}]}], "}"}]}], "-", 
         RowBox[{
          RowBox[{"Extract", "[", 
           RowBox[{"v", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", "22", "}"}], ",", 
              RowBox[{"{", "23", "}"}]}], "}"}]}], "]"}], ".", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"2", "\[UndirectedEdge]", "7"}], ",", 
            RowBox[{"7", "\[UndirectedEdge]", "8"}], ",", 
            RowBox[{"7", "\[UndirectedEdge]", "13"}]}], "}"}]}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Extract", "[", 
           RowBox[{"u", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", "24", "}"}], ",", 
              RowBox[{"{", "25", "}"}]}], "}"}]}], "]"}], ".", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"3", "\[UndirectedEdge]", "8"}], ",", 
            RowBox[{"4", "\[UndirectedEdge]", "8"}], ",", 
            RowBox[{"7", "\[UndirectedEdge]", "8"}], ",", 
            RowBox[{"8", "\[UndirectedEdge]", "10"}], ",", 
            RowBox[{"8", "\[UndirectedEdge]", "11"}]}], "}"}]}], "-", 
         RowBox[{
          RowBox[{"Extract", "[", 
           RowBox[{"v", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", "24", "}"}], ",", 
              RowBox[{"{", "25", "}"}]}], "}"}]}], "]"}], ".", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"3", "\[UndirectedEdge]", "8"}], ",", 
            RowBox[{"4", "\[UndirectedEdge]", "8"}], ",", 
            RowBox[{"7", "\[UndirectedEdge]", "8"}], ",", 
            RowBox[{"8", "\[UndirectedEdge]", "10"}], ",", 
            RowBox[{"8", "\[UndirectedEdge]", "11"}]}], "}"}]}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Extract", "[", 
           RowBox[{"u", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", "26", "}"}], ",", 
              RowBox[{"{", "27", "}"}]}], "}"}]}], "]"}], ".", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"2", "\[UndirectedEdge]", "9"}], ",", 
            RowBox[{"5", "\[UndirectedEdge]", "9"}], ",", 
            RowBox[{"9", "\[UndirectedEdge]", "10"}], ",", 
            RowBox[{"9", "\[UndirectedEdge]", "14"}]}], "}"}]}], "-", 
         RowBox[{
          RowBox[{"Extract", "[", 
           RowBox[{"v", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", "26", "}"}], ",", 
              RowBox[{"{", "27", "}"}]}], "}"}]}], "]"}], ".", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"2", "\[UndirectedEdge]", "9"}], ",", 
            RowBox[{"5", "\[UndirectedEdge]", "9"}], ",", 
            RowBox[{"9", "\[UndirectedEdge]", "10"}], ",", 
            RowBox[{"9", "\[UndirectedEdge]", "14"}]}], "}"}]}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Extract", "[", 
           RowBox[{"u", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", "28", "}"}], ",", 
              RowBox[{"{", "29", "}"}]}], "}"}]}], "]"}], ".", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1", "\[UndirectedEdge]", "10"}], ",", 
            RowBox[{"4", "\[UndirectedEdge]", "10"}], ",", 
            RowBox[{"8", "\[UndirectedEdge]", "10"}], ",", 
            RowBox[{"9", "\[UndirectedEdge]", "10"}], ",", 
            RowBox[{"10", "\[UndirectedEdge]", "12"}], ",", 
            RowBox[{"10", "\[UndirectedEdge]", "13"}]}], "}"}]}], "-", 
         RowBox[{
          RowBox[{"Extract", "[", 
           RowBox[{"v", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", "28", "}"}], ",", 
              RowBox[{"{", "29", "}"}]}], "}"}]}], "]"}], ".", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1", "\[UndirectedEdge]", "10"}], ",", 
            RowBox[{"4", "\[UndirectedEdge]", "10"}], ",", 
            RowBox[{"8", "\[UndirectedEdge]", "10"}], ",", 
            RowBox[{"9", "\[UndirectedEdge]", "10"}], ",", 
            RowBox[{"10", "\[UndirectedEdge]", "12"}], ",", 
            RowBox[{"10", "\[UndirectedEdge]", "13"}]}], "}"}]}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Extract", "[", 
           RowBox[{"u", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", "30", "}"}], ",", 
              RowBox[{"{", "31", "}"}], ",", 
              RowBox[{"{", "32", "}"}]}], "}"}]}], "]"}], ".", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"3", "\[UndirectedEdge]", "11"}], ",", 
            RowBox[{"8", "\[UndirectedEdge]", "11"}], ",", 
            RowBox[{"11", "\[UndirectedEdge]", "13"}], ",", 
            RowBox[{"11", "\[UndirectedEdge]", "14"}], ",", 
            RowBox[{"11", "\[UndirectedEdge]", "15"}]}], "}"}]}], "-", 
         RowBox[{
          RowBox[{"Extract", "[", 
           RowBox[{"v", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", "30", "}"}], ",", 
              RowBox[{"{", "31", "}"}], ",", 
              RowBox[{"{", "32", "}"}]}], "}"}]}], "]"}], ".", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"3", "\[UndirectedEdge]", "11"}], ",", 
            RowBox[{"8", "\[UndirectedEdge]", "11"}], ",", 
            RowBox[{"11", "\[UndirectedEdge]", "13"}], ",", 
            RowBox[{"11", "\[UndirectedEdge]", "14"}], ",", 
            RowBox[{"11", "\[UndirectedEdge]", "15"}]}], "}"}]}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Extract", "[", 
           RowBox[{"u", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", "33", "}"}], ",", 
              RowBox[{"{", "34", "}"}]}], "}"}]}], "]"}], ".", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"2", "\[UndirectedEdge]", "12"}], ",", 
            RowBox[{"4", "\[UndirectedEdge]", "12"}], ",", 
            RowBox[{"6", "\[UndirectedEdge]", "12"}], ",", 
            RowBox[{"10", "\[UndirectedEdge]", "12"}], ",", 
            RowBox[{"12", "\[UndirectedEdge]", "13"}], ",", 
            RowBox[{"12", "\[UndirectedEdge]", "14"}]}], "}"}]}], "-", 
         RowBox[{
          RowBox[{"Extract", "[", 
           RowBox[{"v", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", "33", "}"}], ",", 
              RowBox[{"{", "34", "}"}]}], "}"}]}], "]"}], ".", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"2", "\[UndirectedEdge]", "12"}], ",", 
            RowBox[{"4", "\[UndirectedEdge]", "12"}], ",", 
            RowBox[{"6", "\[UndirectedEdge]", "12"}], ",", 
            RowBox[{"10", "\[UndirectedEdge]", "12"}], ",", 
            RowBox[{"12", "\[UndirectedEdge]", "13"}], ",", 
            RowBox[{"12", "\[UndirectedEdge]", "14"}]}], "}"}]}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Extract", "[", 
           RowBox[{"u", ",", 
            RowBox[{"{", 
             RowBox[{"{", "35", "}"}], "}"}]}], "]"}], ".", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"2", "\[UndirectedEdge]", "13"}], ",", 
            RowBox[{"3", "\[UndirectedEdge]", "13"}], ",", 
            RowBox[{"7", "\[UndirectedEdge]", "13"}], ",", 
            RowBox[{"10", "\[UndirectedEdge]", "13"}], ",", 
            RowBox[{"11", "\[UndirectedEdge]", "13"}], ",", 
            RowBox[{"12", "\[UndirectedEdge]", "13"}], ",", 
            RowBox[{"13", "\[UndirectedEdge]", "14"}]}], "}"}]}], "-", 
         RowBox[{
          RowBox[{"Extract", "[", 
           RowBox[{"v", ",", 
            RowBox[{"{", 
             RowBox[{"{", "35", "}"}], "}"}]}], "]"}], ".", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"2", "\[UndirectedEdge]", "13"}], ",", 
            RowBox[{"3", "\[UndirectedEdge]", "13"}], ",", 
            RowBox[{"7", "\[UndirectedEdge]", "13"}], ",", 
            RowBox[{"10", "\[UndirectedEdge]", "13"}], ",", 
            RowBox[{"11", "\[UndirectedEdge]", "13"}], ",", 
            RowBox[{"12", "\[UndirectedEdge]", "13"}], ",", 
            RowBox[{"13", "\[UndirectedEdge]", "14"}]}], "}"}]}]}], ",", "0", 
        ",", "0"}], "}"}], "\[Equal]", 
      RowBox[{"{", 
       RowBox[{
       "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
        "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
        "0"}], "}"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"u", "\[Element]", 
      RowBox[{"Vectors", "[", 
       RowBox[{"15", ",", 
        TemplateBox[{},
         "Integers"]}], "]"}]}], ",", 
     RowBox[{"v", "\[Element]", 
      RowBox[{"Vectors", "[", 
       RowBox[{"15", ",", 
        TemplateBox[{},
         "Integers"]}], "]"}]}]}], "}"}]}], "]"}]], "Output",
 CellChangeTimes->{3.8665638879634933`*^9, 3.866563944989346*^9},
 CellLabel->
  "Out[185]=",ExpressionUUID->"05c239a4-fb96-47c2-a261-48db64cf8ea4"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"ClearAll", "[", 
  RowBox[{"u", ",", "v"}], "]"}]], "Input",
 CellChangeTimes->{{3.866563922060421*^9, 3.8665639246565404`*^9}},
 CellLabel->
  "In[184]:=",ExpressionUUID->"abaed4f0-be82-4b9d-836d-774cdc56b2b2"]
}, Open  ]]
},
WindowSize->{1141.2, 580.8},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"13.1 for Microsoft Windows (64-bit) (June 16, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"60bc237a-c184-42f3-a129-97d43f156d93"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 231, 4, 67, "Section",ExpressionUUID->"e3f4ee59-b7bc-4e47-9ad9-5a979013497e"],
Cell[814, 28, 480, 11, 28, "Input",ExpressionUUID->"053cf9d7-f327-4a56-9d87-01b6320073f6"],
Cell[1297, 41, 501, 11, 28, "Input",ExpressionUUID->"671571c6-6db0-4ed9-af89-d1220b1381fa"],
Cell[1801, 54, 618, 14, 28, "Input",ExpressionUUID->"822b3962-c377-4405-83b7-1854278b1b54"],
Cell[2422, 70, 71, 0, 35, "Text",ExpressionUUID->"dce98b52-32e6-49cd-86b5-a8cc28e91a4a"],
Cell[2496, 72, 4575, 110, 257, "Input",ExpressionUUID->"953750f1-6766-48e9-9357-a396993c4c2b"],
Cell[CellGroupData[{
Cell[7096, 186, 257, 5, 28, "Input",ExpressionUUID->"3c019a71-88a7-48ea-83b3-bb31cf0afaff"],
Cell[7356, 193, 1977, 37, 367, "Output",ExpressionUUID->"614347a5-3198-4d04-89dd-7b4085bab52e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9370, 235, 342, 8, 28, "Input",ExpressionUUID->"95444a5e-a1d1-430e-ab97-1a9c6cedab24"],
Cell[9715, 245, 1925, 39, 148, "Output",ExpressionUUID->"da079328-cee9-4286-bbb7-28db812ee622"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11677, 289, 377, 9, 28, "Input",ExpressionUUID->"479744e7-c516-4800-bb5d-723da6ca104e"],
Cell[12057, 300, 1987, 47, 389, "Output",ExpressionUUID->"52b654c1-b2b5-4573-810a-35b0b4f0c846"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14081, 352, 167, 3, 45, "Subsubsection",ExpressionUUID->"fd15a751-657a-4ca5-82a4-83304dc58d86"],
Cell[CellGroupData[{
Cell[14273, 359, 373, 9, 28, "Input",ExpressionUUID->"475f669e-8b95-4412-a480-55cdb12667c2"],
Cell[14649, 370, 2596, 67, 71, "Output",ExpressionUUID->"4c5b7fff-f9ab-4861-accd-43ca3c1f2d8f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17282, 442, 442, 11, 28, "Input",ExpressionUUID->"11915d24-5743-442e-9f0b-fd19373bf7d8"],
Cell[17727, 455, 2594, 67, 71, "Output",ExpressionUUID->"dd762f54-7ad9-487a-936f-a976b8eb26aa"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[20370, 528, 165, 3, 45, "Subsubsection",ExpressionUUID->"31921492-0236-4c55-a44c-1a64f1da9d43"],
Cell[CellGroupData[{
Cell[20560, 535, 367, 8, 28, "Input",ExpressionUUID->"57ae11d7-c6bc-479e-9b0c-d0fe5ad0806e"],
Cell[20930, 545, 5763, 103, 366, "Output",ExpressionUUID->"415ce421-075c-4025-b29e-178d7df341b5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26730, 653, 431, 10, 28, "Input",ExpressionUUID->"7e01dac1-a7f9-4f46-abc9-f9c0ab44c32d"],
Cell[27164, 665, 3022, 77, 90, "Output",ExpressionUUID->"c13fdf2e-c2e1-4357-9f37-6c68506fbd1e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[30223, 747, 542, 12, 28, "Input",ExpressionUUID->"0445a0e5-e11c-4a7a-a09f-3d16dcd78917"],
Cell[30768, 761, 2623, 69, 71, "Output",ExpressionUUID->"c808be08-a618-4225-837c-df08c90a13c9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[33428, 835, 198, 4, 28, "Input",ExpressionUUID->"69448047-a7bc-4472-9402-1fde0eae24b1"],
Cell[33629, 841, 2598, 68, 71, "Output",ExpressionUUID->"512cd06a-dac5-4de2-b059-5e50cfc2ec01"]
}, Open  ]],
Cell[36242, 912, 105769, 1737, 260, "Input",ExpressionUUID->"a0bb9adf-02a5-4b18-a5f9-7162c4cb1987"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[142060, 2655, 177, 3, 67, "Section",ExpressionUUID->"afb39081-1171-48e5-a455-9277eb377f65"],
Cell[CellGroupData[{
Cell[142262, 2662, 850, 18, 28, "Input",ExpressionUUID->"62f97736-14ff-495e-aaca-099d9cb3799d"],
Cell[143115, 2682, 5932, 100, 172, "Output",ExpressionUUID->"1c2f0c16-9a01-47a3-b93b-85fe351a9df9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[149084, 2787, 270, 4, 28, "Input",ExpressionUUID->"c0e40e96-ee35-43e5-88ea-64909e7bcde1"],
Cell[149357, 2793, 769, 12, 32, "Output",ExpressionUUID->"6b6406b4-be5f-4a26-a718-db954015fb62"]
}, Open  ]],
Cell[CellGroupData[{
Cell[150163, 2810, 383, 7, 28, "Input",ExpressionUUID->"7cb5d2c4-ef14-4935-995e-108f6aec7659"],
Cell[150549, 2819, 3993, 74, 371, "Output",ExpressionUUID->"cfb6b22f-862c-43a0-83bd-b38bc0df756b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[154579, 2898, 366, 9, 28, "Input",ExpressionUUID->"5a341160-8365-47f2-8278-0b8a4b86d1dc"],
Cell[154948, 2909, 215, 4, 32, "Output",ExpressionUUID->"edf87a11-7615-4a8a-9c4d-c4255e1546ff"]
}, Open  ]],
Cell[CellGroupData[{
Cell[155200, 2918, 419, 10, 28, "Input",ExpressionUUID->"34e7ec17-594a-41d0-9571-04ddd36b4d6d"],
Cell[155622, 2930, 243, 4, 32, "Output",ExpressionUUID->"271891e6-ce46-4596-8329-fd7160ba2b5a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[155902, 2939, 547, 14, 28, "Input",ExpressionUUID->"f1160880-1ec6-4e17-ad25-46a11454083f"],
Cell[156452, 2955, 222, 6, 32, "Output",ExpressionUUID->"74f14e1b-179c-4ed1-af29-ae3f8e0a748b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[156711, 2966, 237, 4, 28, "Input",ExpressionUUID->"be06eed2-39f9-4ad7-bff2-ebca8d9a3f79"],
Cell[156951, 2972, 253, 6, 32, "Output",ExpressionUUID->"2a0b72d8-4762-48f7-acc4-395f568effa4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[157241, 2983, 652, 15, 28, "Input",ExpressionUUID->"3f41a6c0-96c2-4414-a090-456f2af86763",
 CellID->198792957],
Cell[157896, 3000, 2539, 56, 113, "Output",ExpressionUUID->"f45d74fe-87ba-40ed-ba83-dad5670790be"]
}, Open  ]],
Cell[CellGroupData[{
Cell[160472, 3061, 210, 5, 28, "Input",ExpressionUUID->"c71601ef-9712-4222-b514-726cba223c2c",
 CellID->355119011],
Cell[160685, 3068, 772, 23, 82, "Output",ExpressionUUID->"0f64ba6e-b367-4cf1-8dbe-97d4e2ee1f5b",
 CellID->514951707]
}, Open  ]],
Cell[161472, 3094, 267, 7, 28, "Input",ExpressionUUID->"e589ffba-72d3-4d99-8738-39c3d58c1566"],
Cell[CellGroupData[{
Cell[161764, 3105, 340, 7, 28, "Input",ExpressionUUID->"67ba7255-e0b5-4e56-8724-76d7ae73df8d"],
Cell[162107, 3114, 240, 5, 32, "Output",ExpressionUUID->"14645c35-a6c3-46ad-b158-d9d1bbed8dd8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[162384, 3124, 257, 5, 28, "Input",ExpressionUUID->"bb786523-4ee3-4c83-b235-638c101342d6"],
Cell[162644, 3131, 194, 4, 32, "Output",ExpressionUUID->"c4b7d152-e36d-45c1-81c1-fa419c6658f4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[162875, 3140, 260, 5, 28, "Input",ExpressionUUID->"eaf08260-f1bf-4743-af5a-829531e40517"],
Cell[163138, 3147, 195, 4, 32, "Output",ExpressionUUID->"cae22512-9f36-4589-8dbe-c5db1d12de72"]
}, Open  ]],
Cell[CellGroupData[{
Cell[163370, 3156, 388, 9, 28, "Input",ExpressionUUID->"edd2f785-bdc6-4a7e-850e-26d8376a7002"],
Cell[163761, 3167, 714, 16, 52, "Output",ExpressionUUID->"bc2d7058-8630-43d2-8ccd-8ec85da9b094"]
}, Open  ]],
Cell[CellGroupData[{
Cell[164512, 3188, 161, 3, 54, "Subsection",ExpressionUUID->"2c4fb308-d344-45f8-ba0c-6f8ee665c5dc"],
Cell[CellGroupData[{
Cell[164698, 3195, 2473, 60, 143, "Input",ExpressionUUID->"9dbad579-bef2-4d0d-8bcd-e19b824967ed"],
Cell[167174, 3257, 332, 8, 28, "Message",ExpressionUUID->"cf523c1d-c63a-402e-826a-dfb1745d1e93"],
Cell[167509, 3267, 668, 17, 52, "Output",ExpressionUUID->"27dea1ff-7f28-443d-b71e-d362c14c4546"]
}, Open  ]],
Cell[CellGroupData[{
Cell[168214, 3289, 763, 21, 28, "Input",ExpressionUUID->"82196e6c-0ea4-4754-b0db-38feeecff142"],
Cell[168980, 3312, 526, 11, 28, "Message",ExpressionUUID->"6a635e6f-5b64-4653-86bc-d853896e4ba3"],
Cell[169509, 3325, 865, 26, 32, "Output",ExpressionUUID->"6989edbd-d2bb-4af5-bfea-0449ef660433"]
}, Open  ]],
Cell[170389, 3354, 278, 7, 28, "Input",ExpressionUUID->"bd0754e3-4afc-4bc1-81e8-047e0ce654f0"],
Cell[170670, 3363, 4069, 101, 238, "Input",ExpressionUUID->"3011b6b1-17bc-4ec0-9bcd-b2ecb8c7cf5d"],
Cell[CellGroupData[{
Cell[174764, 3468, 297, 6, 28, "Input",ExpressionUUID->"9f3a2d0e-a357-4865-8bed-82c963a212ca"],
Cell[175064, 3476, 359, 9, 28, "Message",ExpressionUUID->"334ba7e1-ea36-43fc-b080-2a92dc3af960"],
Cell[175426, 3487, 168, 3, 32, "Output",ExpressionUUID->"1fa4e954-3933-47ee-9dce-89caff162d3e"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[175655, 3497, 143, 2, 67, "Section",ExpressionUUID->"a757b3a7-dfbd-4b61-843a-7ab99b000ddf"],
Cell[175801, 3501, 4765, 104, 181, "Input",ExpressionUUID->"18c08884-ec3f-472e-8b3c-ac0ac2800061"],
Cell[180569, 3607, 219, 6, 28, "Input",ExpressionUUID->"1a739e21-f3fd-4495-88b5-ec9fe4b930c9"],
Cell[CellGroupData[{
Cell[180813, 3617, 268, 6, 28, "Input",ExpressionUUID->"9f2f24ca-e381-4eb2-ae33-1669b281e8b8"],
Cell[181084, 3625, 332, 7, 32, "Output",ExpressionUUID->"682bbe80-965c-46f3-bfca-ba1a005f146d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[181453, 3637, 148, 3, 28, "Input",ExpressionUUID->"e2b1409a-1411-4704-9fe3-d98bbd545907"],
Cell[181604, 3642, 162, 3, 32, "Output",ExpressionUUID->"a6706b1c-21ce-4b5b-801c-bb8d1b81f34d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[181803, 3650, 201, 4, 28, "Input",ExpressionUUID->"cc694746-58ff-4bd2-8bf5-729d27d41a84"],
Cell[182007, 3656, 166, 3, 32, "Output",ExpressionUUID->"742099ea-9be0-4c08-8e09-5530cd7fce32"]
}, Open  ]],
Cell[CellGroupData[{
Cell[182210, 3664, 178, 4, 28, "Input",ExpressionUUID->"337582c2-3fff-41ca-8323-19c8a96d3c56"],
Cell[182391, 3670, 10923, 177, 298, "Output",ExpressionUUID->"8a800f18-7568-41ee-b261-6b10d08f6483"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[193363, 3853, 161, 3, 67, "Section",ExpressionUUID->"b7cc79d2-4b80-451e-b48b-3f3239594892"],
Cell[193527, 3858, 2428, 58, 162, "Input",ExpressionUUID->"38bb22ad-3f9a-4ce3-a17d-bd2778e4a200"],
Cell[CellGroupData[{
Cell[195980, 3920, 447, 11, 28, "Input",ExpressionUUID->"71731e92-6190-4b53-bc69-277e33c94e64"],
Cell[196430, 3933, 595, 12, 28, "Message",ExpressionUUID->"ac9dac1c-c9a6-4cea-82bb-891631ba8423"],
Cell[197028, 3947, 421, 11, 32, "Output",ExpressionUUID->"0b79d1c1-e6b0-4b11-a168-2dedd0505737"]
}, Open  ]],
Cell[197464, 3961, 354, 9, 28, "Input",ExpressionUUID->"b2c11055-734b-4b4a-83e2-327cbc5fb847"],
Cell[CellGroupData[{
Cell[197843, 3974, 336, 9, 28, "Input",ExpressionUUID->"e236ad7d-0e64-44e2-91b9-f52af7fb7807"],
Cell[198182, 3985, 1756, 29, 90, "Output",ExpressionUUID->"6d399696-5a89-4b6b-a411-bf8dcf482f33"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[199987, 4020, 223, 4, 67, "Section",ExpressionUUID->"f75ee31f-6913-4b57-8923-d9d1bf4f72b3"],
Cell[200213, 4026, 6454, 165, 542, "Input",ExpressionUUID->"c627857e-901c-47ae-8869-b69c525e1cd2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[206704, 4196, 156, 3, 67, "Section",ExpressionUUID->"04b8a6c1-48fe-40a2-974f-3fb1c87f028f"],
Cell[206863, 4201, 187459, 3077, 499, "Input",ExpressionUUID->"c05aad49-449d-49a6-8c73-ad8cdfa34e19"],
Cell[394325, 7280, 316, 7, 35, "Text",ExpressionUUID->"2a7c73c7-8953-4e65-b4ba-e92b89063718"],
Cell[CellGroupData[{
Cell[394666, 7291, 486, 10, 28, "Input",ExpressionUUID->"73450b7c-7982-4589-8f8f-85650a5f1b20"],
Cell[395155, 7303, 3281, 56, 273, "Output",ExpressionUUID->"f59322dc-eafa-4df9-8517-d594a0658c27"]
}, Open  ]],
Cell[CellGroupData[{
Cell[398473, 7364, 282, 5, 28, "Input",ExpressionUUID->"69b23903-0de9-4d6c-9c9b-90d2284fde65"],
Cell[398758, 7371, 10848, 225, 65, "Output",ExpressionUUID->"3482d66f-311a-47b6-a797-191a09cd9c5c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[409643, 7601, 318, 7, 28, "Input",ExpressionUUID->"78f7b9d0-f368-47df-b248-cb8ea7fe10b8"],
Cell[409964, 7610, 2723, 59, 285, "Output",ExpressionUUID->"3eab7195-edde-447b-95bb-83affdfcfc41"]
}, Open  ]],
Cell[CellGroupData[{
Cell[412724, 7674, 339, 8, 28, "Input",ExpressionUUID->"200cadf4-e8d8-4ac6-95eb-1943ffc6dede"],
Cell[413066, 7684, 4650, 79, 243, "Output",ExpressionUUID->"29adabb2-426b-43d1-9b21-5499d72c816f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[417753, 7768, 234, 4, 28, "Input",ExpressionUUID->"4edf6532-414a-43fa-94cd-da34d5feb8b7"],
Cell[417990, 7774, 10857, 227, 65, "Output",ExpressionUUID->"461e5698-9091-400e-985d-1ae31d68a5d3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[428884, 8006, 279, 5, 28, "Input",ExpressionUUID->"8dbbd73a-f7bc-4c31-b678-cc7f1cedd150"],
Cell[429166, 8013, 157, 3, 32, "Output",ExpressionUUID->"ce2d59c4-0286-4a60-beba-48728cb36d71"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[429372, 8022, 151, 3, 67, "Section",ExpressionUUID->"400dea35-f5e4-4044-9c6f-e1c6973898e6"],
Cell[CellGroupData[{
Cell[429548, 8029, 227, 4, 28, "Input",ExpressionUUID->"265e3a9c-ebb3-4829-bc7a-cf4ef26bee64"],
Cell[429778, 8035, 1922, 40, 52, "Output",ExpressionUUID->"6cc5ea4a-9444-48a0-9f49-52b72df32529"]
}, Open  ]],
Cell[CellGroupData[{
Cell[431737, 8080, 300, 7, 28, "Input",ExpressionUUID->"b45a049b-fedd-4be8-8d85-a705d2431937"],
Cell[432040, 8089, 1006, 22, 32, "Output",ExpressionUUID->"4d32ac28-3a6d-477d-b673-fa7f644ef064"]
}, Open  ]],
Cell[CellGroupData[{
Cell[433083, 8116, 301, 7, 28, "Input",ExpressionUUID->"228b06d7-ca1c-4afd-955d-7efd774aa6dc"],
Cell[433387, 8125, 1096, 23, 32, "Output",ExpressionUUID->"945403c6-a5ca-4562-aee4-137877b07749"]
}, Open  ]],
Cell[434498, 8151, 5641, 132, 295, "Input",ExpressionUUID->"f3285e79-f284-4954-9e63-fcedd3f2890b"],
Cell[CellGroupData[{
Cell[440164, 8287, 283, 5, 28, "Input",ExpressionUUID->"ddcca4b3-51bd-49e0-a1f4-a6665547646a"],
Cell[440450, 8294, 354, 8, 28, "Message",ExpressionUUID->"46739c59-d5ff-4280-87f4-068bc45aa3d1"],
Cell[440807, 8304, 1111, 24, 90, "Output",ExpressionUUID->"f11efeeb-d7cd-4846-99d5-4a23343a9230"]
}, Open  ]],
Cell[CellGroupData[{
Cell[441955, 8333, 252, 5, 28, "Input",ExpressionUUID->"e6db30ef-4f0f-475f-89f1-5594261fa27a"],
Cell[442210, 8340, 629, 11, 52, "Output",ExpressionUUID->"6281cd6c-4243-40d9-81e5-7e871edde198"]
}, Open  ]],
Cell[442854, 8354, 269233, 4417, 521, "Input",ExpressionUUID->"7327c8ea-255d-4d63-9de0-c8649a4d469c"],
Cell[CellGroupData[{
Cell[712112, 12775, 437, 12, 28, "Input",ExpressionUUID->"2bef2560-9749-4672-903c-098472eec99f"],
Cell[712552, 12789, 457, 10, 32, "Output",ExpressionUUID->"a9f20b09-736e-41ee-a775-2831676a1ed5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[713046, 12804, 227, 4, 28, "Input",ExpressionUUID->"b1d36198-ba3c-4203-a64c-e509280e6354"],
Cell[713276, 12810, 360, 7, 32, "Output",ExpressionUUID->"30e1cf78-8597-4c0b-b10e-646d82f6e6d6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[713673, 12822, 14451, 301, 129, "Input",ExpressionUUID->"ed3f5be7-2b6d-405a-bdea-8fb7523000e9"],
Cell[728127, 13125, 1252, 36, 32, "Output",ExpressionUUID->"a48cd1da-5538-4a0a-9f5f-57c8cb738ac2"]
}, Open  ]],
Cell[729394, 13164, 6948, 147, 129, "Input",ExpressionUUID->"e62123f3-e1e5-4f91-a55e-92f860ac4446"],
Cell[736345, 13313, 129, 1, 35, "Text",ExpressionUUID->"0bf6f723-61e2-4aa8-b14d-a6baddf7949d",
 CellID->1578242228],
Cell[CellGroupData[{
Cell[736499, 13318, 7024, 149, 129, "Input",ExpressionUUID->"1916a536-ee8c-4de9-9416-aa4707729480",
 CellID->1153148809],
Cell[743526, 13469, 301, 7, 32, "Output",ExpressionUUID->"7c5d20fa-fd65-4f17-8813-a674f44f28a5",
 CellID->367677599]
}, Open  ]],
Cell[743842, 13479, 409, 12, 48, "Input",ExpressionUUID->"3600d773-99f4-4f02-9e4f-b25fce7380e4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[744288, 13496, 159, 3, 67, "Section",ExpressionUUID->"ba0f9bfa-4a2b-478f-9026-a648a63a7593"],
Cell[CellGroupData[{
Cell[744472, 13503, 15096, 317, 129, "Input",ExpressionUUID->"69dc546a-4eaf-450e-8be7-70ce837e8837"],
Cell[759571, 13822, 794, 24, 32, "Output",ExpressionUUID->"51c4ce0c-b04e-40ce-980a-c5ca02ace668"]
}, Open  ]],
Cell[760380, 13849, 14659, 311, 129, "Input",ExpressionUUID->"3b39cec0-dec3-429c-aa67-d454acf67f4a"],
Cell[CellGroupData[{
Cell[775064, 14164, 15074, 317, 129, "Input",ExpressionUUID->"4636ff98-4ede-4452-b40d-a367207cef6a"],
Cell[790141, 14483, 796, 24, 32, "Output",ExpressionUUID->"2af0561a-6002-47f0-b9bd-29d677b5c27d"]
}, Open  ]],
Cell[790952, 14510, 242, 6, 28, "Input",ExpressionUUID->"893a9d40-63d4-4f00-8876-3c6e2b2894dc"],
Cell[CellGroupData[{
Cell[791219, 14520, 7234, 149, 129, "Input",ExpressionUUID->"9376d498-7e80-442f-814c-69e8d30b9c69"],
Cell[798456, 14671, 304, 8, 32, "Output",ExpressionUUID->"0859426e-9a97-42f7-9073-fd9612189d39"]
}, Open  ]],
Cell[CellGroupData[{
Cell[798797, 14684, 14734, 306, 129, "Input",ExpressionUUID->"c856cf2d-90c3-468e-8612-bdde39ed3160"],
Cell[813534, 14992, 380, 9, 32, "Output",ExpressionUUID->"56995b6e-7a8d-4466-b259-b85117990a44"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[813963, 15007, 153, 3, 67, "Section",ExpressionUUID->"c905aa83-c265-4f43-bb27-5a0c9113a046"],
Cell[814119, 15012, 4175, 102, 143, "Input",ExpressionUUID->"28e75d98-2bec-461d-aa90-0e8ae05cd5ab"],
Cell[818297, 15116, 7692, 162, 129, "Input",ExpressionUUID->"6b85344d-4527-4a60-99e0-5720160f48d9"],
Cell[CellGroupData[{
Cell[826014, 15282, 239, 4, 28, "Input",ExpressionUUID->"b40217f7-19f6-4764-a02f-0d406fb9f172"],
Cell[826256, 15288, 427, 10, 28, "Message",ExpressionUUID->"299d3935-f8d5-4d9b-8371-22295a7c31f1"],
Cell[826686, 15300, 427, 10, 28, "Message",ExpressionUUID->"2906cfbe-e2c4-4315-9e2b-0f2f1c5f5785"],
Cell[827116, 15312, 425, 10, 28, "Message",ExpressionUUID->"f1dda3fb-2ec8-45e1-ab64-66e115bc9be8"],
Cell[827544, 15324, 479, 10, 28, "Message",ExpressionUUID->"811500a2-0b5b-45fd-a37e-46c43ec65943"],
Cell[828026, 15336, 882, 16, 28, "Message",ExpressionUUID->"cde7caf2-c648-4b77-87b8-e44676881d85"],
Cell[828911, 15354, 879, 16, 28, "Message",ExpressionUUID->"9cbb8d06-c6d8-4e0f-aa3b-83c079c08095"],
Cell[829793, 15372, 505, 11, 28, "Message",ExpressionUUID->"1dc5781c-a349-4a92-a789-595259f214af"],
Cell[830301, 15385, 475, 10, 28, "Message",ExpressionUUID->"0c6e4238-0c99-458b-b190-693136779909"],
Cell[830779, 15397, 8456, 119, 101, "Message",ExpressionUUID->"fcef4cdf-89b5-45cf-a2f1-5bc86aa3923f"],
Cell[839238, 15518, 487, 11, 28, "Message",ExpressionUUID->"5000d793-10c0-4754-ba3e-44d9402a752e"],
Cell[839728, 15531, 489, 11, 28, "Message",ExpressionUUID->"fdb538de-b784-42ce-98ae-867c5696dea5"],
Cell[840220, 15544, 489, 11, 28, "Message",ExpressionUUID->"901bc7ed-915b-4ea7-a449-c19cee8a35b2"],
Cell[840712, 15557, 477, 10, 28, "Message",ExpressionUUID->"c0ea9d4b-9728-4ac1-b00e-f2cf41e4a748"],
Cell[841192, 15569, 1014, 18, 46, "Message",ExpressionUUID->"a6da2631-a0da-48f5-9fac-e07686cf0c27"],
Cell[842209, 15589, 19403, 474, 375, "Output",ExpressionUUID->"7bd7219f-123b-4ac8-b022-984ee55fe671"]
}, Open  ]],
Cell[CellGroupData[{
Cell[861649, 16068, 267, 5, 28, "Input",ExpressionUUID->"89810ba0-43c3-4e72-9343-2e419f767dae"],
Cell[861919, 16075, 431, 10, 28, "Message",ExpressionUUID->"3823add7-85e4-4114-bd27-af6876cc2618"],
Cell[862353, 16087, 431, 10, 28, "Message",ExpressionUUID->"a874a6f6-d0fb-4f83-bddd-780a563afbdf"],
Cell[862787, 16099, 429, 10, 28, "Message",ExpressionUUID->"f56aab37-c841-4195-8a1b-82bca37e2671"],
Cell[863219, 16111, 479, 10, 28, "Message",ExpressionUUID->"f3edc015-79a2-4996-9034-876fba652a4f"],
Cell[863701, 16123, 884, 16, 28, "Message",ExpressionUUID->"2198cd6a-0c46-4edd-8bf8-45e1be38b53a"],
Cell[864588, 16141, 882, 16, 28, "Message",ExpressionUUID->"752fd60c-cfd2-4d26-8030-b90b36b0e06a"],
Cell[865473, 16159, 509, 11, 28, "Message",ExpressionUUID->"9ea06203-dcbd-41f5-a44f-b2743f96edc1"],
Cell[865985, 16172, 475, 10, 28, "Message",ExpressionUUID->"ba8a2e04-5b38-4ab4-b774-3ba01e4cd1b0"],
Cell[866463, 16184, 15042, 399, 286, "Echo",ExpressionUUID->"e16b3e85-d8ec-4b82-9ebb-4898467f61b8"],
Cell[881508, 16585, 8456, 119, 101, "Message",ExpressionUUID->"cf347a12-5248-4271-bb82-8bc9b869fbe6"],
Cell[889967, 16706, 8458, 119, 101, "Message",ExpressionUUID->"15fc2acd-e624-4a4b-b7f4-2d33dcab6c20"],
Cell[898428, 16827, 17401, 422, 356, "Output",ExpressionUUID->"05c239a4-fb96-47c2-a261-48db64cf8ea4"]
}, Open  ]],
Cell[915844, 17252, 235, 5, 28, "Input",ExpressionUUID->"abaed4f0-be82-4b9d-836d-774cdc56b2b2"]
}, Open  ]]
}
]
*)

